[Perflib]
Base Index = 1847
Last Counter = 13526
Last Help = 13527

[PERF_.NET CLR Data]
First Counter = 5028
First Help = 5029
Last Counter = 5040
Last Help = 5041

[PERF_.NET CLR Networking]
First Counter = 4986
First Help = 4987
Last Counter = 4996
Last Help = 4997

[PERF_.NET CLR Networking 4.0.0.0]
First Counter = 7002
First Help = 7003
Last Counter = 7028
Last Help = 7029

[PERF_.NET Data Provider for Oracle]
First Counter = 5218
First Help = 5219
Last Counter = 5246
Last Help = 5247

[PERF_.NET Data Provider for SqlServer]
First Counter = 4998
First Help = 4999
Last Counter = 5026
Last Help = 5027

[PERF_.NET Memory Cache 4.0]
First Counter = 7030
First Help = 7031
Last Counter = 7044
Last Help = 7045

[PERF_.NETFramework]
First Counter = 5042
First Help = 5043
Last Counter = 5216
Last Help = 5217

[PERF_ASP.NET]
First Counter = 11900
First Help = 11901
Last Counter = 12124
Last Help = 12125
Disable Performance Counters = 4

[PERF_ASP.NET_2.0.50727]
First Counter = 12910
First Help = 12911
Last Counter = 13114
Last Help = 13115
Disable Performance Counters = 4

[PERF_ASP.NET_4.0.30319]
First Counter = 11214
First Help = 11215
Last Counter = 11438
Last Help = 11439

[PERF_ASP.NET_64]
First Counter = 13322
First Help = 13323
Last Counter = 13526
Last Help = 13527
Disable Performance Counters = 2

[PERF_ASP.NET_64_2.0.50727]
First Counter = 13116
First Help = 13117
Last Counter = 13320
Last Help = 13321
Disable Performance Counters = 2

[PERF_aspnet_state]
First Counter = 11666
First Help = 11667
Last Counter = 11898
Last Help = 11899

[PERF_BITS]
First Counter = 2156
First Help = 2157
Last Counter = 2172
Last Help = 2173

[PERF_ESENT]
First Counter = 3206
First Help = 3207
Last Counter = 4302
Last Help = 4303

[PERF_MSDTC]
First Counter = 4304
First Help = 4305
Last Counter = 4330
Last Help = 4331

[PERF_MSDTC Bridge 3.0.0.0]
First Counter = 6176
First Help = 6177
Last Counter = 6198
Last Help = 6199

[PERF_MSDTC Bridge 4.0.0.0]
First Counter = 10284
First Help = 10285
Last Counter = 10306
Last Help = 10307

[PERF_rdyboost]
First Counter = 5660
First Help = 5661
Last Counter = 5680
Last Help = 5681

[PERF_RemoteAccess]
First Counter = 2206
First Help = 2207
Last Counter = 2244
Last Help = 2245

[PERF_ServiceModelEndpoint 3.0.0.0]
First Counter = 5952
First Help = 5953
Last Counter = 5990
Last Help = 5991

[PERF_ServiceModelOperation 3.0.0.0]
First Counter = 6114
First Help = 6115
Last Counter = 6144
Last Help = 6145

[PERF_ServiceModelService 3.0.0.0]
First Counter = 6046
First Help = 6047
Last Counter = 6112
Last Help = 6113

[PERF_SMSvcHost 3.0.0.0]
First Counter = 6146
First Help = 6147
Last Counter = 6174
Last Help = 6175

[PERF_SMSvcHost 4.0.0.0]
First Counter = 10254
First Help = 10255
Last Counter = 10282
Last Help = 10283

[PERF_TapiSrv]
First Counter = 2186
First Help = 2187
Last Counter = 2204
Last Help = 2205

[PERF_TermService]
First Counter = 4332
First Help = 4333
Last Counter = 4452
Last Help = 4453

[PERF_UGatherer]
First Counter = 5354
First Help = 5355
Last Counter = 5458
Last Help = 5459

[PERF_UGTHRSVC]
First Counter = 5460
First Help = 5461
Last Counter = 5530
Last Help = 5531

[PERF_usbhub]
First Counter = 4950
First Help = 4951
Last Counter = 4984
Last Help = 4985

[PERF_Windows Workflow Foundation 3.0.0.0]
First Counter = 5908
First Help = 5909
Last Counter = 5950
Last Help = 5951

[PERF_Windows Workflow Foundation 4.0.0.0]
First Counter = 10308
First Help = 10309
Last Counter = 10350
Last Help = 10351

[PERF_WSearchIdxPi]
First Counter = 5532
First Help = 5533
Last Counter = 5658
Last Help = 5659

[PerfStrings_009]
1 = 1847
2 = System
3 = The System performance object consists of counters that apply to more than one instance of a component processors on the computer.
4 = Memory
5 = The Memory performance object  consists of counters that describe the behavior of physical and virtual memory on the computer.  Physical memory is the amount of random access memory on the computer.  Virtual memory consists of the space in physical memory and on disk.  Many of the memory counters monitor paging, which is the movement of pages of code and data between disk and physical memory.  Excessive paging, a symptom of a memory shortage, can cause delays which interfere with all system processes.
6 = % Processor Time
7 = % Processor Time is the percentage of elapsed time that the processor spends to execute a non-Idle thread. It is calculated by measuring the percentage of time that the processor spends executing the idle thread and then subtracting that value from 100%. (Each processor has an idle thread that consumes cycles when no other threads are ready to run). This counter is the primary indicator of processor activity, and displays the average percentage of busy time observed during the sample interval. It should be noted that the accounting calculation of whether the processor is idle is performed at an internal sampling interval of the system clock (10ms). On todays fast processors, % Processor Time can therefore underestimate the processor utilization as the processor may be spending a lot of time servicing threads between the system clock sampling interval. Workload based timer applications are one example  of applications  which are more likely to be measured inaccurately as timers are signaled just after the sample is taken.
9 = % Total DPC Time is the average percentage of time that all processors spend receiving and servicing deferred procedure calls (DPCs).  (DPCs are interrupts that run at a lower priority than the standard interrupts). It is the sum of Processor: % DPC Time for all processors on the computer, divided by the number of processors.  System: % Total DPC Time is a component of System: % Total Privileged Time because DPCs are executed in privileged mode.  DPCs are counted separately and are not a component of the interrupt count.  This counter displays the average busy time as a percentage of the sample time.
10 = File Read Operations/sec
11 = File Read Operations/sec is the combined rate of file system read requests to all devices on the computer, including requests to read from the file system cache.  It is measured in numbers of reads.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
12 = File Write Operations/sec
13 = File Write Operations/sec is the combined rate of the file system write requests to all devices on the computer, including requests to write to data in the file system cache.  It is measured in numbers of writes. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
14 = File Control Operations/sec
15 = File Control Operations/sec is the combined rate of file system operations that are neither reads nor writes, such as file system control requests and requests for information about device characteristics or status.  This is the inverse of System: File Data Operations/sec and is measured in number of operations perf second.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
16 = File Read Bytes/sec
17 = File Read Bytes/sec is the overall rate at which bytes are read to satisfy  file system read requests to all devices on the computer, including reads from the file system cache.  It is measured in number of bytes per second.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
18 = File Write Bytes/sec
19 = File Write Bytes/sec is the overall rate at which bytes are written to satisfy file system write requests to all devices on the computer, including writes to the file system cache.  It is measured in number of bytes per second.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
20 = File Control Bytes/sec
21 = File Control Bytes/sec is the overall rate at which bytes are transferred for all file system operations that are neither reads nor writes, including file system control requests and requests for information about device characteristics or status.  It is measured in numbers of bytes.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
23 = % Total Interrupt Time is the average percentage of time that all processors spend receiving and servicing hardware interrupts during sample intervals, where the value is an indirect indicator of the activity of devices that generate interrupts. It is the sum of Processor: % Interrupt Time for of all processors on the computer, divided by the number of processors.  DPCs are counted separately and are not a component of the interrupt count.  This value is an indirect indicator of the activity of devices that generate interrupts, such as the system timer, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices.
24 = Available Bytes
25 = Available Bytes is the amount of physical memory, in bytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
26 = Committed Bytes
27 = Committed Bytes is the amount of committed virtual memory, in bytes. Committed memory is the physical memory which has space reserved on the disk paging file(s). There can be one or more paging files on each physical drive. This counter displays the last observed value only; it is not an average.
28 = Page Faults/sec
29 = Page Faults/sec is the average number of pages faulted per second. It is measured in number of pages faulted per second because only one page is faulted in each fault operation, hence this is also equal to the number of page fault operations. This counter includes both hard faults (those that require disk access) and soft faults (where the faulted page is found elsewhere in physical memory.) Most processors can handle large numbers of soft faults without significant consequence. However, hard faults, which require disk access, can cause significant delays.
30 = Commit Limit
31 = Commit Limit is the amount of virtual memory that can be committed without having to extend the paging file(s).  It is measured in bytes. Committed memory is the physical memory which has space reserved on the disk paging files. There can be one paging file on each logical drive). If the paging file(s) are be expanded, this limit increases accordingly.  This counter displays the last observed value only; it is not an average.
32 = Write Copies/sec
33 = Write Copies/sec is the rate at which page faults are caused by attempts to write that have been satisfied by coping of the page from elsewhere in physical memory. This is an economical way of sharing data since pages are only copied when they are written to; otherwise, the page is shared. This counter shows the number of copies, without regard for the number of pages copied in each operation.
34 = Transition Faults/sec
35 = Transition Faults/sec is the rate at which page faults are resolved by recovering pages that were being used by another process sharing the page, or were on the modified page list or the standby list, or were being written to disk at the time of the page fault. The pages were recovered without additional disk activity. Transition faults are counted in numbers of faults; because only one page is faulted in each operation, it is also equal to the number of pages faulted.
36 = Cache Faults/sec
37 = Cache Faults/sec is the rate at which faults occur when a page sought in the file system cache is not found and must be retrieved from elsewhere in memory (a soft fault) or from disk (a hard fault). The file system cache is an area of physical memory that stores recently used pages of data for applications. Cache activity is a reliable indicator of most application I/O operations. This counter shows the number of faults, without regard for the number of pages faulted in each operation.
38 = Demand Zero Faults/sec
39 = Demand Zero Faults/sec is the rate at which a zeroed page is required to satisfy the fault.  Zeroed pages, pages emptied of previously stored data and filled with zeros, are a security feature of Windows that prevent processes from seeing data stored by earlier processes that used the memory space. Windows maintains a list of zeroed pages to accelerate this process. This counter shows the number of faults, without regard to the number of pages retrieved to satisfy the fault. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
40 = Pages/sec
41 = Pages/sec is the rate at which pages are read from or written to disk to resolve hard page faults. This counter is a primary indicator of the kinds of faults that cause system-wide delays.  It is the sum of Memory\\Pages Input/sec and Memory\\Pages Output/sec.  It is counted in numbers of pages, so it can be compared to other counts of pages, such as Memory\\Page Faults/sec, without conversion. It includes pages retrieved to satisfy faults in the file system cache (usually requested by applications) non-cached mapped memory files.
42 = Page Reads/sec
43 = Page Reads/sec is the rate at which the disk was read to resolve hard page faults. It shows the number of reads operations, without regard to the number of pages retrieved in each operation. Hard page faults occur when a process references a page in virtual memory that is not in working set or elsewhere in physical memory, and must be retrieved from disk. This counter is a primary indicator of the kinds of faults that cause system-wide delays. It includes read operations to satisfy faults in the file system cache (usually requested by applications) and in non-cached mapped memory files. Compare the value of Memory\\Pages Reads/sec to the value of Memory\\Pages Input/sec to determine the average number of pages read during each operation.
44 = Processor Queue Length
45 = Processor Queue Length is the number of threads in the processor queue.  Unlike the disk counters, this counter counters, this counter shows ready threads only, not threads that are running.  There is a single queue for processor time even on computers with multiple processors. Therefore, if a computer has multiple processors, you need to divide this value by the number of processors servicing the workload. A sustained processor queue of less than 10 threads per processor is normally acceptable, dependent of the workload.
46 = Thread State
47 = Thread State is the current state of the thread.  It is 0 for Initialized, 1 for Ready, 2 for Running, 3 for Standby, 4 for Terminated, 5 for Wait, 6 for Transition, 7 for Unknown.  A Running thread is using a processor; a Standby thread is about to use one.  A Ready thread wants to use a processor, but is waiting for a processor because none are free.  A thread in Transition is waiting for a resource in order to execute, such as waiting for its execution stack to be paged in from disk.  A Waiting thread has no use for the processor because it is waiting for a peripheral operation to complete or a resource to become free.
48 = Pages Output/sec
49 = Pages Output/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written back to disk only if they are changed in physical memory, so they are likely to hold data, not code. A high rate of pages output might indicate a memory shortage. Windows writes more pages back to disk to free up space when physical memory is in short supply.  This counter shows the number of pages, and can be compared to other counts of pages, without conversion.
50 = Page Writes/sec
51 = Page Writes/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written to disk only if they are changed while in physical memory, so they are likely to hold data, not code.  This counter shows write operations, without regard to the number of pages written in each operation.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
52 = Browser
53 = The Browser performance object consists of counters that measure the rates of announcements, enumerations, and other Browser transmissions.
54 = Announcements Server/sec
55 = Announcements Server/sec is the rate at which the servers in this domain have announced themselves to this server.
56 = Pool Paged Bytes
57 = Pool Paged Bytes is the size, in bytes, of the paged pool, an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used.  Memory\\Pool Paged Bytes is calculated differently than Process\\Pool Paged Bytes, so it might not equal Process\\Pool Paged Bytes\\_Total. This counter displays the last observed value only; it is not an average.
58 = Pool Nonpaged Bytes
59 = Pool Nonpaged Bytes is the size, in bytes, of the nonpaged pool, an area of system memory (physical memory used by the operating system) for objects that cannot be written to disk, but must remain in physical memory as long as they are allocated.  Memory\\Pool Nonpaged Bytes is calculated differently than Process\\Pool Nonpaged Bytes, so it might not equal Process\\Pool Nonpaged Bytes\\_Total.  This counter displays the last observed value only; it is not an average.
60 = Pool Paged Allocs
61 = Pool Paged Allocs is the number of calls to allocate space in the paged pool. The paged pool is an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used. It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.
63 = Pool Paged Resident Bytes is the current size, in bytes, of the paged pool. The paged pool is an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used. Space used by the paged and nonpaged pools are taken from physical memory, so a pool that is too large denies memory space to processes. This counter displays the last observed value only; it is not an average.
64 = Pool Nonpaged Allocs
65 = Pool Nonpaged Allocs is the number of calls to allocate space in the nonpaged pool. The nonpaged pool is an area of system memory area for objects that cannot be written to disk, and must remain in physical memory as long as they are allocated.  It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.
66 = Pool Paged Resident Bytes
67 = Bytes Total/sec is the total rate of bytes sent to or received from the network by the protocol, but only for the frames (packets) which carry data. This is the sum of Frame Bytes/sec and Datagram Bytes/sec.
68 = System Code Total Bytes
69 = System Code Total Bytes is the size, in bytes, of the pageable operating system code currently in virtual memory. It is a measure of the amount of physical memory being used by the operating system that can be written to disk when not in use. This value is calculated by summing the bytes in Ntoskrnl.exe, Hal.dll, the boot drivers, and file systems loaded by Ntldr/osloader.  This counter does not include code that must remain in physical memory and cannot be written to disk. This counter displays the last observed value only; it is not an average.
70 = System Code Resident Bytes
71 = System Code Resident Bytes is the size, in bytes of the operating system code currently in physical memory that can be written to disk when not in use. This value is a component of Memory\\System Code Total Bytes, which also includes operating system code on disk. Memory\\System Code Resident Bytes (and Memory\\System Code Total Bytes) does not include code that must remain in physical memory and cannot be written to disk. This counter displays the last observed value only; it is not an average.
72 = System Driver Total Bytes
73 = System Driver Total Bytes is the size, in bytes, of the pageable virtual memory currently being used by device drivers. Pageable memory can be written to disk when it is not being used. It includes physical memory (Memory\\System Driver Resident Bytes) and code and data paged to disk. It is a component of Memory\\System Code Total Bytes. This counter displays the last observed value only; it is not an average.
74 = System Driver Resident Bytes
75 = System Driver Resident Bytes is the size, in bytes, of the pageable physical memory being used by device drivers. It is the working set (physical memory area) of the drivers. This value is a component of Memory\\System Driver Total Bytes, which also includes driver memory that has been written to disk. Neither Memory\\System Driver Resident Bytes nor Memory\\System Driver Total Bytes includes memory that cannot be written to disk.
76 = System Cache Resident Bytes
77 = System Cache Resident Bytes is the size, in bytes, of the pageable operating system code in the file system cache. This value includes only current physical pages and does not include any virtual memory pages not currently resident. It does equal the System Cache value shown in Task Manager. As a result, this value may be smaller than the actual amount of virtual memory in use by the file system cache. This value is a component of Memory\\System Code Resident Bytes which represents all pageable operating system code that is currently in physical memory. This counter displays the last observed value only; it is not an average.
78 = Announcements Domain/sec
79 = Announcements Domain/sec is the rate at which a domain has announced itself to the network.
80 = Election Packets/sec
81 = Election Packets/sec is the rate at which browser election packets have been received by this workstation.
82 = Mailslot Writes/sec
83 = Mailslot Writes/sec is the rate at which mailslot messages have been successfully received.
84 = Server List Requests/sec
85 = Server List Requests/sec is the rate at which requests to retrieve a list of browser servers have been processed by this workstation.
86 = Cache
87 = The Cache performance object  consists of counters that monitor the file system cache, an area of physical memory that stores recently used data as long as possible to permit access to the data without having to read from the disk.  Because applications typically use the cache, the cache is monitored as an indicator of application I/O operations.  When memory is plentiful, the cache can grow, but when memory is scarce, the cache can become too small to be effective.
88 = Data Maps/sec
89 = Data Maps/sec is the frequency that a file system such as NTFS, maps a page of a file into the file system cache to read the page.
90 = Sync Data Maps/sec
91 = Sync Data Maps/sec counts the frequency that a file system, such as NTFS, maps a page of a file into the file system cache to read the page, and wishes to wait for the page to be retrieved if it is not in main memory.
92 = Async Data Maps/sec
93 = Async Data Maps/sec is the frequency that an application using a file system, such as NTFS, to map a page of a file into the file system cache to read the page, and does not wait for the page to be retrieved if it is not in main memory.
94 = Data Map Hits %
95 = Data Map Hits is the percentage of data maps in the file system cache that could be resolved without having to retrieve a page from the disk, because the page was already in physical memory.
96 = Data Map Pins/sec
97 = Data Map Pins/sec is the frequency of data maps in the file system cache that resulted in pinning a page in main memory, an action usually preparatory to writing to the file on disk.   While pinned, a page's physical address in main memory and virtual address in the file system cache will not be altered.
98 = Pin Reads/sec
99 = Pin Reads/sec is the frequency of reading data into the file system cache preparatory to writing the data back to disk.  Pages read in this fashion are pinned in memory at the completion of the read.  While pinned, a page's physical address in the file system cache will not be altered.
100 = Sync Pin Reads/sec
101 = Sync Pin Reads/sec is the frequency of reading data into the file system cache preparatory to writing the data back to disk.  Pages read in this fashion are pinned in memory at the completion of the read.  The file system will not regain control until the page is pinned in the file system cache, in particular if the disk must be accessed to retrieve the page.  While pinned, a page's physical address in the file system cache will not be altered.
102 = Async Pin Reads/sec
103 = Async Pin Reads/sec is the frequency of reading data into the file system cache preparatory to writing the data back to disk.  Pages read in this fashion are pinned in memory at the completion of the read.  The file system will regain control immediately even if the disk must be accessed to retrieve the page.  While pinned, a page's physical address will not be altered.
104 = Pin Read Hits %
105 = Pin Read Hits is the percentage of pin read requests that hit the file system cache, i.e., did not require a disk read in order to provide access to the page in the file system cache.  While pinned, a page's physical address in the file system cache will not be altered.  The LAN Redirector uses this method for retrieving data from the cache, as does the LAN Server for small transfers.  This is usually the method used by the disk file systems as well.
106 = Copy Reads/sec
107 = Copy Reads/sec is the frequency of reads from pages of the file system cache that involve a memory copy of the data from the cache to the application's buffer.  The LAN Redirector uses this method for retrieving information from the file system cache, as does the LAN Server for small transfers.  This is a method used by the disk file systems as well.
108 = Sync Copy Reads/sec
109 = Sync Copy Reads/sec is the frequency of reads from pages of the file system cache that involve a memory copy of the data from the cache to the application's buffer.  The file system will not regain control until the copy operation is complete, even if the disk must be accessed to retrieve the page.
110 = Async Copy Reads/sec
111 = Async Copy Reads/sec is the frequency of reads from pages of the file system cache that involve a memory copy of the data from the cache to the application's buffer.  The application will regain control immediately even if the disk must be accessed to retrieve the page.
112 = Copy Read Hits %
113 = Copy Read Hits is the percentage of cache copy read requests that hit the cache, that is, they did not require a disk read in order to provide access to the page in the cache.  A copy read is a file read operation that is satisfied by a memory copy from a page in the cache to the application's buffer.  The LAN Redirector uses this method for retrieving information from the cache, as does the LAN Server for small transfers.  This is a method used by the disk file systems as well.
114 = MDL Reads/sec
115 = MDL Reads/sec is the frequency of reads from the file system cache that use a Memory Descriptor List (MDL) to access the data.  The MDL contains the physical address of each page involved in the transfer, and thus can employ a hardware Direct Memory Access (DMA) device to effect the copy.  The LAN Server uses this method for large transfers out of the server.
116 = Sync MDL Reads/sec
117 = Sync MDL Reads/sec is the frequency of reads from the file system cache that use a Memory Descriptor List (MDL) to access the pages.  The MDL contains the physical address of each page in the transfer, thus permitting Direct Memory Access (DMA) of the pages.  If the accessed page(s) are not in main memory, the caller will wait for the pages to fault in from the disk.
118 = Async MDL Reads/sec
119 = Async MDL Reads/sec is the frequency of reads from the file system cache that use a Memory Descriptor List (MDL) to access the pages.  The MDL contains the physical address of each page in the transfer, thus permitting Direct Memory Access (DMA) of the pages.  If the accessed page(s) are not in main memory, the calling application program will not wait for the pages to fault in from disk.
120 = MDL Read Hits %
121 = MDL Read Hits is the percentage of Memory Descriptor List (MDL) Read requests to the file system cache that hit the cache, i.e., did not require disk accesses in order to provide memory access to the page(s) in the cache.
122 = Read Aheads/sec
123 = Read Aheads/sec is the frequency of reads from the file system cache in which the Cache detects sequential access to a file.  The read aheads permit the data to be transferred in larger blocks than those being requested by the application, reducing the overhead per access.
124 = Fast Reads/sec
125 = Fast Reads/sec is the frequency of reads from the file system cache that bypass the installed file system and retrieve the data directly from the cache.  Normally, file I/O requests invoke the appropriate file system to retrieve data from a file, but this path permits direct retrieval of data from the cache without file system involvement if the data is in the cache.  Even if the data is not in the cache, one invocation of the file system is avoided.
126 = Sync Fast Reads/sec
127 = Sync Fast Reads/sec is the frequency of reads from the file system cache that bypass the installed file system and retrieve the data directly from the cache.  Normally, file I/O requests invoke the appropriate file system to retrieve data from a file, but this path permits direct retrieval of data from the cache without file system involvement if the data is in the cache.  Even if the data is not in the cache, one invocation of the file system is avoided.  If the data is not in the cache, the request (application program call) will wait until the data has been retrieved from disk.
128 = Async Fast Reads/sec
129 = Async Fast Reads/sec is the frequency of reads from the file system cache that bypass the installed file system and retrieve the data directly from the cache.  Normally, file I/O requests will invoke the appropriate file system to retrieve data from a file, but this path permits data to be retrieved from the cache directly (without file system involvement) if the data is in the cache.  Even if the data is not in the cache, one invocation of the file system is avoided.  If the data is not in the cache, the request (application program call) will not wait until the data has been retrieved from disk, but will get control immediately.
130 = Fast Read Resource Misses/sec
131 = Fast Read Resource Misses/sec is the frequency of cache misses necessitated by the lack of available resources to satisfy the request.
132 = Fast Read Not Possibles/sec
133 = Fast Read Not Possibles/sec is the frequency of attempts by an Application Program Interface (API) function call to bypass the file system to get to data in the file system cache that could not be honored without invoking the file system.
134 = Lazy Write Flushes/sec
135 = Lazy Write Flushes/sec is the rate at which the Lazy Writer thread has written to disk.  Lazy Writing is the process of updating the disk after the page has been changed in memory, so that the application that changed the file does not have to wait for the disk write to be complete before proceeding.  More than one page can be transferred by each write operation.
136 = Lazy Write Pages/sec
137 = Lazy Write Pages/sec is the rate at which the Lazy Writer thread has written to disk.  Lazy Writing is the process of updating the disk after the page has been changed in memory, so that the application that changed the file does not have to wait for the disk write to be complete before proceeding.  More than one page can be transferred on a single disk write operation.
138 = Data Flushes/sec
139 = Data Flushes/sec is the rate at which the file system cache has flushed its contents to disk as the result of a request to flush or to satisfy a write-through file write request.  More than one page can be transferred on each flush operation.
140 = Data Flush Pages/sec
141 = Data Flush Pages/sec is the number of pages the file system cache has flushed to disk as a result of a request to flush or to satisfy a write-through file write request.  More than one page can be transferred on each flush operation.
142 = % User Time
143 = % User Time is the percentage of elapsed time the processor spends in the user mode. User mode is a restricted processing mode designed for applications, environment subsystems, and integral subsystems.  The alternative, privileged mode, is designed for operating system components and allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services. This counter displays the average busy time as a percentage of the sample time.
144 = % Privileged Time
145 = % Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode.  When a Windows system service in called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
146 = Context Switches/sec
147 = Context Switches/sec is the combined rate at which all processors on the computer are switched from one thread to another.  Context switches occur when a running thread voluntarily relinquishes the processor, is preempted by a higher priority ready thread, or switches between user-mode and privileged (kernel) mode to use an Executive or subsystem service.  It is the sum of Thread\\Context Switches/sec for all threads running on all processors in the computer and is measured in numbers of switches.  There are context switch counters on the System and Thread objects. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
148 = Interrupts/sec
149 = Interrupts/sec is the average rate, in incidents per second, at which the processor received and serviced hardware interrupts. It does not include deferred procedure calls (DPCs), which are counted separately. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards, and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended. The system clock typically interrupts the processor every 10 milliseconds, creating a background of interrupt activity. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
150 = System Calls/sec
151 = System Calls/sec is the combined rate of calls to operating system service routines by all processes running on the computer. These routines perform all of the basic scheduling and synchronization of activities on the computer, and provide access to non-graphic devices, memory management, and name space management. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
152 = Level 1 TLB Fills/sec
153 = Level 1 TLB Fills/sec is the frequency of faults that occur when reference is made to memory whose Page Table Entry (PTE) is not in the Translation Lookaside Buffer (TLB).  On some computers this fault is handled by software loading the PTE into the TLB, and this counter is incremented.
154 = Level 2 TLB Fills/sec
155 = Level 2 TLB Fills/sec is the frequency of faults that occur when reference is made to memory whose Page Table Entry (PTE) is not in the Translation Lookaside Buffer (TLB), nor is the page containing the PTE.  On some computers this fault is handled by software loading the PTE into the TLB, and this counter is incremented.
156 = Enumerations Server/sec
157 = % User Time is the percentage of elapsed time that the process threads spent executing code in user mode. Applications, environment subsystems, and integral subsystems execute in user mode. Code executing in user mode cannot damage the integrity of the Windows executive, kernel, and device drivers. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
158 = Enumerations Domain/sec
159 = % Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode. When a Windows system service is called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
160 = Enumerations Other/sec
161 = Enumerations Server/sec is the rate at which server browse requests have been processed by this workstation.
162 = Missed Server Announcements
163 = Enumerations Domain/sec is the rate at which domain browse requests have been processed by this workstation.
164 = Missed Mailslot Datagrams
165 = Enumerations Other/sec is the rate at which browse requests processed by this workstation are not domain or server browse requests.
166 = Missed Server List Requests
167 = Missed Server Announcements is the number of server announcements that have been missed due to configuration or allocation limits.
168 = Server Announce Allocations Failed/sec
169 = Missed Mailslot Datagrams is the number of Mailslot Datagrams that have been discarded due to configuration or allocation limits.
170 = Mailslot Allocations Failed
171 = Missed Server List Requests is the number of requests to retrieve a list of browser servers that were received by this workstation, but could not be processed.
172 = Virtual Bytes Peak
173 = Virtual Bytes Peak is the maximum size, in bytes, of virtual address space the process has used at any one time. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. However, virtual space is finite, and the process might limit its ability to load libraries.
174 = Virtual Bytes
175 = Virtual Bytes is the current size, in bytes, of the virtual address space the process is using. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. Virtual space is finite, and the process can limit its ability to load libraries.
177 = Page Faults/sec is the rate at which page faults by the threads executing in this process are occurring.  A page fault occurs when a thread refers to a virtual memory page that is not in its working set in main memory. This may not cause the page to be fetched from disk if it is on the standby list and hence already in main memory, or if it is in use by another process with whom the page is shared.
178 = Working Set Peak
179 = Working Set Peak is the maximum size, in bytes, of the Working Set of this process at any point in time. The Working Set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the Working Set of a process even if they are not in use. When free memory falls below a threshold, pages are trimmed from Working Sets. If they are needed they will then be soft-faulted back into the Working Set before they leave main memory.
180 = Working Set
181 = Working Set is the current size, in bytes, of the Working Set of this process. The Working Set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the Working Set of a process even if they are not in use.  When free memory falls below a threshold, pages are trimmed from Working Sets. If they are needed they will then be soft-faulted back into the Working Set before leaving main memory.
182 = Page File Bytes Peak
183 = Page File Bytes Peak is the maximum amount of virtual memory, in bytes, that this process has reserved for use in the paging file(s). Paging files are used to store pages of memory used by the process that are not contained in other files.  Paging files are shared by all processes, and the lack of space in paging files can prevent other processes from allocating memory. If there is no paging file, this counter reflects the maximum amount of virtual memory that the process has reserved for use in physical memory.
184 = Page File Bytes
185 = Page File Bytes is the current amount of virtual memory, in bytes, that this process has reserved for use in the paging file(s). Paging files are used to store pages of memory used by the process that are not contained in other files. Paging files are shared by all processes, and the lack of space in paging files can prevent other processes from allocating memory. If there is no paging file, this counter reflects the current amount of virtual memory that the process has reserved for use in physical memory.
186 = Private Bytes
187 = Private Bytes is the current size, in bytes, of memory that this process has allocated that cannot be shared with other processes.
188 = Announcements Total/sec
189 = % Processor Time is the percentage of elapsed time that all of process threads used the processor to execution instructions. An instruction is the basic unit of execution in a computer, a thread is the object that executes instructions, and a process is the object created when a program is run. Code executed to handle some hardware interrupts and trap conditions are included in this count.
190 = Enumerations Total/sec
191 = % Processor Time is the percentage of elapsed time that all of process threads used the processor to execution instructions. An instruction is the basic unit of execution in a computer, a thread is the object that executes instructions, and a process is the object created when a program is run. Code executed to handle some hardware interrupts and trap conditions are included in this count.
193 = % User Time is the percentage of elapsed time that this thread has spent executing code in user mode.  Applications, environment subsystems, and integral subsystems execute in user mode.  Code executing in user mode cannot damage the integrity of the Windows NT Executive, Kernel, and device drivers.  Unlike some early operating systems, Windows NT uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes.  These subsystem processes provide additional protection.  Therefore, some work done by Windows NT on behalf of your application might appear in other subsystem processes in addition to the privileged time in your process.
195 = % Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode.  When a Windows system service in called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
197 = Context Switches/sec is the rate of switches from one thread to another.  Thread switches can occur either inside of a single process or across processes.  A thread switch can be caused either by one thread asking another for information, or by a thread being preempted by another, higher priority thread becoming ready to run.  Unlike some early operating systems, Windows NT uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes.  These subsystem processes provide additional protection.  Therefore, some work done by Windows NT on behalf of an application  appear in other subsystem processes in addition to the privileged time in the application.  Switching to the subsystem process causes one Context Switch in the application thread.  Switching back causes another Context Switch in the subsystem thread.
198 = Current Disk Queue Length
199 = Current Disk Queue Length is the number of requests outstanding on the disk at the time the performance data is collected. It also includes requests in service at the time of the collection. This is a instantaneous snapshot, not an average over the time interval. Multi-spindle disk devices can have multiple requests that are active at one time, but other concurrent requests are awaiting service. This counter might reflect a transitory high or low queue length, but if there is a sustained load on the disk drive, it is likely that this will be consistently high. Requests experience delays proportional to the length of this queue minus the number of spindles on the disks. For good performance, this difference should average less than two.
200 = % Disk Time
201 = % Disk Time is the percentage of elapsed time that the selected disk drive was busy servicing read or write requests.
202 = % Disk Read Time
203 = % Disk Read Time is the percentage of elapsed time that the selected disk drive was busy servicing read requests.
204 = % Disk Write Time
205 = % Disk Write Time is the percentage of elapsed time that the selected disk drive was busy servicing write requests.
206 = Avg. Disk sec/Transfer
207 = Avg. Disk sec/Transfer is the time, in seconds, of the average disk transfer.
208 = Avg. Disk sec/Read
209 = Avg. Disk sec/Read is the average time, in seconds, of a read of data from the disk.
210 = Avg. Disk sec/Write
211 = Avg. Disk sec/Write is the average time, in seconds, of a write of data to the disk.
212 = Disk Transfers/sec
213 = Disk Transfers/sec is the rate of read and write operations on the disk.
214 = Disk Reads/sec
215 = Disk Reads/sec is the rate of read operations on the disk.
216 = Disk Writes/sec
217 = Disk Writes/sec is the rate of write operations on the disk.
218 = Disk Bytes/sec
219 = Disk Bytes/sec is the rate bytes are transferred to or from the disk during write or read operations.
220 = Disk Read Bytes/sec
221 = Disk Read Bytes/sec is the rate at which bytes are transferred from the disk during read operations.
222 = Disk Write Bytes/sec
223 = Disk Write Bytes/sec is rate at which bytes are transferred to the disk during write operations.
224 = Avg. Disk Bytes/Transfer
225 = Avg. Disk Bytes/Transfer is the average number of bytes transferred to or from the disk during write or read operations.
226 = Avg. Disk Bytes/Read
227 = Avg. Disk Bytes/Read is the average number of bytes transferred from the disk during read operations.
228 = Avg. Disk Bytes/Write
229 = Avg. Disk Bytes/Write is the average number of bytes transferred to the disk during write operations.
230 = Process
231 = The Process performance object consists of counters that monitor running application program and system processes.  All the threads in a process share the same address space and have access to the same data.
232 = Thread
233 = The Thread performance object consists of counters that measure aspects of thread behavior.  A thread is the basic object that executes instructions on a processor.  All running processes have at least one thread.
234 = PhysicalDisk
235 = The Physical Disk performance object consists of counters that monitor hard or fixed disk drive on a computer.  Disks are used to store file, program, and paging data and are read to retrieve these items, and written to record changes to them.  The values of physical disk counters are sums of the values of the logical disks (or partitions) into which they are divided.
236 = LogicalDisk
237 = The Logical Disk performance object consists of counters that monitor logical partitions of a hard or fixed disk drives.  Performance Monitor identifies logical disks by their a drive letter, such as C.
238 = Processor
239 = The Processor performance object consists of counters that measure aspects of processor activity. The processor is the part of the computer that performs arithmetic and logical computations, initiates operations on peripherals, and runs the threads of processes.  A computer can have multiple processors.  The processor object represents each processor as an instance of the object.
240 = % Total Processor Time
241 = % Total Processor Time is the average percentage of time that all processors on the computer are executing non-idle threads.   This counter was designed as the primary indicator of processor activity on multiprocessor computers.  It is equal to the sum of Process: % Processor Time for all processors, divided by the number of processors.  It is calculated by summing the time that all processors spend executing the thread of the Idle process in each sample interval, subtracting that value from 100%, and dividing the difference by the number of processors on the computer.  (Each processor has an Idle thread which consumes cycles when no other threads are ready to run). For example, on a multiprocessor computer, a value of 50% means that all processors are busy for half of the sample interval, or that half of the processors are busy for all of the sample interval.  This counter displays the average percentage of busy time observed during the sample interval.  It is calculated by monitoring the time the service was inactive, and then subtracting that value from 100%.
242 = % Total User Time
243 = % Total User Time is the average percentage of non-idle time all processors spend in user mode.  It is the sum of Processor: % User Time for all processors on the computer, divided by the number of processors.  System: % Total User Time and System: % Total Privileged Time sum to % Total Processor Time, but not always to 100%.  (User mode is a restricted processing mode designed for applications, environment subsystems, and integral subsystems.  The alternative, privileged mode, is designed for operating system components and allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services). This counter displays the average busy time as a percentage of the sample time.
244 = % Total Privileged Time
245 = % Total Privileged Time is the average percentage of non-idle time all processors spend in privileged (kernel) mode.  It is the sum of Processor: % Privileged Time for all processors on the computer, divided by the number of processors.  System: % Total User Time and System: % Total Privileged Time sum to % Total Processor Time, but not always to 100%.  (Privileged mode is an processing mode designed for operating system components which allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services.  The alternative, user mode, is a restricted processing mode designed for applications and environment subsystems). This counter displays the average busy time as a percentage of the sample time.
246 = Total Interrupts/sec
247 = Total Interrupts/sec is the combined rate of hardware interrupts received and serviced by all processors on the computer It is the sum of Processor: Interrupts/sec for all processors, and divided by the number of processors, and is measured in numbers of interrupts.  It does not include DPCs, which are counted separately.  This value is an indirect indicator of the activity of devices that generate interrupts, such as the system timer, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices.  These devices normally interrupt the processor when they have completed a task or require attention.  Normal thread execution is suspended during interrupts.  Most system clocks interrupt the processor every 10 milliseconds, creating a background of interrupt activity.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
248 = Processes
249 = Processes is the number of processes in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  Each process represents the running of a program.
250 = Threads
251 = Threads is the number of threads in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  A thread is the basic executable entity that can execute instructions in a processor.
252 = Events
253 = Events is the number of events in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  An event is used when two or more threads try to synchronize execution.
254 = Semaphores
255 = Semaphores is the number of semaphores in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  Threads use semaphores to obtain exclusive access to data structures that they share with other threads.
256 = Mutexes
257 = Mutexes counts the number of mutexes in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  Mutexes are used by threads to assure only one thread is executing a particular section of code.
258 = Sections
259 = Sections is the number of sections in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  A section is a portion of virtual memory created by a process for storing data. A process can share sections with other processes.
260 = Objects
261 = The Object performance object consists of counters that monitor  logical objects in the system, such as processes, threads, mutexes, and semaphores.  This information can be used to detect the unnecessary consumption of computer resources.  Each object requires memory to store basic information about the object.
262 = Redirector
263 = The Redirector performance object consists of counter that monitor network connections originating at the local computer.
264 = Bytes Received/sec
265 = Bytes Received/sec is the rate of bytes coming in to the Redirector from the network.  It includes all application data as well as network protocol information (such as packet headers).
266 = Packets Received/sec
267 = Packets Received/sec is the rate at which the Redirector is receiving packets (also called SMBs or Server Message Blocks).  Network transmissions are divided into packets.  The average number of bytes received in a packet can be obtained by dividing Bytes Received/sec by this counter.  Some packets received might not contain incoming data (for example an acknowledgment to a write made by the Redirector would count as an incoming packet).
268 = Read Bytes Paging/sec
269 = Read Bytes Paging/sec is the rate at which the Redirector is attempting to read bytes in response to page faults.  Page faults are caused by loading of modules (such as programs and libraries), by a miss in the Cache (see Read Bytes Cache/sec), or by files directly mapped into the address space of applications (a high-performance feature of Windows NT).
270 = Read Bytes Non-Paging/sec
271 = Read Bytes Non-Paging/sec are those bytes read by the Redirector in response to normal file requests by an application when they are redirected to come from another computer.  In addition to file requests, this counter includes other methods of reading across the network such as Named Pipes and Transactions.  This counter does not count network protocol information, just application data.
272 = Read Bytes Cache/sec
273 = Read Bytes Cache/sec is the rate at which applications are accessing the file system cache by using the Redirector.  Some of these data requests are satisfied by retrieving the data from the cache.  Requests that miss the Cache cause a page fault (see Read Bytes Paging/sec).
274 = Read Bytes Network/sec
275 = Read Bytes Network/sec is the rate at which applications are reading data across the network. This occurs when data sought in the file system cache is not found there and must be retrieved from the network.  Dividing this value by Bytes Received/sec indicates the proportion of application data traveling across the network. (see Bytes Received/sec).
276 = Bytes Transmitted/sec
277 = Bytes Transmitted/sec is the rate at which bytes are leaving the Redirector to the network.  It includes all application data as well as network protocol information (such as packet headers and the like).
278 = Packets Transmitted/sec
279 = Packets Transmitted/sec is the rate at which the Redirector is sending packets (also called SMBs or Server Message Blocks).  Network transmissions are divided into packets.  The average number of bytes transmitted in a packet can be obtained by dividing Bytes Transmitted/sec by this counter.
280 = Write Bytes Paging/sec
281 = Write Bytes Paging/sec is the rate at which the Redirector is attempting to write bytes changed in the pages being used by applications.  The program data changed by modules (such as programs and libraries) that were loaded over the network are 'paged out' when no longer needed.  Other output pages come from the file system cache (see Write Bytes Cache/sec).
282 = Write Bytes Non-Paging/sec
283 = Write Bytes Non-Paging/sec is the rate at which bytes are written by the Redirector in response to normal file outputs by an application when they are redirected to another computer.  In addition to file requests, this count includes other methods of writing across the network, such as Named Pipes and Transactions.  This counter does not count network protocol information, just application data.
284 = Write Bytes Cache/sec
285 = Write Bytes Cache/sec is the rate at which applications on your computer are writing to the file system cache by using the Redirector.  The data might not leave your computer immediately; it can be retained in the cache for further modification before being written to the network.  This saves network traffic.  Each write of a byte into the cache is counted here.
286 = Write Bytes Network/sec
287 = Write Bytes Network/sec is the rate at which applications are writing data across the network. This occurs when the file system cache is bypassed, such as for Named Pipes or Transactions, or when the cache writes the bytes to disk to make room for other data.  Dividing this counter by Bytes Transmitted/sec will indicate the proportion of application data being to the network (see Transmitted Bytes/sec).
288 = Read Operations/sec
289 = File Read Operations/sec is the rate at which applications are asking the Redirector for data. Each call to a file system or similar Application Program Interface (API) call counts as one operation.
290 = Read Operations Random/sec
291 = Read Operations Random/sec counts the rate at which, on a file-by-file basis, reads are made that are not sequential.  If a read is made using a particular file handle, and then is followed by another read that is not immediately the contiguous next byte, this counter is incremented by one.
292 = Read Packets/sec
293 = Read Packets/sec is the rate at which read packets are being placed on the network.  Each time a single packet is sent with a request to read data remotely, this counter is incremented by one.
294 = Reads Large/sec
295 = Reads Large/sec is the rate at which reads over 2 times the server's negotiated buffer size are made by applications.  Too many of these could place a strain on server resources.  This counter is incremented once for each read. It does not count packets.
296 = Read Packets Small/sec
297 = Read Packets Small/sec is the rate at which reads less than one-fourth of the server's negotiated buffer size are made by applications.  Too many of these could indicate a waste of buffers on the server.  This counter is incremented once for each read. It does not count packets.
298 = Write Operations/sec
299 = File Write Operations/sec is the rate at which applications are sending data to the Redirector. Each call to a file system or similar Application Program Interface (API) call counts as one operation.
300 = Write Operations Random/sec
301 = Write Operations Random/sec is the rate at which, on a file-by-file basis, writes are made that are not sequential.  If a write is made using a particular file handle, and then is followed by another write that is not immediately the next contiguous byte, this counter is incremented by one.
302 = Write Packets/sec
303 = Write Packets/sec is the rate at which writes are being sent to the network.  Each time a single packet is sent with a request to write remote data, this counter is incremented by one.
304 = Writes Large/sec
305 = Writes Large/sec is the rate at which writes are made by applications that are over 2 times the server's negotiated buffer size.  Too many of these could place a strain on server resources.  This counter is incremented once for each write: it counts writes, not packets.
306 = Write Packets Small/sec
307 = Write Packets Small/sec is the rate at which writes are made by applications that are less than one-fourth of the server's negotiated buffer size.  Too many of these could indicate a waste of buffers on the server.  This counter is incremented once for each write: it counts writes, not packets.
308 = Reads Denied/sec
309 = Reads Denied/sec is the rate at which the server is unable to accommodate requests for Raw Reads.  When a read is much larger than the server's negotiated buffer size, the Redirector requests a Raw Read which, if granted, would permit the transfer of the data without lots of protocol overhead on each packet.  To accomplish this the server must lock out other requests, so the request is denied if the server is really busy.
310 = Writes Denied/sec
311 = Writes Denied/sec is the rate at which the server is unable to accommodate requests for Raw Writes.  When a write is much larger than the server's negotiated buffer size, the Redirector requests a Raw Write which, if granted, would permit the transfer of the data without lots of protocol overhead on each packet.  To accomplish this the server must lock out other requests, so the request is denied if the server is really busy.
312 = Network Errors/sec
313 = Network Errors/sec is the rate at which serious unexpected errors are occurring. Such errors generally indicate that the Redirector and one or more Servers are having serious communication difficulties. For example an SMB (Server Manager Block) protocol error is a Network Error. An entry is written to the System Event Log and provide details.
314 = Server Sessions
315 = Server Sessions counts the total number of security objects the Redirector has managed.  For example, a logon to a server followed by a network access to the same server will establish one connection, but two sessions.
316 = Server Reconnects
317 = Server Reconnects counts the number of times your Redirector has had to reconnect to a server in order to complete a new active request.  You can be disconnected by the Server if you remain inactive for too long.  Locally even if all your remote files are closed, the Redirector will keep your connections intact for (nominally) ten minutes.  Such inactive connections are called Dormant Connections.  Reconnecting is expensive in time.
318 = Connects Core
319 = Connects Core counts the number of connections you have to servers running the original MS-Net SMB protocol, including MS-Net itself and Xenix and VAX's.
320 = Connects Lan Manager 2.0
321 = Connects LAN Manager 2.0 counts connections to LAN Manager 2.0 servers, including LMX servers.
322 = Connects Lan Manager 2.1
323 = Connects LAN Manager 2.1 counts connections to LAN Manager 2.1 servers, including LMX servers.
324 = Connects Windows NT
325 = Connects Windows NT counts the connections to Windows 2000 or earlier computers.
326 = Server Disconnects
327 = Server Disconnects counts the number of times a Server has disconnected your Redirector.  See also Server Reconnects.
328 = Server Sessions Hung
329 = Server Sessions Hung counts the number of active sessions that are timed out and unable to proceed due to a lack of response from the remote server.
330 = Server
331 = The Server performance object consists of counters that measure communication between the  local computer and the network.
333 = The number of bytes the server has received from the network.  Indicates how busy the server is.
335 = The number of bytes the server has sent on the network.  Indicates how busy the server is.
336 = Thread Wait Reason
337 = Thread Wait Reason is only applicable when the thread is in the Wait state (see Thread State).  It is 0 or 7 when the thread is waiting for the Executive, 1 or 8 for a Free Page, 2 or 9 for a Page In, 3 or 10 for a Pool Allocation, 4 or 11 for an Execution Delay, 5 or 12 for a Suspended condition, 6 or 13 for a User Request, 14 for an Event Pair High, 15 for an Event Pair Low, 16 for an LPC Receive, 17 for an LPC Reply, 18 for Virtual Memory, 19 for a Page Out; 20 and higher are not assigned at the time of this writing.  Event Pairs are used to communicate with protected subsystems (see Context Switches).
339 = % DPC Time is the percentage of time that the processor spent receiving and servicing deferred procedure calls (DPCs) during the sample interval. DPCs are interrupts that run at a lower priority than standard interrupts. % DPC Time is a component of % Privileged Time because DPCs are executed in privileged mode. They are counted separately and are not a component of the interrupt counters. This counter displays the average busy time as a percentage of the sample time.
340 = Sessions Timed Out
341 = The number of sessions that have been closed due to their idle time exceeding the AutoDisconnect parameter for the server.  Shows whether the AutoDisconnect setting is helping to conserve resources.
342 = Sessions Errored Out
343 = The number of sessions that have been closed due to unexpected error conditions or sessions that have reached the autodisconnect timeout and have been disconnected normally.
344 = Sessions Logged Off
345 = The number of sessions that have terminated normally.  Useful in interpreting the Sessions Times Out and Sessions Errored Out statistics--allows percentage calculations.
346 = Sessions Forced Off
347 = The number of sessions that have been forced to logoff.  Can indicate how many sessions were forced to logoff due to logon time constraints.
348 = Errors Logon
349 = The number of failed logon attempts to the server.  Can indicate whether password guessing programs are being used to crack the security on the server.
350 = Errors Access Permissions
351 = The number of times opens on behalf of clients have failed with STATUS_ACCESS_DENIED.  Can indicate whether somebody is randomly attempting to access files in hopes of getting at something that was not properly protected.
352 = Errors Granted Access
353 = The number of times accesses to files opened successfully were denied.  Can indicate attempts to access files without proper access authorization.
354 = Errors System
355 = The number of times an internal Server Error was detected.  Unexpected errors usually indicate a problem with the Server.
356 = Blocking Requests Rejected
357 = The number of times the server has rejected blocking SMBs due to insufficient count of free work items.  Indicates whether the MaxWorkItem or MinFreeWorkItems server parameters might need to be adjusted.
358 = Work Item Shortages
359 = The number of times STATUS_DATA_NOT_ACCEPTED was returned at receive indication time.  This occurs when no work item is available or can be allocated to service the incoming request.  Indicates whether the InitWorkItems or MaxWorkItems parameters might need to be adjusted.
360 = Files Opened Total
361 = The number of successful open attempts performed by the server of behalf of clients.  Useful in determining the amount of file I/O, determining overhead for path-based operations, and for determining the effectiveness of open locks.
362 = Files Open
363 = The number of files currently opened in the server.  Indicates current server activity.
365 = The number of sessions currently active in the server.  Indicates current server activity.
366 = File Directory Searches
367 = The number of searches for files currently active in the server.  Indicates current server activity.
369 = The number of bytes of non-pageable computer memory the server is using.  This value is useful for determining the values of the MaxNonpagedMemoryUsage value entry in the Windows NT Registry.
370 = Pool Nonpaged Failures
371 = The number of times allocations from nonpaged pool have failed.  Indicates that the computer's physical memory is too small.
372 = Pool Nonpaged Peak
373 = The maximum number of bytes of nonpaged pool the server has had in use at any one point.  Indicates how much physical memory the computer should have.
375 = The number of bytes of pageable computer memory the server is currently using.  Can help in determining good values for the MaxPagedMemoryUsage parameter.
376 = Pool Paged Failures
377 = The number of times allocations from paged pool have failed.  Indicates that the computer's physical memory or paging file are too small.
378 = Pool Paged Peak
379 = The maximum number of bytes of paged pool the server has had allocated.  Indicates the proper sizes of the Page File(s) and physical memory.
381 = Server Announce Allocations Failed/sec is the rate at which server (or domain) announcements have failed due to lack of memory.
383 = Mailslot Allocations Failed is the number of times the datagram receiver has failed to allocate a buffer to hold a user mailslot write.
385 = Mailslot Receives Failed indicates the number of mailslot messages that could not be received due to transport failures.
387 = Mailslot Writes Failed is the total number of mailslot messages that have been successfully received, but that could not be written to the mailslot.
388 = Bytes Total/sec
389 = Bytes Total/sec is the rate the Redirector is processing data bytes.  This includes all application and file data in addition to protocol information such as packet headers.
391 = File Data Operations/sec is the rate at which the Redirector is processing data operations. One operation should include many bytes, since each operation has overhead. The efficiency of this path can be determined by dividing the Bytes/sec by this counter to obtain the average number of bytes transferred per operation.
392 = Current Commands
393 = Current Commands counter indicates the number of pending commands from the local computer to all destination servers.  If the Current Commands counter shows a high number and the local computer is idle, this may indicate a network-related problem or a redirector bottleneck on the local computer.
395 = The number of bytes the server has sent to and received from the network.  This value provides an overall indication of how busy the server is.
397 = % Interrupt Time is the time the processor spends receiving and servicing hardware interrupts during sample intervals. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended during interrupts. Most system clocks interrupt the processor every 10 milliseconds, creating a background of interrupt activity. suspends normal thread execution during interrupts. This counter displays the average busy time as a percentage of the sample time.
398 = NWLink NetBIOS
399 = The NWLink NetBIOS performance object consists of counters that monitor IPX transport rates and connections.
400 = Packets/sec
401 = Packets/sec is the rate the Redirector is processing data packets.  One packet includes (hopefully) many bytes.  We say hopefully here because each packet has protocol overhead.  You can determine the efficiency of this path by dividing the Bytes/sec by this counter to determine the average number of bytes transferred/packet.  You can also divide this counter by Operations/sec to determine the average number of packets per operation, another measure of efficiency.
404 = Context Blocks Queued/sec
405 = Context Blocks Queued per second is the rate at which work context blocks had to be placed on the server's FSP queue to await server action.
406 = File Data Operations/sec
407 = File Data Operations/ sec is the combined rate of read and write operations on all logical disks on the computer.  This is the inverse of System: File Control Operations/sec.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
408 = % Free Space
409 = % Free Space is the percentage of total usable space on the selected logical disk drive that was free.
410 = Free Megabytes
411 = Free Megabytes displays the unallocated space, in megabytes, on the disk drive in megabytes. One megabyte is equal to 1,048,576 bytes.
412 = Connections Open
413 = Connections Open is the number of connections currently open for this protocol.  This counter shows the current count only and does not accumulate over time.
414 = Connections No Retries
415 = Connections No Retries is the total count of connections that were successfully made on the first try.  This number is an accumulator and shows a running total.
416 = Connections With Retries
417 = Connections With Retries is the total count of connections that were made after retrying the attempt.  A retry occurs when the first connection attempt failed.  This number is an accumulator and shows a running total.
418 = Disconnects Local
419 = Disconnects Local is the number of session disconnections that were initiated by the local computer.  This number is an accumulator and shows a running total.
420 = Disconnects Remote
421 = Disconnects Remote is the number of session disconnections that were initiated by the remote computer.  This number is an accumulator and shows a running total.
422 = Failures Link
423 = Failures Link is the number of connections that were dropped due to a link failure.  This number is an accumulator and shows a running total.
424 = Failures Adapter
425 = Failures Adapter is the number of connections that were dropped due to an adapter failure.  This number is an accumulator and shows a running total.
426 = Connection Session Timeouts
427 = Connection Session Timeouts is the number of connections that were dropped due to a session timeout.  This number is an accumulator and shows a running total.
428 = Connections Canceled
429 = Connections Canceled is the number of connections that were canceled.  This number is an accumulator and shows a running total.
430 = Failures Resource Remote
431 = Failures Resource Remote is the number of connections that failed because of resource problems or shortages on the remote computer.  This number is an accumulator and shows a running total.
432 = Failures Resource Local
433 = Failures Resource Local is the number of connections that failed because of resource problems or shortages on the local computer.  This number is an accumulator and shows a running total.
434 = Failures Not Found
435 = Failures Not Found is the number of connection attempts that failed because the remote computer could not be found.  This number is an accumulator and shows a running total.
436 = Failures No Listen
437 = Failures No Listen is the number of connections that were rejected because the remote computer was not listening for connection requests.
438 = Datagrams/sec
439 = Datagrams/sec is the rate at which datagrams are processed by the computer.  This counter displays the sum of datagrams sent and datagrams received.  A datagram is a connectionless packet whose delivery to a remote is not guaranteed.
440 = Datagram Bytes/sec
441 = Datagram Bytes/sec is the rate at which datagram bytes are processed by the computer.  This counter is the sum of datagram bytes that are sent as well as received.  A datagram is a connectionless packet whose delivery to a remote is not guaranteed.
442 = Datagrams Sent/sec
443 = Datagrams Sent/sec is the rate at which datagrams are sent from the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
444 = Datagram Bytes Sent/sec
445 = Datagram Bytes Sent/sec is the rate at which datagram bytes are sent from the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
446 = Datagrams Received/sec
447 = Datagrams Received/sec is the rate at which datagrams are received by the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
448 = Datagram Bytes Received/sec
449 = Datagram Bytes Received/sec is the rate at which datagram bytes are received by the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
451 = Packets/sec is the rate at which packets are processed by the computer.  This count is the sum of Packets Sent and Packets Received per second.  This counter includes all packets processed: control as well as data packets.
452 = Packets Sent/sec
453 = Packets Sent/sec is the rate at which packets are sent by the computer.  This counter counts all packets sent by the computer, i.e. control as well as data packets.
455 = Packets Received/sec is the rate at which packets are received by the computer.  This counter counts all packets processed: control as well as data packets.
456 = Frames/sec
457 = Frames/sec is the rate at which data frames (or packets) are processed by the computer.  This counter is the sum of data frames sent and data frames received.  This counter only counts those frames (packets) that carry data.
458 = Frame Bytes/sec
459 = Frame Bytes/sec is the rate at which data bytes are processed by the computer.  This counter is the sum of data frame bytes sent and received.  This counter only counts the byte in frames (packets) that carry data.
460 = Frames Sent/sec
461 = Frames Sent/sec is the rate at which data frames are sent by the computer.  This counter only counts the frames (packets) that carry data.
462 = Frame Bytes Sent/sec
463 = Frame Bytes Sent/sec is the rate at which data bytes are sent by the computer.  This counter only counts the bytes in frames (packets) that carry data.
464 = Frames Received/sec
465 = Frames Received/sec is the rate at which data frames are received by the computer.  This counter only counts the frames (packets) that carry data.
466 = Frame Bytes Received/sec
467 = Frame Bytes Received/sec is the rate at which data bytes are received by the computer.  This counter only counts the frames (packets) that carry data.
468 = Frames Re-Sent/sec
469 = Frames Re-Sent/sec is the rate at which data frames (packets) are re-sent by the computer.  This counter only counts the frames or packets that carry data.
470 = Frame Bytes Re-Sent/sec
471 = Frame Bytes Re-Sent/sec is the rate at which data bytes are re-sent by the computer.  This counter only counts the bytes in frames that carry data.
472 = Frames Rejected/sec
473 = Frames Rejected/sec is the rate at which data frames are rejected.  This counter only counts the frames (packets) that carry data.
474 = Frame Bytes Rejected/sec
475 = Frame Bytes Rejected/sec is the rate at which data bytes are rejected.  This counter only counts the bytes in data frames (packets) that carry data.
476 = Expirations Response
477 = Expirations Response is the count of T1 timer expirations.
478 = Expirations Ack
479 = Expirations Ack is the count of T2 timer expirations.
480 = Window Send Maximum
481 = Window Send Maximum is the maximum number of bytes of data that will be sent before waiting for an acknowledgment from the remote computer.
482 = Window Send Average
483 = Window Send Average is the running average number of data bytes that were sent before waiting for an acknowledgment from the remote computer.
484 = Piggyback Ack Queued/sec
485 = Piggyback Ack Queued/sec is the rate at which piggybacked acknowledgments are queued. Piggyback acknowledgments are acknowledgments to received packets that are to be included in the next outgoing packet to the remote computer.
486 = Piggyback Ack Timeouts
487 = Piggyback Ack Timeouts is the number of times that a piggyback acknowledgment could not be sent because there was no outgoing packet to the remote on which to piggyback.  A piggyback ack is an acknowledgment to a received packet that is sent along in an outgoing data packet to the remote computer.  If no outgoing packet is sent within the timeout period, then an ack packet is sent and this counter is incremented.
488 = NWLink IPX
489 = The NWLink IPX performance object consists of counters that measure datagram transmission to and from computers using the IPX protocol.
490 = NWLink SPX
491 = The NWLink SPX performance object consist of counters that measure data transmission and session connections for computers using the SPX protocol.
492 = NetBEUI
493 = The NetBEUI performance object consists of counters that measure data transmission for network activity which conforms to the NetBIOS End User Interface standard.
494 = NetBEUI Resource
495 = The NetBEUI Resource performance object consists of counters that track the use of buffers by the NetBEUI protocol.
496 = Used Maximum
497 = Used Maximum is the maximum number of NetBEUI resources (buffers) in use at any point in time.  This value is useful in sizing the maximum resources provided.  The number in parentheses following the resource name is used to identify the resource in Event Log messages.
498 = Used Average
499 = Used Average is the current number of resources (buffers) in use at this time.  The number in parentheses following the resource name is used to identify the resource in Event Log messages.
500 = Times Exhausted
501 = Times Exhausted is the number of times all the resources (buffers) were in use.  The number in parentheses following the resource name is used to identify the resource in Event Log messages.
502 = NBT Connection
503 = The NBT Connection performance object consists of counters that measure the rates at which bytes are sent and received over the NBT connection between the local computer and a remote computer.  The connection is identified by the name of the remote computer.
505 = Bytes Received/sec is the rate at which bytes are received by the local computer over an NBT connection to some remote computer.  All the bytes received by the local computer over the particular NBT connection are counted.
506 = Bytes Sent/sec
507 = Bytes Sent/sec is the rate at which bytes are sent by the local computer over an NBT connection to some remote computer.  All the bytes sent by the local computer over the particular NBT connection are counted.
508 = Total Bytes/sec
509 = Bytes Total/sec is the rate at which bytes are sent or received by the local computer over an NBT connection to some remote computer.  All the bytes sent or received by the local computer over the particular NBT connection are counted.
510 = Network Interface
511 = The Network Interface performance object consists of counters that measure the rates at which bytes and packets are sent and received over a TCP/IP network connection.  It includes counters that monitor connection errors.
512 = Bytes/sec
513 = Bytes Total/sec is the rate at which bytes are sent and received over each network adapter, including framing characters. Network Interface\Bytes Total/sec is a sum of Network Interface\Bytes Received/sec and Network Interface\Bytes Sent/sec.
515 = Packets/sec is the rate at which packets are sent and received on the network interface.
517 = Packets Received/sec is the rate at which packets are received on the network interface.
519 = Packets Sent/sec is the rate at which packets are sent on the network interface.
520 = Current Bandwidth
521 = Current Bandwidth is an estimate of the current bandwidth of the network interface in bits per second (BPS).  For interfaces that do not vary in bandwidth or for those where no accurate estimation can be made, this value is the nominal bandwidth.
523 = Bytes Received/sec is the rate at which bytes are received over each network adapter, including framing characters. Network Interface\Bytes Received/sec is a subset of Network Interface\Bytes Total/sec.
524 = Packets Received Unicast/sec
525 = Packets Received Unicast/sec is the rate at which (subnet) unicast packets are delivered to a higher-layer protocol.
526 = Packets Received Non-Unicast/sec
527 = Packets Received Non-Unicast/sec is the rate at which non-unicast (subnet broadcast or subnet multicast) packets are delivered to a higher-layer protocol.
528 = Packets Received Discarded
529 = Packets Received Discarded is the number of inbound packets that were chosen to be discarded even though no errors had been detected to prevent their delivery to a higher-layer protocol.  One possible reason for discarding packets could be to free up buffer space.
530 = Packets Received Errors
531 = Packets Received Errors is the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
532 = Packets Received Unknown
533 = Packets Received Unknown is the number of packets received through the interface that were discarded because of an unknown or unsupported protocol.
535 = Bytes Sent/sec is the rate at which bytes are sent over each network adapter, including framing characters. Network Interface\Bytes Sent/sec is a subset of Network Interface\Bytes Total/sec.
536 = Packets Sent Unicast/sec
537 = Packets Sent Unicast/sec is the rate at which packets are requested to be transmitted to subnet-unicast addresses by higher-level protocols.  The rate includes the packets that were discarded or not sent.
538 = Packets Sent Non-Unicast/sec
539 = Packets Sent Non-Unicast/sec is the rate at which packets are requested to be transmitted to non-unicast (subnet broadcast or subnet multicast) addresses by higher-level protocols.  The rate includes the packets that were discarded or not sent.
540 = Packets Outbound Discarded
541 = Packets Outbound Discarded is the number of outbound packets that were chosen to be discarded even though no errors had been detected to prevent transmission. One possible reason for discarding packets could be to free up buffer space.
542 = Packets Outbound Errors
543 = Packets Outbound Errors is the number of outbound packets that could not be transmitted because of errors.
544 = Output Queue Length
545 = Output Queue Length is the length of the output packet queue (in packets). If this is longer than two, there are delays and the bottleneck should be found and eliminated, if possible. Since the requests are queued by the Network Driver Interface Specification (NDIS) in this implementation, this will always be 0.
546 = IPv4
547 = The IP performance object consists of counters that measure the rates at which IP datagrams are sent and received by using IP protocols.  It also includes counters that monitor IP protocol errors.
548 = IPv6
549 = Datagrams/sec is the rate, in incidents per second, at which IP datagrams were received from or sent to the interfaces, including those in error. Forwarded datagrams are not included in this rate.
551 = Datagrams Received/sec is the rate, in incidents per second, at which IP datagrams are received from the interfaces, including those in error. Datagrams Received/sec is a subset of Datagrams/sec.
552 = Datagrams Received Header Errors
553 = Datagrams Received Header Errors is the number of input datagrams that were discarded due to errors in the IP headers, including bad checksums, version number mismatch, other format errors, time-to-live exceeded, errors discovered in processing their IP options, etc.
554 = Datagrams Received Address Errors
555 = Datagrams Received Address Errors is the number of input datagrams that were discarded because the IP address in their IP header destination field was not valid for the computer. This count includes invalid addresses (for example, 0.0.  0.0) and addresses of unsupported Classes (for example, Class E). For entities that are not IP gateways and do not forward datagrams, this counter includes datagrams that were discarded because the destination address was not a local address.
556 = Datagrams Forwarded/sec
557 = Datagrams Forwarded/sec is the rate, in incidents per second, at which attemps were made to find routes to forward input datagrams their final destination, because the local server was not the final IP destination. In servers that do not act as IP Gateways, this rate includes only packets that were source-routed via this entity, where the source-route option processing was successful.
558 = Datagrams Received Unknown Protocol
559 = Datagrams Received Unknown Protocol is the number of locally-addressed datagrams that were successfully received but were discarded because of an unknown or unsupported protocol.
560 = Datagrams Received Discarded
561 = Datagrams Received Discarded is the number of input IP datagrams that were discarded even though problems prevented their continued processing (for example, lack of buffer space). This counter does not include any datagrams discarded while awaiting re-assembly.
562 = Datagrams Received Delivered/sec
563 = Datagrams Received Delivered/sec is the rate, in incidents per second, at which input datagrams were successfully delivered to IP user-protocols, including Internet Control Message Protocol (ICMP).
565 = Datagrams Sent/sec is the rate, in incidents per second, at which IP datagrams were supplied for transmission by local IP user-protocols (including ICMP). This counter does not include any datagrams counted in Datagrams Forwarded/sec. Datagrams Sent/sec is a subset of Datagrams/sec.
566 = Datagrams Outbound Discarded
567 = Datagrams Outbound Discarded is the number of output IP datagrams that were discarded even though no problems were encountered to prevent their transmission to their destination (for example, lack of buffer space). This counter includes datagrams counted in Datagrams Forwarded/sec that meet this criterion.
568 = Datagrams Outbound No Route
569 = Datagrams Outbound No Route is the number of IP datagrams that were discarded because no route could be found to transmit them to their destination.  This counter includes any packets counted in Datagrams Forwarded/sec that meet this `no route' criterion.
570 = Fragments Received/sec
571 = Fragments Received/sec is the rate, in incidents per second, at which IP fragments that need to be reassembled at this entity are received.
572 = Fragments Re-assembled/sec
573 = Fragments Re-assembled/sec is the rate, in incidents per second, at which IP fragments were successfully reassembled.
574 = Fragment Re-assembly Failures
575 = Fragment Re-assembly Failures is the number of failures detected by the IP reassembly algorithm, such as time outs, errors, etc.  This is not necessarily a count of discarded IP fragments since some algorithms (notably RFC 815) lose track of the number of fragments by combining them as they are received.
576 = Fragmented Datagrams/sec
577 = Fragmented Datagrams/sec is the rate, in incidents per second, at which datagrams are successfully fragmented.
578 = Fragmentation Failures
579 = Fragmentation Failures is the number of IP datagrams that were discarded because they needed to be fragmented at but could not be (for example, because the `Don't Fragment' flag was set).
580 = Fragments Created/sec
581 = Fragments Created/sec is the rate, in incidents per second, at which IP datagram fragments were generated as a result of fragmentation.
582 = ICMP
583 = The ICMP performance object consists of counters that measure the rates at which messages are sent and received by using ICMP protocols.  It also includes counters that monitor ICMP protocol errors.
584 = Messages/sec
585 = Messages/sec is the total rate, in incidents per second, at which ICMP messages were sent and received by the entity. The rate includes messages received or sent in error.
586 = Messages Received/sec
587 = Messages Received/sec is the rate, in incidents per second at which ICMP messages were received. The rate includes messages received in error.
588 = Messages Received Errors
589 = Messages Received Errors is the number of ICMP messages that the entity received but had errors, such as bad ICMP checksums, bad length, etc.
590 = Received Dest. Unreachable
591 = Received Destination Unreachable is the number of ICMP Destination Unreachable messages received.
592 = Received Time Exceeded
593 = Received Time Exceeded is the number of ICMP Time Exceeded messages received.
594 = Received Parameter Problem
595 = Received Parameter Problem is the number of ICMP Parameter Problem messages received.
596 = Received Source Quench
597 = Received Source Quench is the number of ICMP Source Quench messages received.
598 = Received Redirect/sec
599 = Received Redirect/sec is the rate, in incidents per second, at which ICMP Redirect messages were received.
600 = Received Echo/sec
601 = Received Echo/sec is the rate, in incidents per second, at which ICMP Echo messages were received.
602 = Received Echo Reply/sec
603 = Received Echo Reply/sec is the rate, in incidents per second, at which ICMP Echo Reply messages were received.
604 = Received Timestamp/sec
605 = Received Timestamp/sec is the rate, in incidents per second at which ICMP Timestamp Request messages were received.
606 = Received Timestamp Reply/sec
607 = Received Timestamp Reply/sec is the rate of ICMP Timestamp Reply messages received.
608 = Received Address Mask
609 = Received Address Mask is the number of ICMP Address Mask Request messages received.
610 = Received Address Mask Reply
611 = Received Address Mask Reply is the number of ICMP Address Mask Reply messages received.
612 = Messages Sent/sec
613 = Messages Sent/sec is the rate, in incidents per second, at which the server attempted to send. The rate includes those messages sent in error.
614 = Messages Outbound Errors
615 = Messages Outbound Errors is the number of ICMP messages that were not send due to problems within ICMP, such as lack of buffers.  This value does not include errors discovered outside the ICMP layer, such as those recording the failure of IP to route the resultant datagram.  In some implementations, none of the error types are included in the value of this counter.
616 = Sent Destination Unreachable
617 = Sent Destination Unreachable is the number of ICMP Destination Unreachable messages sent.
618 = Sent Time Exceeded
619 = Sent Time Exceeded is the number of ICMP Time Exceeded messages sent.
620 = Sent Parameter Problem
621 = Sent Parameter Problem is the number of ICMP Parameter Problem messages sent.
622 = Sent Source Quench
623 = Sent Source Quench is the number of ICMP Source Quench messages sent.
624 = Sent Redirect/sec
625 = Sent Redirect/sec is the rate, in incidents per second, at which ICMP Redirect messages were sent.
626 = Sent Echo/sec
627 = Sent Echo/sec is the rate of ICMP Echo messages sent.
628 = Sent Echo Reply/sec
629 = Sent Echo Reply/sec is the rate, in incidents per second, at which ICMP Echo Reply messages were sent.
630 = Sent Timestamp/sec
631 = Sent Timestamp/sec is the rate, in incidents per second, at which ICMP Timestamp Request messages were sent.
632 = Sent Timestamp Reply/sec
633 = Sent Timestamp Reply/sec is the rate, in incidents per second,  at which ICMP Timestamp Reply messages were sent.
634 = Sent Address Mask
635 = Sent Address Mask is the number of ICMP Address Mask Request messages sent.
636 = Sent Address Mask Reply
637 = Sent Address Mask Reply is the number of ICMP Address Mask Reply messages sent.
638 = TCPv4
639 = The TCP performance object consists of counters that measure the rates at which TCP Segments are sent and received by using the TCP protocol.  It includes counters that monitor the number of TCP connections in each TCP connection state.
640 = Segments/sec
641 = Segments/sec is the rate at which TCP segments are sent or received using the TCP protocol.
642 = Connections Established
643 = Connections Established is the number of TCP connections for which the current state is either ESTABLISHED or CLOSE-WAIT.
644 = Connections Active
645 = Connections Active is the number of times TCP connections have made a direct transition to the SYN-SENT state from the CLOSED state. In other words, it shows a number of connections which are initiated by the local computer. The value is a cumulative total.
646 = Connections Passive
647 = Connections Passive is the number of times TCP connections have made a direct transition to the SYN-RCVD state from the LISTEN state. In other words, it shows a number of connections to the local computer, which are initiated by remote computers. The value is a cumulative total.
648 = Connection Failures
649 = Connection Failures is the number of times TCP connections have made a direct transition to the CLOSED state from the SYN-SENT state or the SYN-RCVD state, plus the number of times TCP connections have made a direct transition to the LISTEN state from the SYN-RCVD state.
650 = Connections Reset
651 = Connections Reset is the number of times TCP connections have made a direct transition to the CLOSED state from either the ESTABLISHED state or the CLOSE-WAIT state.
652 = Segments Received/sec
653 = Segments Received/sec is the rate at which segments are received, including those received in error.  This count includes segments received on currently established connections.
654 = Segments Sent/sec
655 = Segments Sent/sec is the rate at which segments are sent, including those on current connections, but excluding those containing only retransmitted bytes.
656 = Segments Retransmitted/sec
657 = Segments Retransmitted/sec is the rate at which segments are retransmitted, that is, segments transmitted containing one or more previously transmitted bytes.
658 = UDPv4
659 = The UDP performance object consists of counters that measure the rates at which UDP datagrams are sent and received by using the UDP protocol.  It includes counters that monitor UDP protocol errors.
660 = % Total DPC Time
661 = Datagrams/sec is the rate at which UDP datagrams are sent or received by the entity.
662 = % Total Interrupt Time
663 = Datagrams Received/sec is the rate at which UDP datagrams are delivered to UDP users.
664 = Datagrams No Port/sec
665 = Datagrams No Port/sec is the rate of received UDP datagrams for which there was no application at the destination port.
666 = Datagrams Received Errors
667 = Datagrams Received Errors is the number of received UDP datagrams that could not be delivered for reasons other than the lack of an application at the destination port.
669 = Datagrams Sent/sec is the rate at which UDP datagrams are sent from the entity.
670 = Disk Storage Unit
671 = Disk Storage device statistics from the foreign computer
672 = Allocation Failures
673 = The number of allocation failures reported by the disk storage device
674 = System Up Time
675 = System Up Time is the elapsed time (in seconds) that the computer has been running since it was last started.  This counter displays the difference between the start time and the current time.
676 = System Handle Count
677 = The current number of system handles in use.
678 = Free System Page Table Entries
679 = Free System Page Table Entries is the number of page table entries not currently in used by the system.  This counter displays the last observed value only; it is not an average.
680 = Thread Count
681 = The number of threads currently active in this process. An instruction is the basic unit of execution in a processor, and a thread is the object that executes instructions. Every running process has at least one thread.
682 = Priority Base
683 = The current base priority of this process. Threads within a process can raise and lower their own base priority relative to the process' base priority.
684 = Elapsed Time
685 = The total elapsed time, in seconds, that this process has been running.
686 = Alignment Fixups/sec
687 = Alignment Fixups/sec is the rate, in incidents per seconds, at alignment faults were fixed by the system.
688 = Exception Dispatches/sec
689 = Exception Dispatches/sec is the rate, in incidents per second, at which exceptions were dispatched by the system.
690 = Floating Emulations/sec
691 = Floating Emulations/sec is the rate of floating emulations performed by the system.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
692 = Logon/sec
693 = Logon/sec is the rate of all server logons.
694 = Priority Current
695 = The current dynamic priority of this thread.  The system can raise the thread's dynamic priority above the base priority if the thread is handling user input, or lower it towards the base priority if the thread becomes compute bound.
696 = % DPC Time
697 = The current base priority of this thread.  The system can raise the thread's dynamic priority above the base priority if the thread is handling user input, or lower it towards the base priority if the thread becomes compute bound.
698 = % Interrupt Time
699 = The total elapsed time (in seconds) this thread has been running.
700 = Paging File
701 = The Paging File performance object consists of counters that monitor the paging file(s) on the computer.  The paging file is a reserved space on disk that backs up committed physical memory on the computer.
702 = % Usage
703 = The amount of the Page File instance in use in percent.  See also Process\\Page File Bytes.
704 = % Usage Peak
705 = The peak usage of the Page File instance in percent.  See also Process\\Page File Bytes Peak.
706 = Start Address
707 = Starting virtual address for this thread.
708 = User PC
709 = Current User Program Counter for this thread.
710 = Mapped Space No Access
711 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
712 = Mapped Space Read Only
713 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
714 = Mapped Space Read/Write
715 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Read/Write protection allows a process to read, modify and write to these pages.
716 = Mapped Space Write Copy
717 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have write access to this shared memory, a copy of that memory is made.
718 = Mapped Space Executable
719 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
720 = Mapped Space Exec Read Only
721 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Execute/Read Only memory is memory that can be executed as well as read.
722 = Mapped Space Exec Read/Write
723 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Execute/Read/Write memory is memory that can be executed by programs as well as read and modified.
724 = Mapped Space Exec Write Copy
725 = Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
726 = Reserved Space No Access
727 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
728 = Reserved Space Read Only
729 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
730 = Reserved Space Read/Write
731 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Read/Write protection allows a process to read, modify and write to these pages.
732 = Reserved Space Write Copy
733 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made.
734 = Reserved Space Executable
735 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
736 = Reserved Space Exec Read Only
737 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Execute/Read Only memory is memory that can be executed as well as read.
738 = Reserved Space Exec Read/Write
739 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Execute/Read/Write memory is memory that can be executed by programs as well as read and modified.
740 = Image
741 = The Image performance object consists of counters that monitor the virtual address usage of images executed by processes on the computer.
742 = Reserved Space Exec Write Copy
743 = Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
744 = Unassigned Space No Access
745 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
746 = Unassigned Space Read Only
747 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
748 = Unassigned Space Read/Write
749 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Read/Write protection allows a process to read, modify and write to these pages.
750 = Unassigned Space Write Copy
751 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made for writing to.
752 = Unassigned Space Executable
753 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
754 = Unassigned Space Exec Read Only
755 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Execute/Read Only memory is memory that can be executed as well as read.
756 = Unassigned Space Exec Read/Write
757 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Execute/Read/Write memory is memory that can be executed by programs as well as read and written.
758 = Unassigned Space Exec Write Copy
759 = Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
760 = Image Space No Access
761 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
762 = Image Space Read Only
763 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
764 = Image Space Read/Write
765 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Read/Write protection allows a process to read, modify and write to these pages.
766 = Image Space Write Copy
767 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made for writing to.
768 = Image Space Executable
769 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
770 = Image Space Exec Read Only
771 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Execute/Read-Only memory is memory that can be executed as well as read.
772 = Image Space Exec Read/Write
773 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Execute/Read/Write memory is memory that can be executed by programs as well as read and written and modified.
774 = Image Space Exec Write Copy
775 = Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
776 = Bytes Image Reserved
777 = Bytes Image Reserved is the sum of all virtual memory reserved by images within this process.
778 = Bytes Image Free
779 = Bytes Image Free is the amount of virtual address space that is not in use or reserved by images within this process.
780 = Bytes Reserved
781 = Bytes Reserved is the total amount of virtual memory reserved for future use by this process.
782 = Bytes Free
783 = Bytes Free is the total unused virtual address space of this process.
784 = ID Process
785 = ID Process is the unique identifier of this process. ID Process numbers are reused, so they only identify a process for the lifetime of that process.
786 = Process Address Space
787 = The Process Address Space performance object consists of counters that monitor memory allocation and use  for a selected process.
788 = No Access
789 = Image Space is the virtual address space in use by the selected image with this protection.  No Access protection prevents a process from writing or reading these pages and will generate an access violation if either is attempted.
790 = Read Only
791 = Image Space is the virtual address space in use by the selected image with this protection.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
792 = Read/Write
793 = Image Space is the virtual address space in use by the selected image with this protection.  Read/Write protection allows a process to read, modify and write to these pages.
794 = Write Copy
795 = Image Space is the virtual address space in use by the selected image with this protection.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made for writing to.
796 = Executable
797 = Image Space is the virtual address space in use by the selected image with this protection.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
798 = Exec Read Only
799 = Image Space is the virtual address space in use by the selected image with this protection.  Execute/Read Only memory is memory that can be executed as well as read.
800 = Exec Read/Write
801 = Image Space is the virtual address space in use by the selected image with this protection.  Execute/Read/Write memory is memory that can be executed by programs as well as read and written.
802 = Exec Write Copy
803 = Image Space is the virtual address space in use by the selected image with this protection.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
804 = ID Thread
805 = ID Thread is the unique identifier of this thread.  ID Thread numbers are reused, so they only identify a thread for the lifetime of that thread.
806 = Mailslot Receives Failed
807 = Mailslot Opens Failed/sec indicates the rate at which mailslot messages to be delivered to mailslots that are not present are received by this workstation.
808 = Mailslot Writes Failed
809 = Duplicate Master Announcements indicates the number of times that the master browser has detected another master browser on the same domain.
810 = Mailslot Opens Failed/sec
811 = Illegal Datagrams/sec is the rate at which incorrectly formatted datagrams have been received by the workstation.
812 = Duplicate Master Announcements
813 = Announcements Total/sec is the sum of Announcements Server/sec and Announcements Domain/sec.
814 = Illegal Datagrams/sec
815 = Enumerations Total/sec is the rate at which browse requests have been processed by this workstation.  This is the sum of Enumerations Server/sec, Enumerations Domain/sec, and Enumerations Other/sec.
816 = Thread Details
817 = The Thread Details performance object  consists of counters that measure aspects of thread behavior that are difficult or time-consuming or collect.  These counters are distinguished from those in the Thread object by their high overhead.
818 = Cache Bytes
819 = Cache Bytes is the sum of the Memory\\System Cache Resident Bytes, Memory\\System Driver Resident Bytes, Memory\\System Code Resident Bytes, and Memory\\Pool Paged Resident Bytes counters.  This counter displays the last observed value only; it is not an average.
820 = Cache Bytes Peak
821 = Cache Bytes Peak is the maximum number of bytes used by the file system cache since the system was last restarted. This might be larger than the current size of the cache. This counter displays the last observed value only; it is not an average.
822 = Pages Input/sec
823 = Pages Input/sec is the rate at which pages are read from disk to resolve hard page faults. Hard page faults occur when a process refers to a page in virtual memory that is not in its working set or elsewhere in physical memory, and must be retrieved from disk. When a page is faulted, the system tries to read multiple contiguous pages into memory to maximize the benefit of the read operation. Compare the value of Memory\\Pages Input/sec to the value of  Memory\\Page Reads/sec to determine the average number of pages read into memory during each read operation.
824 = Transition Pages RePurposed/sec
825 = Transition Pages RePurposed is the rate at which the number of transition cache pages were reused for a different purpose.  These pages would have otherwise remained in the page cache to provide a (fast) soft fault (instead of retrieving it from backing store) in the event the page was accessed in the future.  Note these pages can contain private or sharable memory.
872 = Bytes Transmitted
873 = The number of bytes transmitted total for this connection.
874 = Bytes Received
875 = The number of bytes received total for this connection.
876 = Frames Transmitted
877 = The number of data frames transmitted total for this connection.
878 = Frames Received.
879 = The number of data frames received total for this connection.
880 = Percent Compression Out
881 = The compression ratio for bytes being transmitted.
882 = Percent Compression In
883 = The compression ratio for bytes being received.
884 = CRC Errors
885 = The total number of CRC Errors for this connection.  CRC Errors occur when the frame received contains erroneous data.
886 = Timeout Errors
887 = The total number of Timeout Errors for this connection.  Timeout Errors occur when an expected is not received in time.
888 = Serial Overrun Errors
889 = The total number of Serial Overrun Errors for this connection.  Serial Overrun Errors occur when the hardware cannot handle the rate at which data is received.
890 = Alignment Errors
891 = The total number of Alignment Errors for this connection.  Alignment Errors occur when a byte received is different from the byte expected.
892 = Buffer Overrun Errors
893 = The total number of Buffer Overrun Errors for this connection.  Buffer Overrun Errors when the software cannot handle the rate at which data is received.
894 = Total Errors
895 = The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors for this connection.
896 = Bytes Transmitted/Sec
897 = The number of bytes transmitted per second.
898 = Bytes Received/Sec
899 = The number of bytes received per second.
900 = Frames Transmitted/Sec
901 = The number of frames transmitted per second.
902 = Frames Received/Sec
903 = The number of frames received per second.
904 = Total Errors/Sec
905 = The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors per second.
908 = Total Connections
909 = The total number of Remote Access connections.
920 = WINS Server
921 = The WINS Server performance object consists of counters that monitor communications using the WINS Server service.
922 = Unique Registrations/sec
923 = Unique Registrations/sec is the rate at which unique registration are received by the WINS server.
924 = Group Registrations/sec
925 = Group Registrations/sec is the rate at which group registration are received by the WINS server.
926 = Total Number of Registrations/sec
927 = Total Number of Registrations/sec is the sum of the Unique and Group registrations per sec.  This is the total rate at which registration are received by the WINS server.
928 = Unique Renewals/sec
929 = Unique Renewals/sec is the rate at which unique renewals are received by the WINS server.
930 = Group Renewals/sec
931 = Group Renewals/sec is the rate at which group renewals are received by the WINS server.
932 = Total Number of Renewals/sec
933 = Total Number of Renewals/sec is the sum of the Unique and Group renewals per sec.  This is the total rate at which renewals are received by the WINS server.
934 = Releases/sec
935 = Total Number of Releases/sec is the rate at which releases are received by the WINS server.
936 = Queries/sec
937 = Total Number of Queries/sec is the rate at which queries are received by the WINS server.
938 = Unique Conflicts/sec
939 = Unique Conflicts/sec is the rate at which unique registrations/renewals received by the WINS server resulted in conflicts with records in the database.
940 = Group Conflicts/sec
941 = Group Conflicts/sec is the rate at which group registration received by the WINS server resulted in conflicts with records in the database.
942 = Total Number of Conflicts/sec
943 = Total Number of Conflicts/sec is the sum of the Unique and Group conflicts per sec.  This is the total rate at which conflicts were seen by the WINS server.
944 = Successful Releases/sec
945 = Total Number of Successful Releases/sec
946 = Failed Releases/sec
947 = Total Number of Failed Releases/sec
948 = Successful Queries/sec
949 = Total Number of Successful Queries/sec
950 = Failed Queries/sec
951 = Total Number of Failed Queries/sec
952 = Handle Count
953 = The total number of handles currently open by this process. This number is equal to the sum of the handles currently open by each thread in this process.
1000 = MacFile Server
1001 = Services for Macintosh AFP File Server.
1002 = Max Paged Memory
1003 = The maximum amount of paged memory resources used by the MacFile Server.
1004 = Current Paged Memory
1005 = The current amount of paged memory resources used by the MacFile Server.
1006 = Max NonPaged Memory
1007 = The maximum amount of nonpaged memory resources use by the MacFile Server.
1008 = Current NonPaged memory
1009 = The current amount of nonpaged memory resources used by the MacFile Server.
1010 = Current Sessions
1011 = The number of sessions currently connected to the MacFile server.  Indicates current server activity.
1012 = Maximum Sessions
1013 = The maximum number of sessions connected at one time to the MacFile server.  Indicates usage level of server.
1014 = Current Files Open
1015 = The number of internal files currently open in the MacFile server.  This count does not include files opened on behalf of Macintosh clients.
1016 = Maximum Files Open
1017 = The maximum number of internal files open at one time in the MacFile server.  This count does not include files opened on behalf of Macintosh clients.
1018 = Failed Logons
1019 = The number of failed logon attempts to the MacFile server.  Can indicate whether password guessing programs are being used to crack the security on the server.
1020 = Data Read/sec
1021 = The number of bytes read from disk per second.
1022 = Data Written/sec
1023 = The number of bytes written to disk per second.
1024 = Data Received/sec
1025 = The number of bytes received from the network per second.  Indicates how busy the server is.
1026 = Data Transmitted/sec
1027 = The number of bytes sent on the network per second.  Indicates how busy the server is.
1028 = Current Queue Length
1029 = The number of outstanding work items waiting to be processed.
1030 = Maximum Queue Length
1031 = The maximum number of outstanding work items waiting at one time.
1032 = Current Threads
1033 = The current number of threads used by MacFile server.  Indicates how busy the server is.
1034 = Maximum Threads
1035 = The maximum number of threads used by MacFile server.  Indicates peak usage level of server.
1050 = AppleTalk
1051 = AppleTalk Protocol
1052 = Packets In/sec
1053 = Number of packets received per second by Appletalk on this port.
1054 = Packets Out/sec
1055 = Number of packets sent per second by Appletalk on this port.
1056 = Bytes In/sec
1057 = Number of bytes received per second by Appletalk on this port.
1058 = Bytes Out/sec
1059 = Number of bytes sent per second by Appletalk on this port.
1060 = Average Time/DDP Packet
1061 = Average time in milliseconds to process a DDP packet on this port.
1062 = DDP Packets/sec
1063 = Number of DDP packets per second received by Appletalk on this port.
1064 = Average Time/AARP Packet
1065 = Average time in milliseconds to process an AARP packet on this port.
1066 = AARP Packets/sec
1067 = Number of AARP packets per second received by Appletalk on this port.
1068 = Average Time/ATP Packet
1069 = Average time in milliseconds to process an ATP packet on this port.
1070 = ATP Packets/sec
1071 = Number of ATP packets per second received by Appletalk on this port.
1072 = Average Time/NBP Packet
1073 = Average time in milliseconds to process an NBP packet on this port.
1074 = NBP Packets/sec
1075 = Number of NBP packets per second received by Appletalk on this port.
1076 = Average Time/ZIP Packet
1077 = Average time in milliseconds to process a ZIP packet on this port.
1078 = ZIP Packets/sec
1079 = Number of ZIP packets per second received by Appletalk on this port.
1080 = Average Time/RTMP Packet
1081 = Average time in milliseconds to process an RTMP packet on this port.
1082 = RTMP Packets/sec
1083 = Number of RTMP packets per second received by Appletalk on this port.
1084 = ATP Retries Local
1085 = Number of ATP requests retransmitted on this port.
1086 = ATP Response Timouts
1087 = Number of ATP release timers that have expired on this port.
1088 = ATP XO Response/Sec
1089 = Number of ATP Exactly-once transaction responses per second on this port.
1090 = ATP ALO Response/Sec
1091 = Number of ATP At-least-once transaction responses per second on this port.
1092 = ATP Recvd Release/Sec
1093 = Number of ATP transaction release packets per second received on this port.
1094 = Current NonPaged Pool
1095 = The current amount of nonpaged memory resources used by AppleTalk.
1096 = Packets Routed In/Sec
1097 = Number of packets routed in on this port.
1098 = Packets dropped
1099 = Number of packets dropped due to resource limitations on this port.
1100 = ATP Retries Remote
1101 = Number of ATP requests retransmitted to this port.
1102 = Packets Routed Out/Sec
1103 = Number of packets routed out on this port.
1110 = Network Segment
1111 = Provides Network Statistics for the local network segment via the Network Monitor Service.
1112 = Total frames received/second
1113 = The total number of frames received per second on this network segment.
1114 = Total bytes received/second
1115 = The number of bytes received per second on this network segment.
1116 = Broadcast frames received/second
1117 = The number of Broadcast frames received per second on this network segment.
1118 = Multicast frames received/second
1119 = The number of Multicast frames received per second on this network segment.
1120 = % Network utilization
1121 = Percentage of network bandwidth in use on this network segment.
1124 = % Broadcast Frames
1125 = Percentage of network bandwidth which is made up of broadcast traffic on this network segment.
1126 = % Multicast Frames
1127 = Percentage of network bandwidth which is made up of multicast traffic on this network segment.
1150 = Telephony
1151 = The Telephony System
1152 = Lines
1153 = The number of telephone lines serviced by this computer.
1154 = Telephone Devices
1155 = The number of telephone devices serviced by this computer.
1156 = Active Lines
1157 = The number of telephone lines serviced by this computer that are currently active.
1158 = Active Telephones
1159 = The number of telephone devices that are currently being monitored.
1160 = Outgoing Calls/sec
1161 = The rate of outgoing calls made by this computer.
1162 = Incoming Calls/sec
1163 = The rate of incoming calls answered by this computer.
1164 = Client Apps
1165 = The number of applications that are currently using telephony services.
1166 = Current Outgoing Calls
1167 = Current outgoing calls being serviced by this computer.
1168 = Current Incoming Calls
1169 = Current incoming calls being serviced by this computer.
1232 = Packet Burst Read NCP Count/sec
1233 = Packet Burst Read NCP Count/sec is the rate of NetWare Core Protocol requests for Packet Burst Read.  Packet Burst is a windowing protocol that improves performance.
1234 = Packet Burst Read Timeouts/sec
1235 = Packet Burst Read Timeouts/sec is the rate the NetWare Service needs to retransmit a Burst Read Request because the NetWare server took too long to respond.
1236 = Packet Burst Write NCP Count/sec
1237 = Packet Burst Write NCP Count/sec is the rate of NetWare Core Protocol requests for Packet Burst Write.  Packet Burst is a windowing protocol that improves performance.
1238 = Packet Burst Write Timeouts/sec
1239 = Packet Burst Write Timeouts/sec is the rate the NetWare Service needs to retransmit a Burst Write Request because the NetWare server took too long to respond.
1240 = Packet Burst IO/sec
1241 = Packet Burst IO/sec is the sum of Packet Burst Read NCPs/sec and Packet Burst Write NCPs/sec.
1260 = Logon Total
1261 = Logon Total includes all interactive logons, network logons, service logons, successful logon, and failed logons since the machine is last rebooted.
1262 = Total Durable Handles
1263 = The number of durable handles, it indicates how many durable handles keep alive ever when SMB2 sessions are disconnected.
1264 = Reconnected Durable Handles
1265 = The number of reconnected durable handles, the ratio of "reconnected durable handles"/"total durable handles" indicates how much performance gain from reconnect durable handles.
1266 = SMB BranchCache Hash Header Requests
1267 = The number of SMB BranchCache hash requests that were for the header only received by the server. This indicates how many requests are being done to validate hashes that are already cached by the client.
1268 = SMB BranchCache Hash Generation Requests
1269 = The number of SMB BranchCache hash generation requests that were sent by SRV2 to the SMB Hash Generation service because a client requested hashes for the file and there was either no hash content for the file or the existing hashes were out of date.
1270 = SMB BranchCache Hash Requests Received
1271 = The number of SMB BranchCache hash requests that were received by the server.
1272 = SMB BranchCache Hash Responses Sent
1273 = The number of SMB BranchCache hash responses that have been sent from the server.
1274 = SMB BranchCache Hash Bytes Sent
1275 = The amount of SMB BranchCache hash data sent from the server. This includes bytes transferred for both hash header requests and full hash data requests.
1276 = Total Resilient Handles
1277 = The number of resilient handles, it indicates how many resilient handles keep alive ever when SMB2 sessions are disconnected.
1278 = Reconnected Resilient Handles
1279 = The number of reconnected resilient handles, the ratio of "reconnected resilient handles"/"total resilient handles" indicates how much performance gain from reconnect resilient handles.
1300 = Server Work Queues
1301 = The Server Work Queues performance object consists of counters that monitor the length of the queues and objects in the queues.
1302 = Queue Length
1303 = Queue Length is the current length of the server work queue for this CPU.  A sustained queue length greater than four might indicate processor congestion.  This is an instantaneous count, not an average over time.
1304 = Active Threads
1305 = Active Threads is the number of threads currently working on a request from the server client for this CPU.  The system keeps this number as low as possible to minimize unnecessary context switching.  This is an instantaneous count for the CPU, not an average over time.
1306 = Available Threads
1307 = Available Threads is the number of server threads on this CPU not currently working on requests from a client.  The server dynamically adjusts the number of threads to maximize server performance.
1308 = Available Work Items
1309 = Every request from a client is represented in the server as a 'work item,' and the server maintains a pool of available work items per CPU to speed processing.  This is the instantaneous number of available work items for this CPU.  A sustained near-zero value indicates the need to increase the MinFreeWorkItems registry value for the Server service.  This value will always be 0 in the Blocking Queue instance.
1310 = Borrowed Work Items
1311 = Every request from a client is represented in the server as a 'work item,' and the server maintains a pool of available work items per CPU to speed processing.  When a CPU runs out of work items, it borrows a free work item from another CPU.  An increasing value of this running counter might indicate the need to increase the 'MaxWorkItems' or 'MinFreeWorkItems' registry values for the Server service.  This value will always be 0 in the Blocking Queue instance.
1312 = Work Item Shortages
1313 = Every request from a client is represented in the server as a 'work item,' and the server maintains a pool of available work items per CPU to speed processing.  A sustained value greater than zero indicates the need to increase the 'MaxWorkItems' registry value for the Server service.  This value will always be 0 in the Blocking Queue instance.
1314 = Current Clients
1315 = Current Clients is the instantaneous count of the clients being serviced by this CPU.  The server actively balances the client load across all of the CPU's in the system.  This value will always be 0 in the Blocking Queue instance.
1317 = The rate at which the Server is receiving bytes from the network clients on this CPU.  This value is a measure of how busy the Server is.
1319 = The rate at which the Server is sending bytes to the network clients on this CPU.  This value is a measure of how busy the Server is.
1320 = Bytes Transferred/sec
1321 = The rate at which the Server is sending and receiving bytes with the network clients on this CPU.  This value is a measure of how busy the Server is.
1323 = Read Operations/sec is the rate the server is performing file read operations for the clients on this CPU.  This value is a measure of how busy the Server is.  This value will always be 0 in the Blocking Queue instance.
1324 = Read Bytes/sec
1325 = Read Bytes/sec is the rate the server is reading data from files for the clients on this CPU.  This value is a measure of how busy the Server is.
1327 = Write Operations/sec is the rate the server is performing file write operations for the clients on this CPU.  This value is a measure of how busy the Server is.  This value will always be 0 in the Blocking Queue instance.
1328 = Write Bytes/sec
1329 = Write Bytes/sec is the rate the server is writing data to files for the clients on this CPU.  This value is a measure of how busy the Server is.
1331 = Total Bytes/sec is the rate the Server is reading and writing data to and from the files for the clients on this CPU.  This value is a measure of how busy the Server is.
1332 = Total Operations/sec
1333 = Total Operations/sec is the rate the Server is performing file read and file write operations for the clients on this CPU.  This value is a measure of how busy the Server is.  This value will always be 0 in the Blocking Queue instance.
1334 = DPCs Queued/sec
1335 = DPCs Queued/sec is the average rate, in incidents per second, at which deferred procedure calls (DPCs) were added to the processor's DPC queue. DPCs are interrupts that run at a lower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs are added to the queue, not the number of DPCs in the queue.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1336 = DPC Rate
1337 = DPC Rate is the rate at which deferred procedure calls (DPCs) were added to the processors DPC queues between the timer ticks of the processor clock. DPCs are interrupts that run at alower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs were added to the queue, not the number of DPCs in the queue. This counter displays the last observed value only; it is not an average.
1342 = Total DPCs Queued/sec
1343 = Total DPCs Queued/sec is the combined rate at which deferred procedure calls (DPCs) are added to the DPC queue of all processors on the computer.  (DPCs are interrupts that run at a lower priority than standard interrupts). Each processor has its own DPC queue.  This counter measures the rate at which DPCs are added to the queue, not the number of DPCs in the queue.  It is the sum of Processor: DPCs Queued/sec for all processors on the computer, divided by the number of processors.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1344 = Total DPC Rate
1345 = Total DPC Rate is the combined rate at which deferred procedure calls (DPCs) are added to the DPC queues of all processors between timer ticks of each processor's system clock.  (DPCs are interrupts that run at a lower priority than standard interrupts). Each processor has its own DPC queue.  This counter measures the rate at which DPCs are added to the queue, not the number of DPCs in the queue.  It is the sum of Processor: DPC Rate for all processors on the computer, divided by the number of processors.  This counter displays the last observed value only; it is not an average.
1350 = % Registry Quota In Use
1351 = % Registry Quota In Use is the percentage of the Total Registry Quota Allowed that is currently being used by the system.  This counter displays the current percentage value only; it is not an average.
1360 = VL Memory
1361 = Counters that indicate the status of local and system Very Large memory allocations.
1362 = VLM % Virtual Size In Use
1363 = VLM % Virtual Size In Use
1364 = VLM Virtual Size
1365 = Current size of the process VLM Virtual memory space in bytes.
1366 = VLM Virtual Size Peak
1367 = The peak size of the process VLM virtual memory space in bytes.  This value indicates the maximum size of the process VLM virtual memory since the process started.
1368 = VLM Virtual Size Available
1369 = The current size of the process VLM virtual memory space in bytes that may be allocated.  Note that the maximum allocation allowed may be smaller than this value due to fragmentation of the memory space.
1370 = VLM Commit Charge
1371 = The current size of committed VLM memory space for the current process in bytes.
1372 = VLM Commit Charge Peak
1373 = The peak size of the committed VLM memory space in bytes for the current process since the process started.
1374 = System VLM Commit Charge
1375 = The current size of all committed VLM memory space in bytes for the system.
1376 = System VLM Commit Charge Peak
1377 = The peak size of all committed VLM memory space in bytes since the system was started.
1378 = System VLM Shared Commit Charge
1379 = The current size of all committed shared VLM memory space in bytes for the system.
1380 = Available KBytes
1381 = Available KBytes is the amount of physical memory, in Kilobytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
1382 = Available MBytes
1383 = Available MBytes is the amount of physical memory, in Megabytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
1400 = Avg. Disk Queue Length
1401 = Avg. Disk Queue Length is the average number of both read and write requests that were queued for the selected disk during the sample interval.
1402 = Avg. Disk Read Queue Length
1403 = Avg. Disk Read Queue Length is the average number of read requests that were queued for the selected disk during the sample interval.
1404 = Avg. Disk Write Queue Length
1405 = Avg. Disk Write Queue Length is the average number of write requests that were queued for the selected disk during the sample interval.
1406 = % Committed Bytes In Use
1407 = % Committed Bytes In Use is the ratio of Memory\\Committed Bytes to the Memory\\Commit Limit. Committed memory is the physical memory in use for which space has been reserved in the paging file should it need to be written to disk. The commit limit is determined by the size of the paging file.  If the paging file is enlarged, the commit limit increases, and the ratio is reduced). This counter displays the current percentage value only; it is not an average.
1408 = Full Image
1409 = The Full Image performance object consists of counters that monitor the virtual address usage of images executed by processes on the computer.  Full Image counters are the same counters as contained in Image object with the only difference being the instance name.  In the Full Image object, the instance name includes the full file path name of the loaded modules, while in the Image object only the filename is displayed.
1410 = Creating Process ID
1411 = The Creating Process ID value is the Process ID of the process that created the process. The creating process may have terminated, so this value may no longer identify a running process.
1412 = IO Read Operations/sec
1413 = The rate at which the process is issuing read I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1414 = IO Write Operations/sec
1415 = The rate at which the process is issuing write I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1416 = IO Data Operations/sec
1417 = The rate at which the process is issuing read and write I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1418 = IO Other Operations/sec
1419 = The rate at which the process is issuing I/O operations that are neither read nor write operations (for example, a control function). This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1420 = IO Read Bytes/sec
1421 = The rate at which the process is reading bytes from I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1422 = IO Write Bytes/sec
1423 = The rate at which the process is writing bytes to I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1424 = IO Data Bytes/sec
1425 = The rate at which the process is reading and writing bytes in I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1426 = IO Other Bytes/sec
1427 = The rate at which the process is issuing bytes to I/O operations that do not involve data such as control operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1450 = Print Queue
1451 = Displays performance statistics about a Print Queue.
1452 = Total Jobs Printed
1453 = Total number of jobs printed on a print queue since the last restart.
1454 = Bytes Printed/sec
1455 = Number of bytes per second printed on a print queue.
1456 = Total Pages Printed
1457 = Total number of pages printed through GDI on a print queue since the last restart.
1458 = Jobs
1459 = Current number of jobs in a print queue.
1460 = References
1461 = Current number of references (open handles) to this printer.
1462 = Max References
1463 = Peak number of references (open handles) to this printer.
1464 = Jobs Spooling
1465 = Current number of spooling jobs in a print queue.
1466 = Max Jobs Spooling
1467 = Maximum number of spooling jobs in a print queue since last restart.
1468 = Out of Paper Errors
1469 = Total number of out of paper errors in a print queue since the last restart.
1470 = Not Ready Errors
1471 = Total number of printer not ready errors in a print queue since the last restart.
1472 = Job Errors
1473 = Total number of job errors in a print queue since last restart.
1474 = Enumerate Network Printer Calls
1475 = Total number of calls from browse clients to this print server to request network browse lists since last restart.
1476 = Add Network Printer Calls
1477 = Total number of calls from other print servers to add shared network printers to this server since last restart.
1478 = Working Set - Private
1479 = Working Set - Private displays the size of the working set, in bytes, that is use for this process only and not shared nor sharable by other processes.
1480 = Working Set - Shared
1481 = Working Set - Shared displays the size of the working set, in bytes, that is sharable and may be used by other processes.  Because a portion of a process' working set is shareable, does not necessarily mean that other processes are using it.
1482 = % Idle Time
1483 = % Idle Time reports the percentage of time during the sample interval that the disk was idle.
1484 = Split IO/Sec
1485 = Split IO/Sec reports the rate at which I/Os to the disk were split into multiple I/Os. A split I/O may result from requesting data of a size that is too large to fit into a single I/O or that the disk is fragmented.
1500 = Job Object
1501 = Reports the accounting and processor usage data collected by each active named Job object.
1502 = Current % Processor Time
1503 = Current % Processor Time shows the percentage of the sample interval that the processes in the Job object spent executing code.
1504 = Current % User Mode Time
1505 = Current % User mode Time shows the percentage of the sample interval that the processes in the Job object spent executing code in user mode.
1506 = Current % Kernel Mode Time
1507 = Current % Kernel mode Time shows the percentage of the sample interval that the processes in the Job object spent executing code in kernel or privileged mode.
1508 = This Period mSec - Processor
1509 = This Period mSec - Processor shows the time, in milliseconds, of processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since a time limit on the Job was established.
1510 = This Period mSec - User Mode
1511 = This Period mSec - User mode shows the time, in milliseconds, of user mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since a time limit on the Job was established.
1512 = This Period mSec - Kernel Mode
1513 = This Period mSec - Kernel mode shows the time, in milliseconds, of kernel mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since a time limit on the Job was established.
1514 = Pages/Sec
1515 = Pages/Sec shows the page fault rate of all the processes in the Job object.
1516 = Process Count - Total
1517 = Process Count - Total shows the number of processes, both active and terminated, that are or have been associated with the Job object.
1518 = Process Count - Active
1519 = Process Count - Active shows the number of processes that are currently associated with the Job object.
1520 = Process Count - Terminated
1521 = Process Count - Terminated shows the number of processes that have been terminated because of a limit violation.
1522 = Total mSec - Processor
1523 = Total mSec - Processor shows the time, in milliseconds, of processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since the Job object was created.
1524 = Total mSec - User Mode
1525 = Total mSec - User mode shows the time, in milliseconds, of user mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since the Job object was created.
1526 = Total mSec - Kernel Mode
1527 = Total mSec - Kernel mode shows the time, in milliseconds, of kernel mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since the Job object was created.
1530 = TCPv6
1532 = UDPv6
1534 = ICMPv6
1536 = Received Packet Too Big
1537 = Received Packet Too Big is the number of received packets thatare larger than anticipated.
1538 = Received Membership Query
1539 = Received Membership Query is the number of packets received thatquery their membership to a group.
1540 = Received Membership Report
1541 = Received Membership Report is the number of packets received thatreport their membership to a group.
1542 = Received Membership Reduction
1543 = Received Membership Reduction is the number of packets received thatcancelled their membership to a group.
1544 = Received Router Solicit
1545 = Received Router Solicit is the number of packets received thatsolicit the router.
1546 = Received Router Advert
1547 = Received Router Advert is the number of packets received thatadvert the router.
1548 = Job Object Details
1549 = % Job object Details shows detailed performance information about the active processes that make up a Job object.
1550 = Received Neighbor Solicit
1551 = Received Neighbor Solicit is the number of packets received thatsolicit a neighbor.
1552 = Received Neighbor Advert
1553 = Received Neighbor Advert is the number of packets received thatadvert a neighbor.
1554 = Sent Packet Too Big
1555 = Sent Packet Too Big is the number of sent packets thatare larger than anticipated.
1556 = Sent Membership Query
1557 = Sent Membership Query is the number of packets sent thatquery their membership to a group.
1558 = Sent Membership Report
1559 = Sent Membership Report is the number of packets sent thatreport their membership to a group.
1560 = Sent Membership Reduction
1561 = Sent Membership Reduction is the number of packets sent thatcancelled their membership to a group.
1562 = Sent Router Solicit
1563 = Sent Router Solicit is the number of packets sent thatsolicit the router.
1564 = Sent Router Advert
1565 = Sent Router Advert is the number of packets sent thatadvert the router.
1566 = Sent Neighbor Solicit
1567 = Sent Neighbor Solicit is the number of packets sent thatsolicit a neighbor.
1568 = Sent Neighbor Advert
1569 = Sent Neighbor Advert is the number of packets sent thatadvert a neighbor.
1570 = Security System-Wide Statistics
1571 = These counters track authentication performance on a per second basis.
1572 = NTLM Authentications
1573 = This counter tracks the number of NTLM authentications processed per second for the AD on this DC or for local accounts on this member server.
1574 = Kerberos Authentications
1575 = This counter tracks the number of times that clients use a ticket to authenticate to this computer per second.
1576 = KDC AS Requests
1577 = This counter tracks the number of Authentiation Service (AS) requests that are being processed by the Key Distribution Center (KDC) per second. Clients use AS requests to obtain a ticket-granting ticket.
1578 = KDC TGS Requests
1579 = This counter tracks the number of ticket-granting service (TGS) requests that are being processed by the Key Distribution Center (KDC) per second. Clients use these TGS requests to obtain a service ticket, which allows a client to access resources on other computers.
1580 = Schannel Session Cache Entries
1581 = This counter tracks the number of Secure Sockets Layer (SSL) entries that are currently stored in the secure channel (Schannel) session cache.  The Schannel session cache stores information about successfully established sessions, such as SSL session IDs.  Clients can use this information to reconnect to a server without performing a full SSL handshake.
1582 = Active Schannel Session Cache Entries
1583 = This counter tracks the number of Secure Sockets Layer (SSL) entries that are currently stored in the secure channel (Schannel) session cache and that are currently in use.  The Schannel session cache stores information about successfully established sessions, such as SSL session IDs.  Clients can use this information to reconnect to a server without performaing a full SSL handshake.
1584 = SSL Client-Side Full Handshakes
1585 = This counter tracks the number of Secure Sockets Layer (SSL) full client-side handshakes that are being processed per second.  During a handshake, signals are exchanged to acknowledge that communication can occur between computers or other devices.
1586 = SSL Client-Side Reconnect Handshakes
1587 = This counter tracks the number of Secure Sockets Layer (SSL) client-side reconnect handshakes that are being processed per second.  Reconnect handshakes allow session keys from previous SSL sessions to be used to resume a client/server connection, and they require less memory to process than full handshakes.
1588 = SSL Server-Side Full Handshakes
1589 = This counter tracks the number of Secure Sockets Layer (SSL) full server-side handshakes that are being processed per second.  During a handshake, signals are exchanged to acknowledge that communication can occur between computers or other devices.
1590 = SSL Server-Side Reconnect Handshakes
1591 = This counter tracks the number of Secure Sockets Layer (SSL) server-side reconnect handshakes that are being processed per second.  Reconnect handshakes allow session keys from previous SSL sessions to be used to resume a client/server connection, and they require less memory to process than full handshakes.
1592 = Digest Authentications
1593 = This counter tracks the number of Digest authentications that are being processed per second.
1594 = Forwarded Kerberos Requests
1595 = This counter tracks the number of Kerberos requests that a read-only domain controller (RODC) forwards to its hub, per second.  This counter is tracked only on a RODC.
1596 = Offloaded Connections
1597 = Offloaded Connections is the number of TCP connections (over both IPv4 and IPv6) that are currently handled by the TCP chimney offload capable network adapter.
1670 = Security Per-Process Statistics
1671 = These counters track the number of security resources and handles used per process.
1672 = Credential Handles
1673 = This counter tracks the number of credential handles in use by a given process.  Credential handles are handles to pre-existing credentials, such as a password, that are associated with a user and are established through a system logon.
1674 = Context Handles
1675 = This counter tracks the number of context handles in use by a given process.  Context handles are associated with security contexts established between a client application and a remote peer.
1676 = Free & Zero Page List Bytes
1677 = Free & Zero Page List Bytes is the amount of physical memory, in bytes, that is assigned to the free and zero page lists. This memory does not contain cached data. It is immediately available for allocation to a process or for system use. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
1678 = Modified Page List Bytes
1679 = Modified Page List Bytes is the amount of physical memory, in bytes, that is assigned to the modified page list. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. This memory needs to be written out before it will be available for allocation to a process or for system use. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
1680 = Standby Cache Reserve Bytes
1681 = Standby Cache Reserve Bytes is the amount of physical memory, in bytes, that is assigned to the reserve standby cache page lists. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. It is immediately available for allocation to a process or for system use. If the system runs out of available free and zero memory, memory on lower priority standby cache page lists will be repurposed before memory on higher priority standby cache page lists. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
1682 = Standby Cache Normal Priority Bytes
1683 = Standby Cache Normal Priority Bytes is the amount of physical memory, in bytes, that is assigned to the normal priority standby cache page lists. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. It is immediately available for allocation to a process or for system use. If the system runs out of available free and zero memory, memory on lower priority standby cache page lists will be repurposed before memory on higher priority standby cache page lists. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
1684 = Standby Cache Core Bytes
1685 = Standby Cache Core Bytes is the amount of physical memory, in bytes, that is assigned to the core standby cache page lists. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. It is immediately available for allocation to a process or for system use. If the system runs out of available free and zero memory, memory on lower priority standby cache page lists will be repurposed before memory on higher priority standby cache page lists. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.
1746 = % Idle Time
1747 = % Idle Time is the percentage of time the processor is idle during the sample interval
1748 = % C1 Time
1749 = % C1 Time is the percentage of time the processor spends in the C1 low-power idle state. % C1 Time is a subset of the total processor idle time. C1 low-power idle state enables the processor to maintain its entire context and quickly return to the running state. Not all systems support the % C1 state.
1750 = % C2 Time
1751 = % C2 Time is the percentage of time the processor spends in the C2 low-power idle state. % C2 Time is a subset of the total processor idle time. C2 low-power idle state enables the processor to maintain the context of the system caches. The C2 power state is a lower power and higher exit latency state than C1. Not all systems support the C2 state.
1752 = % C3 Time
1753 = % C3 Time is the percentage of time the processor spends in the C3 low-power idle state. % C3 Time is a subset of the total processor idle time. When the processor is in the C3 low-power idle state it is unable to maintain the coherency of its caches. The C3 power state is a lower power and higher exit latency state than C2. Not all systems support the C3 state.
1754 = C1 Transitions/sec
1755 = C1 Transitions/sec is the rate that the CPU enters the C1 low-power idle state. The CPU enters the C1 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1756 = C2 Transitions/sec
1757 = C2 Transitions/sec is the rate that the CPU enters the C2 low-power idle state. The CPU enters the C2 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1758 = C3 Transitions/sec
1759 = C3 Transitions/sec is the rate that the CPU enters the C3 low-power idle state. The CPU enters the C3 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1760 = Heap
1761 = Heap performance counters for must used heaps
1762 = Committed Bytes
1763 = Memory actively used by this heap (FreeBytes + AllocatedBytes)
1764 = Reserved Bytes
1765 = Total virtual address space reserved for this heap (includes uncommitted ranges)
1766 = Virtual Bytes
1767 = ReservedBytes minus last uncommitted range in each segment
1768 = Free Bytes
1769 = Memory on freelists in this heap (does not include uncommitted ranges or blocks in heap cache)
1770 = Free List Length
1771 = Number of blocks on the list of free blocks >1k in size
1772 = Avg. alloc rate
1773 = 1/Average time per allocation (excluding allocs from heap cache)
1774 = Avg. free rate
1775 = 1/Average time per free (excluding frees to heap cache)
1776 = Uncommitted Ranges Length
1777 = Number of uncommitted ranges in the reserved virtual address
1778 = Allocs - Frees
1779 = Difference between number of allocations and frees (for leak detection)
1780 = Cached Allocs/sec
1781 = Allocations/sec from heap cache
1782 = Cached Frees/sec
1783 = Frees/sec from heap cache
1784 = Allocs <1K/sec
1785 = Allocations/sec of size <1k bytes (including heap cache)
1786 = Frees <1K/sec
1787 = Frees/sec of size <1k bytes (including heap cache)
1788 = Allocs 1-8K/sec
1789 = Allocations/sec of size 1-8k bytes
1790 = Frees 1-8K/sec
1791 = Frees/sec of size 1-8k bytes
1792 = Allocs over 8K/sec
1793 = Allocations/sec of size over 8k bytes
1794 = Frees over 8K/sec
1795 = Frees/sec of size over 8k bytes
1796 = Total Allocs/sec
1797 = Allocations/sec (including from heap cache)
1798 = Total Frees/sec
1799 = Frees/sec (including to heap cache)
1800 = Blocks in Heap Cache
1801 = Total number of blocks in the heap cache
1802 = Largest Cache Depth
1803 = Largest number of blocks of any one size in the heap cache
1804 = % Fragmentation
1805 = (FreeBytes / CommittedBytes) *100
1806 = % VAFragmentation
1807 = (VirtualBytes / ReservedBytes) * 100
1808 = Heap Lock contention
1809 = Collisions/sec on the heap lock
1810 = Dirty Pages
1811 = Total number of dirty pages on the system cache
1812 = Dirty Page Threshold
1813 = Threshold for number of dirty pages on system cache
1846 = End Marker
1847 = End Marker
2156 = BITS Net Utilization
2157 = BITS Per Job Network Utilization
2158 = Remote Server Speed (Bits/Sec)
2159 = Estimate of Remote Server Speed (Bits/Sec)
2160 = Netcard Speed (Bits/Sec)
2161 = Estimate of the local netcard's speed (Bits/Sec)
2162 = Percent Netcard Free
2163 = Estimate of most recent percent network interface utilization
2164 = IGD Speed (Bits/Sec)
2165 = Estimate of the IGD's Internet connection speed (Bits/Sec)
2166 = Percent IGD Free
2167 = Estimate of most recent percent IGD Internet connection utilization
2168 = BITS Download BlockSize (Bytes)
2169 = Size of the next download block for BITS
2170 = BITS Download Response Interval (msec)
2171 = BITS download response interval (msec)
2172 = Estimated bandwidth available to the remote system (Bits/sec)
2173 = Estimated bandwidth available to the remote system (Bits/sec)
2186 = Telephony
2187 = The Telphony System
2188 = Number of Lines
2189 = The number of telephone lines serviced by this computer.
2190 = Number of Telephone devices
2191 = The number of telephone devices serviced by this computer.
2192 = Number of Active Lines
2193 = the number of telephone lines serviced by this computer that are currently active.
2194 = Number of Active Telephones
2195 = The number of telephone devices that are currently being monitored.
2196 = Outgoing calls/sec
2197 = The rate of outgoing calls made by this computer.
2198 = Incoming calls/sec
2199 = The rate of incoming calls answered by this computer.
2200 = Number of Client Apps
2201 = The number of applications that are currently using telephony services.
2202 = Current Outgoing Calls
2203 = Current outgoing calls being serviced by this computer.
2204 = Current Incoming Calls
2205 = Current incoming calls being serviced by this computer.
2206 = RAS Port
2207 = The RAS Object Type handles individual ports of the RAS device on your system.
2208 = Bytes Transmitted
2209 = The number of bytes transmitted total for this connection.
2210 = Bytes Received
2211 = The number of bytes received total for this connection.
2212 = Frames Transmitted
2213 = The number of data frames transmitted total for this connection.
2214 = Frames Received
2215 = The number of data frames received total for this connection.
2216 = Percent Compression Out
2217 = The compression ratio for bytes being transmitted.
2218 = Percent Compression In
2219 = The compression ratio for bytes being received.
2220 = CRC Errors
2221 = The total number of CRC Errors for this connection.  CRC Errors occur when the frame received contains erroneous data.
2222 = Timeout Errors
2223 = The total number of Timeout Errors for this connection.  Timeout Errors occur when an expected is not received in time.
2224 = Serial Overrun Errors
2225 = The total number of Serial Overrun Errors for this connection.  Serial Overrun Errors occur when the hardware cannot handle the rate at which data is received.
2226 = Alignment Errors
2227 = The total number of Alignment Errors for this connection.  Alignment Errors occur when a byte received is different from the byte expected.
2228 = Buffer Overrun Errors
2229 = The total number of Buffer Overrun Errors for this connection.  Buffer Overrun Errors when the software cannot handle the rate at which data is received.
2230 = Total Errors
2231 = The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors for this connection.
2232 = Bytes Transmitted/Sec
2233 = The number of bytes transmitted per second.
2234 = Bytes Received/Sec
2235 = The number of bytes received per second.
2236 = Frames Transmitted/Sec
2237 = The number of frames transmitted per second.
2238 = Frames Received/Sec
2239 = The number of frames received per second.
2240 = Total Errors/Sec
2241 = The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors per second.
2242 = RAS Total
2243 = The RAS Object Type handles all combined ports of the RAS device on your system.
2244 = Total Connections
2245 = The total number of Remote Access connections.
3206 = Database
3207 = Database provides performance statistics for each process using the ESE high performance embedded database management system.
3208 = Pages Converted/sec
3209 = Pages Converted/sec is the count of times per second a database page is converted from an older database format
3210 = Pages Converted
3211 = Pages Converted is the count of database pages that have been converted from an older format
3212 = Records Converted/sec
3213 = Records Converted/sec is the count of times per second a database record is converted from an older database format
3214 = Records Converted
3215 = Records Converted is the count of database records that have been converted from an older format
3216 = Defragmentation Tasks
3217 = Defragmentation Tasks is the count of background database defragmentation tasks that are currently executing.
3218 = Defragmentation Tasks Pending
3219 = Defragmentation Tasks Pending is the count of background database defragmentation tasks that are currently pending.
3220 = Defragmentation Tasks Discarded
3221 = Defragmentation Tasks Discarded is the count of background database defragmentation tasks that could not be registered. [Dev Only]
3222 = Defragmentation Tasks Scheduled/sec
3223 = Defragmentation Tasks Scheduled/sec is the number of background database defragmentation tasks scheduled for execution per second. [Dev Only]
3224 = Defragmentation Tasks Completed/sec
3225 = Defragmentation Tasks Completed/sec is the number of background database defragmentation tasks completing execution per second. [Dev Only]
3226 = Heap Allocs/sec
3227 = Heap Allocs/sec is the number of memory allocations from the MP Heaps per second.  [Dev Only]
3228 = Heap Frees/sec
3229 = Heap Frees/sec is the number of memory frees to the MP Heaps per second.  [Dev Only]
3230 = Heap Allocations
3231 = Heap Allocations is the current number of memory allocations in the MP Heaps.  [Dev Only]
3232 = Heap Bytes Allocated
3233 = Heap Bytes Allocated is the size of all memory allocations in the MP Heaps discounting heap managemnt overhead.  [Dev Only]
3234 = Page Bytes Reserved
3235 = Page Bytes Reserved is the size of all explicitly reserved virtual address space.  [Dev Only]
3236 = Page Bytes Committed
3237 = Page Bytes Committed is the size of all explicitly committed virtual memory backing store (page file and physical memory).  [Dev Only]
3238 = FCB Asynchronous Scan/sec
3239 = FCB Asynchronous Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup. These records are scanned to age out older schema definitions. [Dev Only]
3240 = FCB Asynchronous Purge/sec
3241 = FCB Asynchronous Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup. These records are purged to age out older schema definitions. [Dev Only]
3242 = FCB Asynchronous Threshold-Scan/sec
3243 = FCB Asynchronous Threshold-Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively scanned to age out older schema definitions.  [Dev Only]
3244 = FCB Asynchronous Threshold-Purge/sec
3245 = FCB Asynchronous Threshold-Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively purged to age out older schema definitions.  [Dev Only]
3246 = FCB Asynchronous Purge Conflicts/sec
3247 = FCB Asynchronous Purge Conflicts/sec is the number of failed purge attempts on cached schema records (FCBs) during asynchronous schema record cleanup.  The purge operation failed because exclusive ownership of the schema record could not be obtained.  [Dev Only]
3248 = FCB Synchronous Purge/sec
3249 = FCB Synchronous Purge/sec is the number of cached schema records (FCBs) being synchronously purged each second.  [Dev Only]
3250 = FCB Synchronous Purge Stalls/sec
3251 = FCB Synchronous Purge Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to synchronously purge them.  [Dev Only]
3252 = FCB Allocations Wait For Version Cleanup/sec
3253 = FCB Allocations Wait For Version Cleanup/sec is the number FCB allocations that must first wait for version cleanup in an attempt to free used FCBs for re-use. [Dev Only]
3254 = FCB Purge On Cursor Close/sec
3255 = FCB Purge On Cursor Close/sec is the number of cached schema records (FCBs) being synchronously purged when the cursor is closed (instead of leaving the schema record cached) each second.  [Dev Only]
3256 = FCB Cache % Hit
3257 = FCB Cache % Hit is the percentage of schema records (FCBs) opened directly from the schema record cache.  No file operations were required.  [Dev Only]
3258 = No name
3259 = No text
3260 = FCB Cache Stalls/sec
3261 = FCB Cache Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to update their reference count.  [Dev Only]
3262 = FCB Cache Maximum
3263 = FCB Cache Maximum is the absolute maximum number of the schema records (FCBs) that can exist in the cache.  [Dev Only]
3264 = FCB Cache Preferred
3265 = FCB Cache Preferred is the preferred maximum number of the schema records (FCBs) that should exist in the cache.  [Dev Only]
3266 = FCB Cache Allocated
3267 = FCB Cache Allocated is the number of cached schema records (FCBs) currently allocated and in use.  [Dev Only]
3268 = FCB Cache Available
3269 = FCB Cache Available is the number of cached schema records (FCBs) currently allocated but not in use.  These records will be used and/or purged as required.  [Dev Only]
3270 = Sessions In Use
3271 = Sessions In Use is the number of database sessions currently open for use by client threads.
3272 = Sessions % Used
3273 = Sessions % Used is the percentage of database sessions currently open for use by client threads.
3274 = No name
3275 = No text
3276 = Table Open Cache % Hit
3277 = Table Open Cache % Hit is the percentage of database tables opened using cached schema information.  If this percentage is too low, the table cache size may be too small.
3278 = No name
3279 = No text
3280 = Table Open Cache Hits/sec
3281 = Table Open Cache Hits/sec is the number of database tables opened using cached schema information per second.  If this rate is too low, the table cache size may be too small.
3282 = Table Open Cache Misses/sec
3283 = Table Open Cache Misses/sec is the number of database tables opened without using cached schema information per second.  If this rate is too high, the table cache size may be too small.
3284 = Table Opens/sec
3285 = Table Opens/sec is the number of database tables opened per second.
3286 = Log Bytes Write/sec
3287 = Log Bytes Write per second is the rate bytes are written to the log.
3288 = Log Bytes Generated/sec
3289 = Log Bytes Generated per second is the rate at which data is added to the log.  This is different from Log Bytes Write per second in that each byte is generated only once whereas each byte may be written many times.
3290 = Log Buffer Bytes Used
3291 = Log Buffer Bytes Used is the amount of bytes in the log buffers that have not yet been flushed to the logs.  [Dev Only]
3292 = Log Buffer Bytes Free
3293 = Log Buffer Bytes Free is the amount of free space available in the log buffers.  [Dev Only]
3294 = Log Threads Waiting
3295 = Log Threads Waiting is the number of threads waiting for their data to be written to the log in order to complete an update of the database.  If this number is too high, the log may be a bottleneck.
3296 = Log Checkpoint Depth
3297 = Log Checkpoint Depth represents the amount of work, in bytes, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
3298 = Log Generation Checkpoint Depth
3299 = Log Generation Checkpoint Depth represents the amount of work, in count of log files, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
3300 = User Read Only Transaction Commits to Level 0/sec
3301 = User Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3302 = User Read/Write Transaction Commits to Level 0/sec
3303 = User Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3304 = User Transaction Commits to Level 0/sec
3305 = User Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3306 = User Read Only Transaction Rollbacks to Level 0/sec
3307 = User Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3308 = User Read/Write Transaction Rollbacks to Level 0/sec
3309 = User Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3310 = User Transaction Rollbacks to Level 0/sec
3311 = User Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3312 = System Read Only Transaction Commits to Level 0/sec
3313 = System Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3314 = System Read/Write Transaction Commits to Level 0/sec
3315 = System Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that modify data stored in the database engine.  [Dev Only]
3316 = System Transaction Commits to Level 0/sec
3317 = System Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that access data stored in the database engine.  [Dev Only]
3318 = System Read Only Transaction Rollbacks to Level 0/sec
3319 = System Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3320 = System Read/Write Transaction Rollbacks to Level 0/sec
3321 = System Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that modify data stored in the database engine.  [Dev Only]
3322 = System Transaction Rollbacks to Level 0/sec
3323 = System Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that access data stored in the database engine.  [Dev Only]
3324 = Database Page Allocation File Extension Async Consumed/sec
3325 = Database Page Allocation File Extension Async Consumed/sec is the rate of page allocations from a database file that must be serviced by extending the database file, but which do not stall when doing doing so.  [Dev Only]
3326 = Database Page Allocation File Extension Stalls/sec
3327 = Database Page Allocation File Extension Stalls/sec is the rate of page allocations from a database file that must be serviced by extending the database file and which stall when doing so.  [Dev Only]
3328 = Log Records/sec
3329 = Log Records/sec is the count of records written to the database log buffers per second.  [Dev Only]
3330 = Log Buffer Capacity Flushes/sec
3331 = Log Buffer Capacity Flushes/sec is the count of times the database log buffers must be flushed per second because they are full.  [Dev Only]
3332 = Log Buffer Commit Flushes/sec
3333 = Log Buffer Commit Flushes/sec is the count of times the database log buffers must be flushed per second because a transaction is fully committing its changes.  [Dev Only]
3334 = Log Buffer Flushes/sec
3335 = Log Buffer Flushes/sec is the count of times the database log buffers must be flushed per second.  [Dev Only]
3336 = Log Writes/sec
3337 = Log Writes/sec is the number of times the log buffers are written to the log file(s) per second.  If this number approaches the maximum write rate for the media holding the log file(s), the log may be a bottleneck.
3338 = Log Record Stalls/sec
3339 = Log Record Stalls/sec is the number of log records that cannot be added to the log buffers per second because they are full.  If this counter is non-zero most of the time, the log buffer size may be a bottleneck.
3340 = Version buckets allocated
3341 = Total number of version buckets allocated
3342 = Version buckets allocated for deletes
3343 = Total number of version buckets allocated for FlagDelete RCEs  [Dev Only]
3344 = VER Bucket Allocations Wait For Version Cleanup/sec
3345 = VER Bucket Allocations Wait For Version Cleanup/sec is the number of version bucket allocations that must first wait for version cleanup in an attempt to free used version buckets  for re-use. [Dev Only]
3346 = Version store average RCE bookmark length
3347 = Average length of bookmark in RCE  [Dev Only]
3348 = Version store unnecessary calls/sec
3349 = Number of times per second we look in the version store for a node whose version bit is set but which has no versions  [Dev Only]
3350 = Version store cleanup tasks asynchronously dispatched/sec
3351 = Number of times per second a version store clean task is dispatched asynchronously to be performed  [Dev Only]
3352 = Version store cleanup tasks synchronously dispatched/sec
3353 = Number of times per second a version store clean task is performed synchronously  [Dev Only]
3354 = Version store cleanup tasks discarded/sec
3355 = Number of times per second a version store clean task was discarded due to load concerns  [Dev Only]
3356 = Version store cleanup tasks failures/sec
3357 = Number of times per second a dispatched version store cleanup task fails  [Dev Only]
3358 = Record Inserts/sec
3359 = Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
3360 = Record Deletes/sec
3361 = Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
3362 = Record Replaces/sec
3363 = Record Deletes/sec is the rate at which records in database tables are being updated.  [Dev Only]
3364 = Record Unnecessary Replaces/sec
3365 = Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
3366 = Record Redundant Replaces/sec
3367 = Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
3368 = Record Escrow-Updates/sec
3369 = Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
3370 = Secondary Index Inserts/sec
3371 = Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
3372 = Secondary Index Deletes/sec
3373 = Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
3374 = False Index Column Updates/sec
3375 = False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
3376 = False Tuple Index Column Updates/sec
3377 = False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
3378 = Record Intrinsic Long-Values Updated/sec
3379 = Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
3380 = Record Separated Long-Values Added/sec
3381 = Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
3382 = Record Separated Long-Values Forced/sec
3383 = Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
3384 = Record Separated Long-Values All Forced/sec
3385 = Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
3386 = Record Separated Long-Values Reference All/sec
3387 = Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
3388 = Record Separated Long-Values Dereference All/sec
3389 = Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
3390 = Separated Long-Value Seeks/sec
3391 = Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
3392 = Separated Long-Value Retrieves/sec
3393 = Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
3394 = Separated Long-Value Creates/sec
3395 = Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
3396 = Separated Long-Value Updates/sec
3397 = Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
3398 = Separated Long-Value Deletes/sec
3399 = Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
3400 = Separated Long-Value Copies/sec
3401 = Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
3402 = Separated Long-Value Chunk Seeks/sec
3403 = Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
3404 = Separated Long-Value Chunk Retrieves/sec
3405 = Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
3406 = Separated Long-Value Chunk Appends/sec
3407 = Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
3408 = Separated Long-Value Chunk Replaces/sec
3409 = Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
3410 = Separated Long-Value Chunk Deletes/sec
3411 = Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
3412 = Separated Long-Value Chunk Copies/sec
3413 = Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
3414 = B+ Tree Append Splits/sec
3415 = B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
3416 = B+ Tree Right Splits/sec
3417 = B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
3418 = B+ Tree Right Hotpoint Splits/sec
3419 = B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
3420 = B+ Tree Vertical Splits/sec
3421 = B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
3422 = B+ Tree Splits/sec
3423 = B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
3424 = B+ Tree Empty Page Merges/sec
3425 = B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
3426 = B+ Tree Right Merges/sec
3427 = Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
3428 = B+ Tree Partial Merges/sec
3429 = B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
3430 = B+ Tree Left Merges/sec
3431 = B+ Tree Left Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the previous page to the left.  [Dev Only]
3432 = B+ Tree Partial Left Merges/sec
3433 = B+ Tree Partial Left Merges/sec is the count of pages where some of its records are moved to a page on the left in a database B+ Tree per second.  [Dev Only]
3434 = B+ Tree Page Moves/sec
3435 = B+ Tree Page Moves/sec is the count of B+ Tree pages per second where all the records are moved to a new page. [Dev Only]
3436 = B+ Tree Merges/sec
3437 = B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
3438 = B+ Tree Failed Simple Page Cleanup Attempts/sec
3439 = B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
3440 = B+ Tree Seek Short Circuits/sec
3441 = B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
3442 = B+ Tree Opportune Prereads/sec
3443 = B+ Tree Opportune Prereads/sec is the number of pages per second that are preread because they are adjacent to a page read by a seek.  [Dev Only]
3444 = B+ Tree Unnecessary Sibling Latches/sec
3445 = B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
3446 = B+ Tree Move Nexts/sec
3447 = B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
3448 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec
3449 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
3450 = B+ Tree Move Prevs/sec
3451 = B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
3452 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec
3453 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
3454 = B+ Tree Seeks/sec
3455 = B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
3456 = B+ Tree Inserts/sec
3457 = B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
3458 = B+ Tree Replaces/sec
3459 = B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
3460 = B+ Tree Flag Deletes/sec
3461 = B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
3462 = B+ Tree Deletes/sec
3463 = B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
3464 = B+ Tree Appends/sec
3465 = B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
3466 = B+ Tree Creates/sec
3467 = B+ Tree Creates/sec is the number of B+ Trees and their corresponding space trees (if any) created per second.  This can also be viewed as the number of FDP creates per second.  [Dev Only]
3468 = B+ Tree Creates (Total)
3469 = B+ Tree Creates (Total) is the total number of B+ Trees and their corresponding space trees (if any) created.  This can also be viewed as the total number of FDP creates.  [Dev Only]
3470 = B+ Tree Destroys/sec
3471 = B+ Tree Destroys/sec is the number of B+ Trees and their corresponding space trees (if any) destroyed per second.  This can also be viewed as the number of FDP destroys per second.  [Dev Only]
3472 = B+ Tree Destroys (Total)
3473 = B+ Tree Destroys (Total) is the total number of B+ Trees and their corresponding space trees (if any) destroyed.  This can also be viewed as the total number of FDP destroys.  [Dev Only]
3474 = Database Cache Misses/sec
3475 = Database Cache Misses per second is the rate at which database file page requests were fulfilled by the database cache by causing a file operation.  If this rate is high then the database cache size may be too small.
3476 = Database Cache % Hit
3477 = Database Cache % Hit is the percentage of database file page requests that were fulfilled by the database cache without causing a file operation.  If this percentage is too low, the database cache size may be too small.
3478 = No name
3479 = No text
3480 = Database Cache Requests/sec
3481 = Database Cache Requests/sec is the rate that pages are requested from the database cache.
3482 = Database Cache % Pinned
3483 = Database Cache % Pinned is the percentage of the database cache that pinned in the memory.  [Dev Only]
3484 = No name
3485 = No text
3486 = Database Cache % Clean
3487 = Database Cache % Clean is the percentage of the database cache that does not contain modified data.  [Dev Only]
3488 = No name
3489 = No text
3490 = Database Pages Read Async/sec
3491 = Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
3492 = Database Pages Read Sync/sec
3493 = Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
3494 = Database Pages Written/sec
3495 = Database Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
3496 = Database Clean Pages Written/sec
3497 = Database Clean Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
3498 = Database Opportune Write Issued (Total)
3499 = Database Opportune Write Issued (Total) is the count of IO operationshas been issued for opportune write. [Dev Only]
3500 = Database Pages Transferred/sec
3501 = Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
3502 = Database Page Latches/sec
3503 = Database Page Latches/sec is the rate that database pages are latched for access to their data.  [Dev Only]
3504 = Database Page Fast Latches/sec
3505 = Database Page Fast Latches/sec is the rate that database pages are latched for access to their data using a hint to tell the cache manager where that page might be in memory.  [Dev Only]
3506 = Database Page Bad Latch Hints/sec
3507 = Database Page Bad Latch Hints/sec is the rate that incorrect hints to the location of a given page in the cache are given to the cache manager.  These hints are used to perform fast latches.  [Dev Only]
3508 = Database Cache % Fast Latch
3509 = Database Cache % Fast Latch is the percentage of database pages latched for access to their data using a hint to tell the cache manager where that page might be in memory.  Ideally, this percentage should match Database Cache % Hit.  [Dev Only]
3510 = No name
3511 = No text
3512 = Database Page Latch Conflicts/sec
3513 = Database Page Latch Conflicts/sec is the rate that users latching a database page for access to its data fail due to a conflicting latch owned on that same page by another user.  [Dev Only]
3514 = Database Page Latch Stalls/sec
3515 = Database Page Latch Stalls/sec is the rate that users latching a database page for access to its data must wait for another user to release a latch on that same page.  [Dev Only]
3516 = Database Cache % Available
3517 = Database Cache % Available is the percentage of the database cache that can be allocated to cache database pages that are newly created or read in from the database file(s).  [Dev Only]
3518 = No name
3519 = No text
3520 = Database Page Faults/sec
3521 = Database Page Faults/sec is the rate that database file page requests require the database cache manager to allocate a new page from the database cache.
3522 = Database Page Evictions/sec
3523 = Database Page Evictions/sec is the rate that database file page requests that require the database cache manager to allocate a new page from the database cache force another database page out of the cache.  The eviction count is charged when the page is allocated and not when the previous owner of that page was actually evicted from the cache.  If this rate is too high, the database cache size may be too small.
3524 = Database Page Fault Stalls/sec
3525 = Database Page Fault Stalls/sec is the rate of page faults that cannot be serviced because there are no pages available for allocation from the database cache.  If this counter is non-zero most of the time, the clean threshold may be too low.
3526 = Database Cache Size (MB)
3527 = Database Cache Size (MB) is the amount of system memory (in MegaBytes) used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance.  If there is a lot of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit.  Increasing this limit may increase performance.
3528 = Database Cache Size
3529 = Database Cache Size is the amount of system memory used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance.  If there is a lot of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit.  Increasing this limit may increase performance.
3530 = Database Cache Size Min
3531 = Database Cache Size Min is the minimum amount of system memory configured for use by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  [Dev Only]
3532 = Database Cache Size Max
3533 = Database Cache Size Max is the maximum amount of system memory configured for use by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  [Dev Only]
3534 = Database Cache Size Resident
3535 = Database Cache Size Resident is the amount of system memory used by the database cache that is currently part of the working set of the process.  If Database Cache Size Resident is ever significantly smaller than Database Cache Size then the operating system has chosen to reclaim that system memory for use in other parts of the system.  The database cache will recover from this event but if this is a common occurrence then it can lead to significant performance problems.
3536 = Database Cache Size Resident (MB)
3537 = Database Cache Size Resident (MB) is the amount of system memory (in MegaBytes) used by the database cache that is currently part of the working set of the process.  If Database Cache Size Resident (MB) is ever significantly smaller than Database Cache Size (MB) then the operating system has chosen to reclaim that system memory for use in other parts of the system.  The database cache will recover from this event but if this is a common occurrence then it can lead to significant performance problems.
3538 = Database Cache % Available Min
3539 = Database Cache % Available Min is the minimum percentage of the database cache that is kept to be allocated to cache database pages that are newly created or read in from the database file(s).  If the percentage of available pages drops below this minimum, pages are thrown out of the database cache until the maximum percentage of available pages is reached.  This percentage should be set as low as possible without causing the actual percentage to drop to zero, causing cache fault stalls.  [Dev Only]
3540 = No name
3541 = No text
3542 = Database Cache % Available Max
3543 = Database Cache % Available Max is the maximum percentage of the database cache that is kept to be allocated to cache database pages that are newly created or read in from the database file(s).  This percentage should be set as low as possible but far enough above the minimum percentage so that efficient production of availible pages is possible.  [Dev Only]
3544 = No name
3545 = No text
3546 = Database Pages Preread/sec
3547 = Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
3548 = Database Cached Pages Preread/sec
3549 = Database Cached Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that are already cached.  This is non-ideal behavior that represents a waste of processing time.  [Dev Only]
3550 = Database Pages Preread Untouched/sec
3551 = Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time.  [Dev Only]
3552 = Database Pages Versioned/sec
3553 = Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
3554 = Database Pages Version Copied/sec
3555 = Database Pages Version Copied/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
3556 = Database Cache % Versioned
3557 = Database Cache % Versioned is the percentage of the database cache that contains older versions of currently cached pages that have not yet been written to disk and thrown out of the cache.  [Dev Only]
3558 = No name
3559 = No text
3560 = Database Pages Ordinarily Written/sec
3561 = Database Pages Ordinarily Written/sec is the rate that pages are written to the database file (s) from the database cache in preparation for evicting them from the cache to make room for other data.  [Dev Only]
3562 = Database Pages Anomalously Written/sec
3563 = Database Pages Anomalously Written/sec is the rate that pages are written to the database file (s) from the database cache before they would ordinarily be written.  [Dev Only]
3564 = Database Pages Opportunely Written/sec
3565 = Database Pages Opportunely Written/sec is the rate that pages are written to the database file (s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of seeks required to write all the pages is reduced.  [Dev Only]
3566 = Database Pages Repeatedly Written/sec
3567 = Database Pages Repeatedly Written/sec is the rate that pages are written to the database file (s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
3568 = Database Pages Idly Written/sec
3569 = Database Pages Idly Written/sec is the rate that pages are written to the database file (s) from the database cache because there is low disk activity.  [Dev Only]
3570 = Database Pages Coalesced Written/sec
3571 = Database Pages Coalesced Written/sec is the rate that pages are written to the database file (s) from the database cache coalesced with another page. [Dev Only]
3572 = Database Pages Coalesced Read/sec
3573 = Database Pages Coalesced Read/sec is the rate that pages are read from the database file (s) to the database cache coalesced with another page. [Dev Only]
3574 = Database Page History Records
3575 = Database Page History Records is the current number of database page access history records retained for supporting the LRU-K page replacment algorithm.  [Dev Only]
3576 = Database Page History % Hit
3577 = Database Page History % Hit is the percentage of database page access history record lookups that were successful.  [Dev Only]
3578 = No name
3579 = No text
3580 = Database Page Scans/sec
3581 = Database Page Scans/sec is the rate at which database pages are considered for eviction from the database page cache.  [Dev Only]
3582 = Database Page Scans Out-of-order/sec
3583 = Database Page Scans Out-of-order/sec is the rate at which database pages are considered for eviction from the database page cache in a priority counter to the page replacement algorithm.  [Dev Only]
3584 = No name
3585 = No text
3586 = Database Cache % Resident
3587 = Database Cache % Resident is the percentage of the database cache that are currently in the process's working set.  [Dev Only]
3588 = No name
3589 = No text
3590 = Streaming Backup Pages Read/sec
3591 = Streaming Backup Pages Read/sec is the rate of database read operations performed for the purpose of streaming backups.  [Dev Only]
3592 = Online Defrag Pages Referenced/sec
3593 = Online Defrag Pages Referenced/sec is the rate at which online defragmentation is touching database pages.  [Dev Only]
3594 = Online Defrag Pages Read/sec
3595 = Online Defrag Pages Read/sec is the rate of database read operations being performed by online defragmentation. [Dev Only]
3596 = Online Defrag Pages Preread/sec
3597 = Online Defrag Pages Preread/sec is the rate at which database pages are read in anticipation of future use by online defragmentation.  [Dev Only]
3598 = Online Defrag Pages Dirtied/sec
3599 = Online Defrag Pages Dirtied/sec is the rate at which online defragmentation is modifying clean database pages. [Dev Only]
3600 = Online Defrag Pages Re-Dirtied/sec
3601 = Online Defrag Pages Re-Dirtied/sec is the rate at which online defragmentation is modifying database pages that already contained modifications.  [Dev Only]
3602 = Online Defrag Pages Freed/sec
3603 = Pages Freed/sec is the number of pages per second that are freed from the database by the online defragmentation process [Dev Only]
3604 = Online Defrag Data Moves/sec
3605 = Data Moves/sec is the number of times per second that data is moved from one page to another by the online defragmentation process [Dev Only]
3606 = Online Defrag Page Moves/sec
3607 = Page Moves/sec is the number of times per second that data is moved from one page to a new page by the online defragmentation process [Dev Only]
3608 = Online Defrag Log Records/sec
3609 = Online Defrag Log Records/sec is the rate at which online defragmentation is generating log records.  [Dev Only]
3610 = Online Defrag Average Log Bytes
3611 = Online Defrag Average Log Bytes is the average size of the log records being generated by online defragmentation.  [Dev Only]
3612 = No name
3613 = No text
3614 = Online Maintenance (DB Scan) Pages Read/sec
3615 = Pages Read/sec is the number of pages per second that are read from the database by the scanning process [Dev Only]
3616 = Online Maintenance (DB Scan) Pages Read
3617 = Pages Read is the number of pages that have been read from the database by the scanning process [Dev Only]
3618 = Online Maintenance (DB Scan) Pages Zeroed/sec
3619 = Pages Read/sec is the number of pages per second that are zeroed in the database by the scanning process [Dev Only]
3620 = Online Maintenance (DB Scan) Pages Zeroed
3621 = Pages Read is the number of pages that have been zeroed in the database by the scanning process [Dev Only]
3622 = Database Tasks Pages Referenced/sec
3623 = Database Tasks Pages Referenced/sec is the rate at which background database tasks are touching database pages. [Dev Only]
3624 = Database Tasks Pages Read/sec
3625 = Database Tasks Pages Read/sec is the rate of database read operations being performed by background database tasks. [Dev Only]
3626 = Database Tasks Pages Preread/sec
3627 = Database Tasks Pages Preread/sec is the rate at which database pages are read in anticipation of future use by background database tasks.  [Dev Only]
3628 = Database Tasks Pages Dirtied/sec
3629 = Database Tasks Pages Dirtied/sec is the rate at which background database tasks are modifying clean database pages. [Dev Only]
3630 = Database Tasks Pages Re-Dirtied/sec
3631 = Database Tasks Pages Re-Dirtied/sec is the rate at which background databases tasks are modifying database pages that already contained modifications.  [Dev Only]
3632 = Database Tasks Log Records/sec
3633 = Database Tasks Log Records/sec is the rate at which background database tasks are generating log records.  [Dev Only]
3634 = Database Tasks Average Log Bytes
3635 = Database Tasks Average Log Bytes is the average size of the log records being generated by background database tasks.  [Dev Only]
3636 = No name
3637 = No text
3638 = I/O Database Reads/sec
3639 = I/O Database Reads/sec is the rate of database read operations completed.
3640 = I/O Database Reads Average Latency
3641 = I/O Database Reads Average Latency is the average length of time,  in milliseconds, per database read operation.
3642 = No name
3643 = No text
3644 = I/O Database Reads Average Bytes
3645 = I/O Database Reads Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
3646 = No name
3647 = No text
3648 = I/O Database Reads In Heap
3649 = I/O Database Reads In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3650 = I/O Database Reads Async Pending
3651 = I/O Database Reads Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
3652 = I/O Database Reads Abnormal Latency/sec
3653 = I/O Database Reads Abnormal Latency/sec is the rate of database read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3654 = I/O Log Reads/sec
3655 = I/O Log Reads/sec is the rate of logfile read operations completed.
3656 = I/O Log Reads Average Latency
3657 = I/O Log Reads Average Latency is the average length of time, in milliseconds, per logfile read operation.  [Dev Only]
3658 = No name
3659 = No text
3660 = I/O Log Reads Average Bytes
3661 = I/O Log Reads Average Bytes is the average number of bytes transferred per logfile read operation.  [Dev Only]
3662 = No name
3663 = No text
3664 = I/O Log Reads In Heap
3665 = I/O Log Reads In Heap is the number of logfile read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3666 = I/O Log Reads Async Pending
3667 = I/O Log Reads Async Pending is the number of logfile read operations asynchronously pending completion.  [Dev Only]
3668 = I/O Log Reads Abnormal Latency/sec
3669 = I/O Log Reads Abnormal Latency/sec is the rate of logfile read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3670 = I/O Database Writes/sec
3671 = I/O Database Writes/sec is the rate of database write operations completed.
3672 = I/O Database Writes Average Latency
3673 = I/O Database Writes Average Latency is the average length of time,  in milliseconds, per database write operation.
3674 = No name
3675 = No text
3676 = I/O Database Writes Average Bytes
3677 = I/O Database Writes Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
3678 = No name
3679 = No text
3680 = I/O Database Writes In Heap
3681 = I/O Database Writes In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3682 = I/O Database Writes Async Pending
3683 = I/O Database Writes Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
3684 = I/O Database Writes Abnormal Latency/sec
3685 = I/O Database Writes Abnormal Latency/sec is the rate of database write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3686 = I/O Log Writes/sec
3687 = I/O Log Writes/sec is the rate of logfile write operations completed.
3688 = I/O Log Writes Average Latency
3689 = I/O Log Writes Average Latency is the average length of time, in milliseconds, per logfile write operation.
3690 = No name
3691 = No text
3692 = I/O Log Writes Average Bytes
3693 = I/O Log Writes Average Bytes is the average number of bytes transferred per logfile write operation.  [Dev Only]
3694 = No name
3695 = No text
3696 = I/O Log Writes In Heap
3697 = I/O Log Writes In Heap is the number of logfile write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3698 = I/O Log Writes Async Pending
3699 = I/O Log Writes Async Pending is the number of logfile write operations asynchronously pending completion.  [Dev Only]
3700 = I/O Log Writes Abnormal Latency/sec
3701 = I/O Log Writes Abnormal Latency/sec is the rate of logfile write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3702 = Threads Blocked/sec
3703 = Threads Blocked/sec is the rate at which the execution of threads are suspended to wait for a specific event to occur or for the acquisition of a resource currently owned by another thread. [Dev Only]
3704 = Threads Blocked
3705 = Threads Blocked is the current number of threads whose execution has been suspended to wait for a specific event to occur or for the acquisition of a resource currently owned by another thread. [Dev Only]
3706 = Record Failed Compression Bytes/sec
3707 = Record Failed Compression Bytes/sec is the rate of record bytes that either failed Xpress compression or did not significantly reduce the insert/replace size (10% or less). High results are indicative of wasted cpu resources.  [Dev Only]
3708 = Database ==> TableClasses
3709 = Statistics for the ESE high performance embedded database management system by Table Class
3710 = Record Inserts/sec
3711 = Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
3712 = Record Deletes/sec
3713 = Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
3714 = Record Replaces/sec
3715 = Record Deletes/sec is the rate at which records in database tables are being updated.  [Dev Only]
3716 = Record Unnecessary Replaces/sec
3717 = Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
3718 = Record Redundant Replaces/sec
3719 = Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
3720 = Record Escrow-Updates/sec
3721 = Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
3722 = Secondary Index Inserts/sec
3723 = Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
3724 = Secondary Index Deletes/sec
3725 = Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
3726 = False Index Column Updates/sec
3727 = False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
3728 = False Tuple Index Column Updates/sec
3729 = False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
3730 = Record Intrinsic Long-Values Updated/sec
3731 = Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
3732 = Record Separated Long-Values Added/sec
3733 = Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
3734 = Record Separated Long-Values Forced/sec
3735 = Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
3736 = Record Separated Long-Values All Forced/sec
3737 = Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
3738 = Record Separated Long-Values Reference All/sec
3739 = Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
3740 = Record Separated Long-Values Dereference All/sec
3741 = Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
3742 = Separated Long-Value Seeks/sec
3743 = Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
3744 = Separated Long-Value Retrieves/sec
3745 = Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
3746 = Separated Long-Value Creates/sec
3747 = Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
3748 = Separated Long-Value Updates/sec
3749 = Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
3750 = Separated Long-Value Deletes/sec
3751 = Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
3752 = Separated Long-Value Copies/sec
3753 = Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
3754 = Separated Long-Value Chunk Seeks/sec
3755 = Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
3756 = Separated Long-Value Chunk Retrieves/sec
3757 = Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
3758 = Separated Long-Value Chunk Appends/sec
3759 = Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
3760 = Separated Long-Value Chunk Replaces/sec
3761 = Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
3762 = Separated Long-Value Chunk Deletes/sec
3763 = Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
3764 = Separated Long-Value Chunk Copies/sec
3765 = Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
3766 = B+ Tree Append Splits/sec
3767 = B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
3768 = B+ Tree Right Splits/sec
3769 = B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
3770 = B+ Tree Right Hotpoint Splits/sec
3771 = B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
3772 = B+ Tree Vertical Splits/sec
3773 = B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
3774 = B+ Tree Splits/sec
3775 = B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
3776 = B+ Tree Empty Page Merges/sec
3777 = B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
3778 = B+ Tree Right Merges/sec
3779 = Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
3780 = B+ Tree Partial Merges/sec
3781 = B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
3782 = B+ Tree Left Merges/sec
3783 = B+ Tree Left Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the previous page to the left.  [Dev Only]
3784 = B+ Tree Partial Left Merges/sec
3785 = B+ Tree Partial Left Merges/sec is the count of pages where some of its records are moved to a page on the left in a database B+ Tree per second.  [Dev Only]
3786 = B+ Tree Page Moves/sec
3787 = B+ Tree Page Moves/sec is the count of B+ Tree pages per second where all the records are moved to a new page. [Dev Only]
3788 = B+ Tree Merges/sec
3789 = B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
3790 = B+ Tree Failed Simple Page Cleanup Attempts/sec
3791 = B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
3792 = B+ Tree Seek Short Circuits/sec
3793 = B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
3794 = B+ Tree Opportune Prereads/sec
3795 = B+ Tree Opportune Prereads/sec is the number of pages per second that are preread because they are adjacent to a page read by a seek.  [Dev Only]
3796 = B+ Tree Unnecessary Sibling Latches/sec
3797 = B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
3798 = B+ Tree Move Nexts/sec
3799 = B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
3800 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec
3801 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
3802 = B+ Tree Move Prevs/sec
3803 = B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
3804 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec
3805 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
3806 = B+ Tree Seeks/sec
3807 = B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
3808 = B+ Tree Inserts/sec
3809 = B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
3810 = B+ Tree Replaces/sec
3811 = B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
3812 = B+ Tree Flag Deletes/sec
3813 = B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
3814 = B+ Tree Deletes/sec
3815 = B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
3816 = B+ Tree Appends/sec
3817 = B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
3818 = B+ Tree Creates/sec
3819 = B+ Tree Creates/sec is the number of B+ Trees and their corresponding space trees (if any) created per second.  This can also be viewed as the number of FDP creates per second.  [Dev Only]
3820 = B+ Tree Creates (Total)
3821 = B+ Tree Creates (Total) is the total number of B+ Trees and their corresponding space trees (if any) created.  This can also be viewed as the total number of FDP creates.  [Dev Only]
3822 = B+ Tree Destroys/sec
3823 = B+ Tree Destroys/sec is the number of B+ Trees and their corresponding space trees (if any) destroyed per second.  This can also be viewed as the number of FDP destroys per second.  [Dev Only]
3824 = B+ Tree Destroys (Total)
3825 = B+ Tree Destroys (Total) is the total number of B+ Trees and their corresponding space trees (if any) destroyed.  This can also be viewed as the total number of FDP destroys.  [Dev Only]
3826 = Database Cache Size (MB)
3827 = Database Cache Size (MB) is the amount of system memory (in MegaBytes) used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance.  If there is a lot of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit.  Increasing this limit may increase performance.
3828 = Database Cache Misses/sec
3829 = Database Cache Misses per second is the rate at which database file page requests were fulfilled by the database cache by causing a file operation.  If this rate is high then the database cache size may be too small.
3830 = Database Cache % Hit
3831 = Database Cache % Hit is the percentage of database file page requests that were fulfilled by the database cache without causing a file operation.  If this percentage is too low, the database cache size may be too small.
3832 = No name
3833 = No text
3834 = Database Cache Requests/sec
3835 = Database Cache Requests/sec is the rate that pages are requested from the database cache.
3836 = Database Pages Read Async/sec
3837 = Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
3838 = Database Pages Read Sync/sec
3839 = Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
3840 = Database Pages Written/sec
3841 = Database Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
3842 = Database Clean Pages Written/sec
3843 = Database Clean Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
3844 = Database Pages Transferred/sec
3845 = Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
3846 = Database Pages Preread/sec
3847 = Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
3848 = Database Cached Pages Preread/sec
3849 = Database Cached Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that are already cached.  This is non-ideal behavior that represents a waste of processing time.  [Dev Only]
3850 = Database Pages Preread Untouched/sec
3851 = Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time .  [Dev Only]
3852 = Database Pages Versioned/sec
3853 = Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
3854 = Database Pages Version Copied/sec
3855 = Database Pages Version Copied/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
3856 = Database Pages Ordinarily Written/sec
3857 = Database Pages Ordinarily Written/sec is the rate that pages are written to the database file (s) from the database cache in preparation for evicting them from the cache to make room for other data.  [Dev Only]
3858 = Database Pages Anomalously Written/sec
3859 = Database Pages Anomalously Written/sec is the rate that pages are written to the database file (s) from the database cache before they would ordinarily be written.  [Dev Only]
3860 = Database Pages Opportunely Written/sec
3861 = Database Pages Opportunely Written/sec is the rate that pages are written to the database file (s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of seeks required to write all the pages is reduced.  [Dev Only]
3862 = Database Pages Repeatedly Written/sec
3863 = Database Pages Repeatedly Written/sec is the rate that pages are written to the database file (s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
3864 = Database Pages Idly Written/sec
3865 = Database Pages Idly Written/sec is the rate that pages are written to the database file (s) from the database cache because there is low disk activity.  [Dev Only]
3866 = Database Pages Coalesced Written/sec
3867 = Database Pages Coalesced Written/sec is the rate that pages are written to the database file (s) from the database cache coalesced with another page. [Dev Only]
3868 = Database Pages Coalesced Read/sec
3869 = Database Pages Coalesced Read/sec is the rate that pages are read from the database file (s) to the database cache coalesced with another page. [Dev Only]
3870 = Database ==> Instances
3871 = Instances in this process
3872 = Pages Converted/sec
3873 = Pages Converted/sec is the count of times per second a database page is converted from an older database format
3874 = Pages Converted
3875 = Pages Converted is the count of database pages that have been converted from an older format
3876 = Records Converted/sec
3877 = Records Converted/sec is the count of times per second a database record is converted from an older database format
3878 = Records Converted
3879 = Records Converted is the count of database records that have been converted from an older format
3880 = Defragmentation Tasks
3881 = Defragmentation Tasks is the count of background database defragmentation tasks that are currently executing.
3882 = Defragmentation Tasks Pending
3883 = Defragmentation Tasks Pending is the count of background database defragmentation tasks that are currently pending.
3884 = Defragmentation Tasks Discarded
3885 = Defragmentation Tasks Discarded is the count of background database defragmentation tasks that could not be registered. [Dev Only]
3886 = Defragmentation Tasks Scheduled/sec
3887 = Defragmentation Tasks Scheduled/sec is the number of background database defragmentation tasks scheduled for execution per second. [Dev Only]
3888 = Defragmentation Tasks Completed/sec
3889 = Defragmentation Tasks Completed/sec is the number of background database defragmentation tasks completing execution per second. [Dev Only]
3890 = FCB Asynchronous Scan/sec
3891 = FCB Asynchronous Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup. These records are scanned to age out older schema definitions. [Dev Only]
3892 = FCB Asynchronous Purge/sec
3893 = FCB Asynchronous Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup. These records are purged to age out older schema definitions. [Dev Only]
3894 = FCB Asynchronous Threshold-Scan/sec
3895 = FCB Asynchronous Threshold-Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively scanned to age out older schema definitions.  [Dev Only]
3896 = FCB Asynchronous Threshold-Purge/sec
3897 = FCB Asynchronous Threshold-Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively purged to age out older schema definitions.  [Dev Only]
3898 = FCB Asynchronous Purge Conflicts/sec
3899 = FCB Asynchronous Purge Conflicts/sec is the number of failed purge attempts on cached schema records (FCBs) during asynchronous schema record cleanup.  The purge operation failed because exclusive ownership of the schema record could not be obtained.  [Dev Only]
3900 = FCB Synchronous Purge/sec
3901 = FCB Synchronous Purge/sec is the number of cached schema records (FCBs) being synchronously purged each second.  [Dev Only]
3902 = FCB Synchronous Purge Stalls/sec
3903 = FCB Synchronous Purge Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to synchronously purge them.  [Dev Only]
3904 = FCB Allocations Wait For Version Cleanup/sec
3905 = FCB Allocations Wait For Version Cleanup/sec is the number of FCB allocations that must first wait for version cleanup in an attempt to free used FCBs for re-use. [Dev Only]
3906 = FCB Purge On Cursor Close/sec
3907 = FCB Purge On Cursor Close/sec is the number of cached schema records (FCBs) being synchronously purged when the cursor is closed (instead of leaving the schema record cached) each second.  [Dev Only]
3908 = FCB Cache % Hit
3909 = FCB Cache % Hit is the percentage of schema records (FCBs) opened directly from the schema record cache.  No file operations were required.  [Dev Only]
3910 = No name
3911 = No text
3912 = FCB Cache Stalls/sec
3913 = FCB Cache Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to update their reference count.  [Dev Only]
3914 = FCB Cache Maximum
3915 = FCB Cache Maximum is the absolute maximum number of the schema records (FCBs) that can exist in the cache.  [Dev Only]
3916 = FCB Cache Preferred
3917 = FCB Cache Preferred is the preferred maximum number of the schema records (FCBs) that should exist in the cache.  [Dev Only]
3918 = FCB Cache Allocated
3919 = FCB Cache Allocated is the number of cached schema records (FCBs) currently allocated and in use.  [Dev Only]
3920 = FCB Cache Available
3921 = FCB Cache Available is the number of cached schema records (FCBs) currently allocated but not in use.  These records will be used and/or purged as required.  [Dev Only]
3922 = Sessions In Use
3923 = Sessions In Use is the number of database sessions currently open for use by client threads.
3924 = Sessions % Used
3925 = Sessions % Used is the percentage of database sessions currently open for use by client threads.
3926 = No name
3927 = No text
3928 = Table Open Cache % Hit
3929 = Table Open Cache % Hit is the percentage of database tables opened using cached schema information.  If this percentage is too low, the table cache size may be too small.
3930 = No name
3931 = No text
3932 = Table Open Cache Hits/sec
3933 = Table Open Cache Hits/sec is the number of database tables opened using cached schema information per second.  If this rate is too low, the table cache size may be too small.
3934 = Table Open Cache Misses/sec
3935 = Table Open Cache Misses/sec is the number of database tables opened without using cached schema information per second.  If this rate is too high, the table cache size may be too small.
3936 = Table Opens/sec
3937 = Table Opens/sec is the number of database tables opened per second.
3938 = Log Bytes Write/sec
3939 = Log Bytes Write per second is the rate bytes are written to the log.
3940 = Log Bytes Generated/sec
3941 = Log Bytes Generated per second is the rate at which data is added to the log.  This is different from Log Bytes Write per second in that each byte is generated only once whereas each byte may be written many times.
3942 = Log Buffer Size
3943 = Log Buffer Size is the amount of memory, in bytes, allocated for the database log buffers.  [Dev Only]
3944 = Log Buffer Bytes Used
3945 = Log Buffer Bytes Used is the amount of bytes in the log buffers that have not yet been flushed to the logs.  [Dev Only]
3946 = Log Buffer Bytes Free
3947 = Log Buffer Bytes Free is the amount of free space available in the log buffers.  [Dev Only]
3948 = Log Threads Waiting
3949 = Log Threads Waiting is the number of threads waiting for their data to be written to the log in order to complete an update of the database.  If this number is too high, the log may be a bottleneck.
3950 = Log File Size
3951 = Log File Size is the size, in bytes, of the database log files.  [Dev Only]
3952 = Log Checkpoint Depth
3953 = Log Checkpoint Depth represents the amount of work, in bytes, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
3954 = Log Generation Checkpoint Depth
3955 = Log Generation Checkpoint Depth represents the amount of work, in count of log files, that will need to be redone or undone to the database file(s) if the process crashes.
3956 = Log Generation Checkpoint Depth Target
3957 = Log Generation Checkpoint Depth Target represents the ideal target for the amount of work, in count of log files, that may be redone or undone to the database file(s) if the process crashes.
3958 = Log Checkpoint Depth as a % of Target
3959 = Log Checkpoint Depth as a % of Target is an expression of the current checkpoint depth in terms of a percentage of the checkpoint depth target.  For example, if the current checkpoint depth is 5 generations and the checkpoint depth target is 4 generations then this will be reported as 125% of target.
3960 = No name
3961 = No text
3962 = Log Generation Checkpoint Depth Max
3963 = Log Generation Checkpoint Depth Max represents the maximum allowable amount of work, in count of log files, that may be redone or undone to the database file(s) if the process crashes.
3964 = Log Generation Loss Resiliency Depth
3965 = Log Generation Loss Resiliency Depth represents the amount of work, in count of log files, that may be lost while still allowing the database file(s) to recover (with data loss) if the process crashes.
3966 = Log Files Generated
3967 = Log Files Generated represents the total number of log files generated by an instance since that instance was last initialized.
3968 = Log Files Generated Prematurely
3969 = Log Files Generated Prematurely represents the total number of log files generated by an instance since that instance was last initialized and that have not been entirely filled with useful data.  Under certain conditions the database engine will choose to switch to a new log file before it has been completely filled with useful data.
3970 = Log File Current Generation
3971 = Log File Current Generation gives the generation number of the current log file of an instance.
3972 = User Read Only Transaction Commits to Level 0/sec
3973 = User Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3974 = User Read/Write Transaction Commits to Level 0/sec
3975 = User Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3976 = User Transaction Commits to Level 0/sec
3977 = User Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3978 = User Read Only Transaction Rollbacks to Level 0/sec
3979 = User Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3980 = User Read/Write Transaction Rollbacks to Level 0/sec
3981 = User Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3982 = User Transaction Rollbacks to Level 0/sec
3983 = User Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3984 = System Read Only Transaction Commits to Level 0/sec
3985 = System Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3986 = System Read/Write Transaction Commits to Level 0/sec
3987 = System Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that modify data stored in the database engine.  [Dev Only]
3988 = System Transaction Commits to Level 0/sec
3989 = System Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that access data stored in the database engine.  [Dev Only]
3990 = System Read Only Transaction Rollbacks to Level 0/sec
3991 = System Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3992 = System Read/Write Transaction Rollbacks to Level 0/sec
3993 = System Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that modify data stored in the database engine.  [Dev Only]
3994 = System Transaction Rollbacks to Level 0/sec
3995 = System Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that access data stored in the database engine.  [Dev Only]
3996 = Database Page Allocation File Extension Async Consumed/sec
3997 = Database Page Allocation File Extension Async Consumed/sec is the rate of page allocations from a database file that must be serviced by extending the database file, but which do not stall when doing doing so.  [Dev Only]
3998 = Database Page Allocation File Extension Stalls/sec
3999 = Database Page Allocation File Extension Stalls/sec is the rate of page allocations from a database file that must be serviced by extending the database file and which stall when doing so.  [Dev Only]
4000 = Log Records/sec
4001 = Log Records/sec is the count of records written to the database log buffers per second.  [Dev Only]
4002 = Log Buffer Capacity Flushes/sec
4003 = Log Buffer Capacity Flushes/sec is the count of times the database log buffers must be flushed per second because they are full.  [Dev Only]
4004 = Log Buffer Commit Flushes/sec
4005 = Log Buffer Commit Flushes/sec is the count of times the database log buffers must be flushed per second because a transaction is fully committing its changes.  [Dev Only]
4006 = Log Buffer Flushes/sec
4007 = Log Buffer Flushes/sec is the count of times the database log buffers must be flushed per second.  [Dev Only]
4008 = Log Writes/sec
4009 = Log Writes/sec is the number of times the log buffers are written to the log file(s) per second.  If this number approaches the maximum write rate for the media holding the log file(s), the log may be a bottleneck.
4010 = Log Record Stalls/sec
4011 = Log Record Stalls/sec is the number of log records that cannot be added to the log buffers per second because they are full.  If this counter is non-zero most of the time, the log buffer size may be a bottleneck.
4012 = Version buckets allocated
4013 = Total number of version buckets allocated
4014 = Version buckets allocated for deletes
4015 = Total number of version buckets allocated for FlagDelete RCEs  [Dev Only]
4016 = VER Bucket Allocations Wait For Version Cleanup/sec
4017 = VER Bucket Allocations Wait For Version Cleanup/sec is the number of version bucket allocations that must first wait for version cleanup in an attempt to free used version buckets  for re-use. [Dev Only]
4018 = Version store average RCE bookmark length
4019 = Average length of bookmark in RCE  [Dev Only]
4020 = Version store unnecessary calls/sec
4021 = Number of times per second we look in the version store for a node whose version bit is set but which has no versions  [Dev Only]
4022 = Version store cleanup tasks asynchronously dispatched/sec
4023 = Number of times per second a version store clean task is dispatched asynchronously to be performed  [Dev Only]
4024 = Version store cleanup tasks synchronously dispatched/sec
4025 = Number of times per second a version store clean task is performed synchronously  [Dev Only]
4026 = Version store cleanup tasks discarded/sec
4027 = Number of times per second a version store clean task was discarded due to load concerns  [Dev Only]
4028 = Version store cleanup tasks failures/sec
4029 = Number of times per second a dispatched version store cleanup task fails  [Dev Only]
4030 = Record Inserts/sec
4031 = Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
4032 = Record Deletes/sec
4033 = Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
4034 = Record Replaces/sec
4035 = Record Deletes/sec is the rate at which records in database tables are being updated.  [Dev Only]
4036 = Record Unnecessary Replaces/sec
4037 = Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
4038 = Record Redundant Replaces/sec
4039 = Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
4040 = Record Escrow-Updates/sec
4041 = Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
4042 = Secondary Index Inserts/sec
4043 = Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
4044 = Secondary Index Deletes/sec
4045 = Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
4046 = False Index Column Updates/sec
4047 = False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
4048 = False Tuple Index Column Updates/sec
4049 = False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
4050 = Record Intrinsic Long-Values Updated/sec
4051 = Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
4052 = Record Separated Long-Values Added/sec
4053 = Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
4054 = Record Separated Long-Values Forced/sec
4055 = Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
4056 = Record Separated Long-Values All Forced/sec
4057 = Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
4058 = Record Separated Long-Values Reference All/sec
4059 = Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
4060 = Record Separated Long-Values Dereference All/sec
4061 = Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
4062 = Separated Long-Value Seeks/sec
4063 = Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
4064 = Separated Long-Value Retrieves/sec
4065 = Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
4066 = Separated Long-Value Creates/sec
4067 = Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
4068 = Separated Long-Value Updates/sec
4069 = Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
4070 = Separated Long-Value Deletes/sec
4071 = Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
4072 = Separated Long-Value Copies/sec
4073 = Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
4074 = Separated Long-Value Chunk Seeks/sec
4075 = Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
4076 = Separated Long-Value Chunk Retrieves/sec
4077 = Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
4078 = Separated Long-Value Chunk Appends/sec
4079 = Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
4080 = Separated Long-Value Chunk Replaces/sec
4081 = Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
4082 = Separated Long-Value Chunk Deletes/sec
4083 = Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
4084 = Separated Long-Value Chunk Copies/sec
4085 = Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
4086 = B+ Tree Append Splits/sec
4087 = B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
4088 = B+ Tree Right Splits/sec
4089 = B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
4090 = B+ Tree Right Hotpoint Splits/sec
4091 = B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
4092 = B+ Tree Vertical Splits/sec
4093 = B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
4094 = B+ Tree Splits/sec
4095 = B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
4096 = B+ Tree Empty Page Merges/sec
4097 = B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
4098 = B+ Tree Right Merges/sec
4099 = Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
4100 = B+ Tree Partial Merges/sec
4101 = B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
4102 = B+ Tree Left Merges/sec
4103 = B+ Tree Left Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the previous page to the left.  [Dev Only]
4104 = B+ Tree Partial Left Merges/sec
4105 = B+ Tree Partial Left Merges/sec is the count of pages where some of its records are moved to a page on the left in a database B+ Tree per second.  [Dev Only]
4106 = B+ Tree Page Moves/sec
4107 = B+ Tree Page Moves/sec is the count of B+ Tree pages per second where all the records are moved to a new page. [Dev Only]
4108 = B+ Tree Merges/sec
4109 = B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
4110 = B+ Tree Failed Simple Page Cleanup Attempts/sec
4111 = B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
4112 = B+ Tree Seek Short Circuits/sec
4113 = B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
4114 = B+ Tree Opportune Prereads/sec
4115 = B+ Tree Opportune Prereads/sec is the number of pages per second that are preread because they are adjacent to a page read by a seek.  [Dev Only]
4116 = B+ Tree Unnecessary Sibling Latches/sec
4117 = B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
4118 = B+ Tree Move Nexts/sec
4119 = B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
4120 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec
4121 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
4122 = B+ Tree Move Prevs/sec
4123 = B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
4124 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec
4125 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
4126 = B+ Tree Seeks/sec
4127 = B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
4128 = B+ Tree Inserts/sec
4129 = B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
4130 = B+ Tree Replaces/sec
4131 = B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
4132 = B+ Tree Flag Deletes/sec
4133 = B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
4134 = B+ Tree Deletes/sec
4135 = B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
4136 = B+ Tree Appends/sec
4137 = B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
4138 = B+ Tree Creates/sec
4139 = B+ Tree Creates/sec is the number of B+ Trees and their corresponding space trees (if any) created per second.  This can also be viewed as the number of FDP creates per second.  [Dev Only]
4140 = B+ Tree Creates (Total)
4141 = B+ Tree Creates (Total) is the total number of B+ Trees and their corresponding space trees (if any) created.  This can also be viewed as the total number of FDP creates.  [Dev Only]
4142 = B+ Tree Destroys/sec
4143 = B+ Tree Destroys/sec is the number of B+ Trees and their corresponding space trees (if any) destroyed per second.  This can also be viewed as the number of FDP destroys per second.  [Dev Only]
4144 = B+ Tree Destroys (Total)
4145 = B+ Tree Destroys (Total) is the total number of B+ Trees and their corresponding space trees (if any) destroyed.  This can also be viewed as the total number of FDP destroys.  [Dev Only]
4146 = Database Cache Size (MB)
4147 = Database Cache Size (MB) is the amount of system memory (in MegaBytes) used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance.  If there is a lot of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit.  Increasing this limit may increase performance.
4148 = Database Cache Misses/sec
4149 = Database Cache Misses per second is the rate at which database file page requests were fulfilled by the database cache by causing a file operation.  If this rate is high then the database cache size may be too small.
4150 = Database Cache % Hit
4151 = Database Cache % Hit is the percentage of database file page requests that were fulfilled by the database cache without causing a file operation.  If this percentage is too low, the database cache size may be too small.
4152 = No name
4153 = No text
4154 = Database Cache Requests/sec
4155 = Database Cache Requests/sec is the rate that pages are requested from the database cache.
4156 = Database Pages Read Async/sec
4157 = Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
4158 = Database Pages Read Sync/sec
4159 = Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
4160 = Database Pages Written/sec
4161 = Database Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
4162 = Database Clean Pages Written/sec
4163 = Database Clean Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
4164 = Database Pages Transferred/sec
4165 = Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
4166 = Database Pages Preread/sec
4167 = Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
4168 = Database Cached Pages Preread/sec
4169 = Database Cached Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that are already cached.  This is non-ideal behavior that represents a waste of processing time.  [Dev Only]
4170 = Database Pages Preread Untouched/sec
4171 = Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time.  [Dev Only]
4172 = Database Pages Versioned/sec
4173 = Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
4174 = Database Pages Version Copied/sec
4175 = Database Pages Version Copied/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
4176 = Database Pages Ordinarily Written/sec
4177 = Database Pages Ordinarily Written/sec is the rate that pages are written to the database file (s) from the database cache in preparation for evicting them from the cache to make room for other data.  [Dev Only]
4178 = Database Pages Anomalously Written/sec
4179 = Database Pages Anomalously Written/sec is the rate that pages are written to the database file (s) from the database cache before they would ordinarily be written.  [Dev Only]
4180 = Database Pages Opportunely Written/sec
4181 = Database Pages Opportunely Written/sec is the rate that pages are written to the database file (s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of seeks required to write all the pages is reduced.  [Dev Only]
4182 = Database Pages Repeatedly Written/sec
4183 = Database Pages Repeatedly Written/sec is the rate that pages are written to the database file (s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
4184 = Database Pages Idly Written/sec
4185 = Database Pages Idly Written/sec is the rate that pages are written to the database file (s) from the database cache because there is low disk activity.  [Dev Only]
4186 = Database Pages Coalesced Written/sec
4187 = Database Pages Coalesced Written/sec is the rate that pages are written to the database file (s) from the database cache coalesced with another page. [Dev Only]
4188 = Database Pages Coalesced Read/sec
4189 = Database Pages Coalesced Read/sec is the rate that pages are read from the database file (s) to the database cache coalesced with another page. [Dev Only]
4190 = Streaming Backup Pages Read/sec
4191 = Streaming Backup Pages Read/sec is the rate of database read operations performed for the purpose of streaming backups.
4192 = Online Defrag Pages Referenced/sec
4193 = Online Defrag Pages Referenced/sec is the rate at which online defragmentation is touching database pages.  [Dev Only]
4194 = Online Defrag Pages Read/sec
4195 = Online Defrag Pages Read/sec is the rate of database read operations being performed by online defragmentation. [Dev Only]
4196 = Online Defrag Pages Preread/sec
4197 = Online Defrag Pages Preread/sec is the rate at which database pages are read in anticipation of future use by online defragmentation.  [Dev Only]
4198 = Online Defrag Pages Dirtied/sec
4199 = Online Defrag Pages Dirtied/sec is the rate at which online defragmentation is modifying clean database pages. [Dev Only]
4200 = Online Defrag Pages Re-Dirtied/sec
4201 = Online Defrag Pages Re-Dirtied/sec is the rate at which online defragmentation is modifying database pages that already contained modifications.  [Dev Only]
4202 = Online Defrag Pages Freed/sec
4203 = Pages Freed/sec is the number of pages per second that are freed from the database by the online defragmentation process [Dev Only]
4204 = Online Defrag Data Moves/sec
4205 = Data Moves/sec is the number of times per second that data is moved from one page to another by the online defragmentation process [Dev Only]
4206 = Online Defrag Page Moves/sec
4207 = Page Moves/sec is the number of times per second that data is moved from one page to a new page by the online defragmentation process [Dev Only]
4208 = Online Defrag Log Records/sec
4209 = Online Defrag Log Records/sec is the rate at which online defragmentation is generating log records.  [Dev Only]
4210 = Online Defrag Average Log Bytes
4211 = Online Defrag Average Log Bytes is the average size of the log records being generated by online defragmentation.  [Dev Only]
4212 = No name
4213 = No text
4214 = Online Maintenance (DB Scan) Pages Read/sec
4215 = Pages Read/sec is the number of pages per second that are read from the database by the scanning process [Dev Only]
4216 = Online Maintenance (DB Scan) Pages Read
4217 = Pages Read is the number of pages that have been read from the database by the scanning process [Dev Only]
4218 = Online Maintenance (DB Scan) Pages Zeroed/sec
4219 = Pages Read/sec is the number of pages per second that are zeroed in the database by the scanning process [Dev Only]
4220 = Online Maintenance (DB Scan) Pages Zeroed
4221 = Pages Read is the number of pages that have been zeroed in the database by the scanning process [Dev Only]
4222 = Database Tasks Pages Referenced/sec
4223 = Database Tasks Pages Referenced/sec is the rate at which background database tasks are touching database pages. [Dev Only]
4224 = Database Tasks Pages Read/sec
4225 = Database Tasks Pages Read/sec is the rate of database read operations being performed by background database tasks. [Dev Only]
4226 = Database Tasks Pages Preread/sec
4227 = Database Tasks Pages Preread/sec is the rate at which database pages are read in anticipation of future use by background database tasks.  [Dev Only]
4228 = Database Tasks Pages Dirtied/sec
4229 = Database Tasks Pages Dirtied/sec is the rate at which background database tasks are modifying clean database pages. [Dev Only]
4230 = Database Tasks Pages Re-Dirtied/sec
4231 = Database Tasks Pages Re-Dirtied/sec is the rate at which background databases tasks are modifying database pages that already contained modifications.  [Dev Only]
4232 = Database Tasks Log Records/sec
4233 = Database Tasks Log Records/sec is the rate at which background database tasks are generating log records.  [Dev Only]
4234 = Database Tasks Average Log Bytes
4235 = Database Tasks Average Log Bytes is the average size of the log records being generated by background database tasks.  [Dev Only]
4236 = No name
4237 = No text
4238 = I/O Database Reads/sec
4239 = I/O Database Reads/sec is the rate of database read operations completed.
4240 = I/O Database Reads Average Latency
4241 = I/O Database Reads Average Latency is the average length of time,  in milliseconds, per database read operation.
4242 = No name
4243 = No text
4244 = I/O Database Reads Average Bytes
4245 = I/O Database Reads Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
4246 = No name
4247 = No text
4248 = I/O Database Reads In Heap
4249 = I/O Database Reads In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4250 = I/O Database Reads Async Pending
4251 = I/O Database Reads Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
4252 = I/O Database Reads Abnormal Latency/sec
4253 = I/O Database Reads Abnormal Latency/sec is the rate of database read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4254 = I/O Log Reads/sec
4255 = I/O Log Reads/sec is the rate of logfile read operations completed.
4256 = I/O Log Reads Average Latency
4257 = I/O Log Reads Average Latency is the average length of time, in milliseconds, per logfile read operation.  [Dev Only]
4258 = No name
4259 = No text
4260 = I/O Log Reads Average Bytes
4261 = I/O Log Reads Average Bytes is the average number of bytes transferred per logfile read operation.  [Dev Only]
4262 = No name
4263 = No text
4264 = I/O Log Reads In Heap
4265 = I/O Log Reads In Heap is the number of logfile read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4266 = I/O Log Reads Async Pending
4267 = I/O Log Reads Async Pending is the number of logfile read operations asynchronously pending completion.  [Dev Only]
4268 = I/O Log Reads Abnormal Latency/sec
4269 = I/O Log Reads Abnormal Latency/sec is the rate of logfile read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4270 = I/O Database Writes/sec
4271 = I/O Database Writes/sec is the rate of database write operations completed.
4272 = I/O Database Writes Average Latency
4273 = I/O Database Writes Average Latency is the average length of time,  in milliseconds, per database write operation.
4274 = No name
4275 = No text
4276 = I/O Database Writes Average Bytes
4277 = I/O Database Writes Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
4278 = No name
4279 = No text
4280 = I/O Database Writes In Heap
4281 = I/O Database Writes In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4282 = I/O Database Writes Async Pending
4283 = I/O Database Writes Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
4284 = I/O Database Writes Abnormal Latency/sec
4285 = I/O Database Writes Abnormal Latency/sec is the rate of database write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4286 = I/O Log Writes/sec
4287 = I/O Log Writes/sec is the rate of logfile write operations completed.
4288 = I/O Log Writes Average Latency
4289 = I/O Log Writes Average Latency is the average length of time, in milliseconds, per logfile write operation.
4290 = No name
4291 = No text
4292 = I/O Log Writes Average Bytes
4293 = I/O Log Writes Average Bytes is the average number of bytes transferred per logfile write operation.  [Dev Only]
4294 = No name
4295 = No text
4296 = I/O Log Writes In Heap
4297 = I/O Log Writes In Heap is the number of logfile write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4298 = I/O Log Writes Async Pending
4299 = I/O Log Writes Async Pending is the number of logfile write operations asynchronously pending completion.  [Dev Only]
4300 = I/O Log Writes Abnormal Latency/sec
4301 = I/O Log Writes Abnormal Latency/sec is the rate of logfile write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4302 = Record Failed Compression Bytes/sec
4303 = Record Failed Compression Bytes/sec is the rate of record bytes that either failed Xpress compression or did not significantly reduce the insert/replace size (10% or less). High results are indicative of wasted cpu resources.  [Dev Only]
4304 = Distributed Transaction Coordinator
4305 = Microsoft Distributed Transaction Coordinator performance counters
4306 = Active Transactions
4307 = Number of currently active transactions
4308 = Committed Transactions
4309 = Number of committed transactions
4310 = Aborted Transactions
4311 = Number of aborted transactions
4312 = In Doubt Transactions
4313 = Number of in doubt transactions
4314 = Active Transactions Maximum
4315 = Maximum number of transactions ever concurrently active
4316 = Force Committed Transactions
4317 = Number of transactions committed by the system administrator
4318 = Force Aborted Transactions
4319 = Number of transactions aborted by the system administrator
4320 = Response Time -- Minimum
4321 = Minimum time delta between transaction begin and commit
4322 = Response Time -- Average
4323 = Average time delta between transaction begin and commit
4324 = Response Time -- Maximum
4325 = Maximum time delta between transaction begin and commit
4326 = Transactions/sec
4327 = Transactions performed per second
4328 = Committed Transactions/sec
4329 = Transactions committed per second
4330 = Aborted Transactions/sec
4331 = Transactions aborted per second
4332 = Terminal Services Session
4333 = Terminal Services per-session resource monitoring.
4334 = Input WdBytes
4335 = Number of bytes input on this session after all protocol overhead has been removed.
4336 = Input WdFrames
4337 = The number of frames input after any additional protocol added frames have been removed.
4338 = Input WaitForOutBuf
4339 = The number of times that a wait for an available send buffer was done by the protocols on the client side of the connection.
4340 = Input Frames
4341 = Number of frames (packets) input on this Session.
4342 = Input Bytes
4343 = Number of bytes input on this session that includes all protocol overhead.
4344 = Input Compressed Bytes
4345 = Number of bytes input after compression. This number compared with the Total Bytes input is the compression ratio.
4346 = Input Compress Flushes
4347 = Number of input compression dictionary flushes. When the data can not be compressed, the compression dictionary is flushed so that newer data has a better chance of being compressed. Some causes of data not compressing includes transferring compressed files over Client Drive Mapping.
4348 = Input Errors
4349 = Number of input errors of all types. Some example input errors are lost ACK's, badly formed packets, etc.
4350 = Input Timeouts
4351 = The total number of timeouts on the communication line as seen from the client side of the connection. These are typically the result of a noisy line. On some high latency networks, this could be the result of the protocol timeout being too short. Increasing the protocol timeout on these types of lines will improve performance by reducing needless re-transmissions.
4352 = Input Async Frame Error
4353 = Number of input async framing errors. These can be caused by a noisy transmission line. Using a smaller packet size may help in some cases.
4354 = Input Async Overrun
4355 = Number of input async overrun errors. These can be caused by the baud rate being faster than the computer can handle, or a non-16550 serial line is used. Overruns can also occur if too many high speed serial lines are active at one time for the processor's power.
4356 = Input Async Overflow
4357 = Number of input async overflow errors. These can be caused by a lack of buffer space available on the host.
4358 = Input Async Parity Error
4359 = Number of input async parity errors. These can be caused by a noisy transmission line
4360 = Input Transport Errors
4361 = Number of Terminal Services transport-level errors on input.
4362 = Output WdBytes
4363 = Number of bytes output on this session after all protocol overhead has been removed.
4364 = Output WdFrames
4365 = The number of frames output before any additional protocol frames have been added.
4366 = Output WaitForOutBuf
4367 = This is the number of times that a wait for an available send buffer was done by the protocol on the server side of the connection.
4368 = Output Frames
4369 = Number of frames (packets) output on this session.
4370 = Output Bytes
4371 = Number of bytes output on this Session that includes all protocol overhead.
4372 = Output Compressed Bytes
4373 = Number of bytes output after compression. This number compared with the Total Bytes output is the compression ratio.
4374 = Output Compress Flushes
4375 = Number of output compression dictionary flushes. When the data can not be compressed, the compression dictionary is flushed so that newer data has a better chance of being compressed. Some causes of data not compressing includes transfering compressed files over Client Drive Mapping.
4376 = Output Errors
4377 = Number of output errors of all types. Some example output errors are lost ACK's, badly formed packets, etc.
4378 = Output Timeouts
4379 = The total number of timeouts on the communication line from the host side of the connection. These are typically the result of a noisy line. On some high latency networks, this could be the result of the protocol timeout being too short. Increasing the protocol timeout on these types of lines will improve performance by reducing needless re-transmissions.
4380 = Output Async Frame Error
4381 = Number of output async framing errors. This could be caused by a hardware or line problem.
4382 = Output Async Overrun
4383 = Number of output async overrun errors.
4384 = Output Async Overflow
4385 = Number of output async overflow errors.
4386 = Output Async Parity Error
4387 = Number of output async parity errors. These can be caused by a hardware or line problem.
4388 = Output Transport Errors
4389 = Number of Terminal Services transport-level errors on output.
4390 = Total WdBytes
4391 = Total number of bytes on this Session after all protocol overhead has been removed.
4392 = Total WdFrames
4393 = The total number of frames input and output before any additional protocol frames have been added.
4394 = Total WaitForOutBuf
4395 = The number of times that a wait for an available send buffer was done by the protocols on both the server and client sides of the connection.
4396 = Total Frames
4397 = Total number of frames (packets) on this Session.
4398 = Total Bytes
4399 = Total number of bytes on this Session that includes all protocol overhead.
4400 = Total Compressed Bytes
4401 = Total number of bytes after compression. This number compared with the total bytes is the compression ratio.
4402 = Total Compress Flushes
4403 = Total number of compression dictionary flushes. When the data can not be compressed, the compression dictionary is flushed so that newer data has a better chance of being compressed. Some causes of data not compressing includes transfering compressed files over Client Drive Mapping.
4404 = Total Errors
4405 = Total number of errors of all types. Some example errors are lost ACK's, badly formed packets, etc.
4406 = Total Timeouts
4407 = The total number of timeouts on the communication line from both the host and client sides of the connection. These are typically the result of a noisy line. On some high latency networks, this could be the result of the protocol timeout being too short. Increasing the protocol timeout on these types of lines will improve performance by reducing needless re-transmissions.
4408 = Total Async Frame Error
4409 = Total number of async framing errors. These can be caused by a noisy transmission line. Using a smaller packet size may help in some cases.
4410 = Total Async Overrun
4411 = Total number of async overrun errors. These can be caused by the baud rate being faster than the computer can handle, or a non-16550 serial line is used. Overruns can also occur if too many high speed serial lines are active at one time for the processor's power.
4412 = Total Async Overflow
4413 = Total number of async overflow errors. These can be caused by a lack of buffer space available on the host.
4414 = Total Async Parity Error
4415 = Total number of async parity errors. These can be caused by a noisy transmission line.
4416 = Total Transport Errors
4417 = Total number of Terminal Services transport-level errors.
4418 = Total Protocol Cache Reads
4419 = Total references to all protocol caches.
4420 = Total Protocol Cache Hits
4421 = Total hits in all protocol caches. The protocol caches Windows objects that are likely to be re-used to avoid having to re-send them on the transmission line. Example objects are Windows icons and brushes. Hits in the cache represent objects that did not need to be re-sent.
4422 = Total Protocol Cache Hit Ratio
4423 = Overall hit ratio for all protocol caches.
4424 = Protocol Bitmap Cache Reads
4425 = Number of references to the protocol bitmap cache.
4426 = Protocol Bitmap Cache Hits
4427 = Number of hits in the protocol bitmap cache.
4428 = Protocol Bitmap Cache Hit Ratio
4429 = Hit ratio in the protocol bitmap cache. A higher hit ratio means better performance since data transmissions are reduced. Low hit ratios are due to the screen updating with new information that is either not re-used, or is flushed out of the client cache.
4430 = Protocol Glyph Cache Reads
4431 = Number of references to the protocol glyph cache.
4432 = Protocol Glyph Cache Hits
4433 = Number of hits in the protocol glyph cache.
4434 = Protocol Glyph Cache Hit Ratio
4435 = Hit ratio in the protocol glyph cache. A higher hit ratio means better performance since data transmissions are reduced. Low hit ratios are due to the screen updating with new information that is either not re-used, or is flushed out of the client cache.
4436 = Protocol Brush Cache Reads
4437 = Number of references to the protocol brush cache.
4438 = Protocol Brush Cache Hits
4439 = Number of hits in the protocol brush cache.
4440 = Protocol Brush Cache Hit Ratio
4441 = Hit ratio in the protocol brush cache. A higher hit ratio means better performance since data transmissions are reduced. Low hit ratios are due to the screen updating with new information that is either not re-used, or is flushed out of the client cache.
4442 = Protocol Save Screen Bitmap Cache Reads
4443 = Number of references to the protocol save screen bitmap cache.
4444 = Protocol Save Screen Bitmap Cache Hits
4445 = Number of hits in the protocol save screen bitmap cache.
4446 = Protocol Save Screen Bitmap Cache Hit Ratio
4447 = Hit ratio in the protocol save screen bitmap cache. A higher hit ratio means better performance since data transmissions are reduced. Low hit ratios are due to the screen updating with new information that is either not re-used, or is flushed out of the client cache.
4448 = Input Compression Ratio
4449 = Compression ratio of the server input data stream.
4450 = Output Compression Ratio
4451 = Compression ratio of the server output data stream.
4452 = Total Compression Ratio
4453 = Total compression ratio of the server data stream.
4950 = Bulk Bytes/Sec
4951 = Displays the current bulk transfer rate in bytes/sec.
4952 = Isochronous Bytes/Sec
4953 = Displays the current isochronous transfer rate in bytes/sec.
4954 = Interrupt Bytes/Sec
4955 = Displays the current interrupt transfer rate in bytes/sec.
4956 = Control Data Bytes/Sec
4957 = Displays the current control transfer rate in bytes/sec.
4958 = Controller PCI Interrupts/Sec
4959 = Displays the rate of PCI interrupt generation by the USB controller. For controller instances only.
4960 = Controller WorkSignals/Sec
4961 = Displays the current rate Work Signals generated per second by the usbport driver.  For controller instances only.
4962 = % Total Bandwidth Used for Interrupt
4963 = Displays the percentage of BW reserved for interrupt transfers
4964 = % Total Bandwidth Used for Iso
4965 = Displays the percentage of BW reserved for ISO transfers
4966 = USB
4967 = USB I/O Counters
4968 = Avg. Bytes/Transfer
4969 = Displays the average size of all transfer URBs. For device instances only.
4970 = Iso Packet Errors/Sec
4971 = Number of ISO packets that are NOT late, but complete with an error. For device instances only.
4972 = Avg ms latency for ISO transfers
4973 = Avg number of ms between the current frame and the start frame of an ISO transfer when scheduled.  For device instances only.
4974 = Transfer Errors/Sec
4975 = Number of Transfer URBs completing with an error status. For device instances only.
4976 = Host Controller Idle
4977 = Non-zero value if the host controller is not running(idle).
4978 = Host Controller Async Idle
4979 = Non-Zero value if the host controller async schedule is not running(idle).
4980 = Host Controller Async Cache Flush Count
4981 = Incremented each time the controller async cache is flushed.
4982 = Host Controller Periodic Idle
4983 = Non-Zero if the periodic schedule is not running(idle).
4984 = Host Controller Periodic Cache Flush Count
4985 = Incremented each time the controller periodic cache is flushed.
4986 = .NET CLR Networking
4987 = Help not available.
4988 = Connections Established
4989 = The cumulative total number of socket connections established for this process since the process was started.
4990 = Bytes Received
4991 = The cumulative total number of bytes received over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
4992 = Bytes Sent
4993 = The cumulative total number of bytes sent over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
4994 = Datagrams Received
4995 = The cumulative total number of datagram packets received since the process was started.
4996 = Datagrams Sent
4997 = The cumulative total number of datagram packets sent since the process was started.
4998 = .NET Data Provider for SqlServer
4999 = Counters for System.Data.SqlClient
5000 = HardConnectsPerSecond
5001 = The number of actual connections per second that are being made to servers
5002 = HardDisconnectsPerSecond
5003 = The number of actual disconnects per second that are being made to servers
5004 = SoftConnectsPerSecond
5005 = The number of connections we get from the pool per second
5006 = SoftDisconnectsPerSecond
5007 = The number of connections we return to the pool per second
5008 = NumberOfNonPooledConnections
5009 = The number of connections that are not using connection pooling
5010 = NumberOfPooledConnections
5011 = The number of connections that are managed by the connection pooler
5012 = NumberOfActiveConnectionPoolGroups
5013 = The number of unique connection strings
5014 = NumberOfInactiveConnectionPoolGroups
5015 = The number of unique connection strings waiting for pruning
5016 = NumberOfActiveConnectionPools
5017 = The number of active connection pools
5018 = NumberOfInactiveConnectionPools
5019 = The number of inactive connection pools
5020 = NumberOfActiveConnections
5021 = The number of connections currently in-use
5022 = NumberOfFreeConnections
5023 = The number of connections currently available for use
5024 = NumberOfStasisConnections
5025 = The number of connections currently waiting to be made ready for use
5026 = NumberOfReclaimedConnections
5027 = The number of connections we reclaim from GCed external connections
5028 = .NET CLR Data
5029 = .Net CLR Data
5030 = SqlClient: Current # pooled and nonpooled connections
5031 = Current number of connections, pooled or not.
5032 = SqlClient: Current # pooled connections
5033 = Current number of connections in all pools associated with the process.
5034 = SqlClient: Current # connection pools
5035 = Current number of pools associated with the process.
5036 = SqlClient: Peak # pooled connections
5037 = The highest number of connections in all pools since the process started.
5038 = SqlClient: Total # failed connects
5039 = The total number of connection open attempts that have failed for any reason.
5040 = SqlClient: Total # failed commands
5041 = The total number of command executes that have failed for any reason.
5042 = .NET CLR Memory
5043 = Counters for CLR Garbage Collected heap.
5044 = # Gen 0 Collections
5045 = This counter displays the number of times the generation 0 objects (youngest; most recently allocated) are garbage collected (Gen 0 GC) since the start of the application. Gen 0 GC occurs when the available memory in generation 0 is not sufficient to satisfy an allocation request. This counter is incremented at the end of a Gen 0 GC. Higher generation GCs include all lower generation GCs. This counter is explicitly incremented when a higher generation (Gen 1 or Gen 2) GC occurs. _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
5046 = # Gen 1 Collections
5047 = This counter displays the number of times the generation 1 objects are garbage collected since the start of the application. The counter is incremented at the end of a Gen 1 GC. Higher generation GCs include all lower generation GCs. This counter is explicitly incremented when a higher generation (Gen 2) GC occurs. _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
5048 = # Gen 2 Collections
5049 = This counter displays the number of times the generation 2 objects (older) are garbage collected since the start of the application. The counter is incremented at the end of a Gen 2 GC (also called full GC). _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
5050 = Promoted Memory from Gen 0
5051 = This counter displays the bytes of memory that survive garbage collection (GC) and are promoted from generation 0 to generation 1; objects that are promoted just because they are waiting to be finalized are not included in this counter. This counter displays the value observed at the end of the last GC; its not a cumulative counter.
5052 = Promoted Memory from Gen 1
5053 = This counter displays the bytes of memory that survive garbage collection (GC) and are promoted from generation 1 to generation 2; objects that are promoted just because they are waiting to be finalized are not included in this counter. This counter displays the value observed at the end of the last GC; its not a cumulative counter. This counter is reset to 0 if the last GC was a Gen 0 GC only.
5054 = Gen 0 Promoted Bytes/Sec
5055 = This counter displays the bytes per second that are promoted from generation 0 (youngest) to generation 1; objects that are promoted just because they are waiting to be finalized are not included in this counter. Memory is promoted when it survives a garbage collection. This counter was designed as an indicator of relatively long-lived objects being created per sec. This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5056 = Gen 1 Promoted Bytes/Sec
5057 = This counter displays the bytes per second that are promoted from generation 1 to generation 2 (oldest); objects that are promoted just because they are waiting to be finalized are not included in this counter. Memory is promoted when it survives a garbage collection. Nothing is promoted from generation 2 since it is the oldest. This counter was designed as an indicator of very long-lived objects being created per sec. This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5058 = Promoted Finalization-Memory from Gen 0
5059 = This counter displays the bytes of memory that are promoted from generation 0 to generation 1 just because they are waiting to be finalized. This counter displays the value observed at the end of the last GC; its not a cumulative counter.
5060 = Process ID
5061 = This counter displays the process ID of the CLR process instance being monitored.
5062 = Gen 0 heap size
5063 = This counter displays the maximum bytes that can be allocated in generation 0 (Gen 0); its does not indicate the current number of bytes allocated in Gen 0. A Gen 0 GC is triggered when the allocations since the last GC exceed this size. The Gen 0 size is tuned by the Garbage Collector and can change during the execution of the application. At the end of a Gen 0 collection the size of the Gen 0 heap is infact 0 bytes; this counter displays the size (in bytes) of allocations that would trigger the next Gen 0 GC. This counter is updated at the end of a GC; its not updated on every allocation.
5064 = Gen 1 heap size
5065 = This counter displays the current number of bytes in generation 1 (Gen 1); this counter does not display the maximum size of Gen 1. Objects are not directly allocated in this generation; they are promoted from previous Gen 0 GCs. This counter is updated at the end of a GC; its not updated on every allocation.
5066 = Gen 2 heap size
5067 = This counter displays the current number of bytes in generation 2 (Gen 2). Objects are not directly allocated in this generation; they are promoted from Gen 1 during previous Gen 1 GCs. This counter is updated at the end of a GC; its not updated on every allocation.
5068 = Large Object Heap size
5069 = This counter displays the current size of the Large Object Heap in bytes. Objects greater than 20 KBytes are treated as large objects by the Garbage Collector and are directly allocated in a special heap; they are not promoted through the generations. This counter is updated at the end of a GC; its not updated on every allocation.
5070 = Finalization Survivors
5071 = This counter displays the number of garbage collected objects that survive a collection because they are waiting to be finalized. If these objects hold references to other objects then those objects also survive but are not counted by this counter; the "Promoted Finalization-Memory from Gen 0" and "Promoted Finalization-Memory from Gen 1" counters represent all the memory that survived due to finalization. This counter is not a cumulative counter; its updated at the end of every GC with count of the survivors during that particular GC only. This counter was designed to indicate the extra overhead that the application might incur because of finalization.
5072 = # GC Handles
5073 = This counter displays the current number of GC Handles in use. GCHandles are handles to resources external to the CLR and the managed environment. Handles occupy small amounts of memory in the GCHeap but potentially expensive unmanaged resources.
5074 = Allocated Bytes/sec
5075 = This counter displays the rate of bytes per second allocated on the GC Heap. This counter is updated at the end of every GC; not at each allocation. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5076 = # Induced GC
5077 = This counter displays the peak number of times a garbage collection was performed because of an explicit call to GC.Collect. Its a good practice to let the GC tune the frequency of its collections.
5078 = % Time in GC
5079 = % Time in GC is the percentage of elapsed time that was spent in performing a garbage collection (GC) since the last GC cycle. This counter is usually an indicator of the work done by the Garbage Collector on behalf of the application to collect and compact memory. This counter is updated only at the end of every GC and the counter value reflects the last observed value; its not an average.
5080 = Not Displayed
5081 = Not Displayed.
5082 = # Bytes in all Heaps
5083 = This counter is the sum of four other counters; Gen 0 Heap Size; Gen 1 Heap Size; Gen 2 Heap Size and the Large Object Heap Size. This counter indicates the current memory allocated in bytes on the GC Heaps.
5084 = # Total committed Bytes
5085 = This counter displays the amount of virtual memory (in bytes) currently committed by the Garbage Collector. (Committed memory is the physical memory for which space has been reserved on the disk paging file).
5086 = # Total reserved Bytes
5087 = This counter displays the amount of virtual memory (in bytes) currently reserved by the Garbage Collector. (Reserved memory is the virtual memory space reserved for the application but no disk or main memory pages have been used.)
5088 = # of Pinned Objects
5089 = This counter displays the number of pinned objects encountered in the last GC. This counter tracks the pinned objects only in the heaps that were garbage collected e.g. a Gen 0 GC would cause enumeration of pinned objects in the generation 0 heap only. A pinned object is one that the Garbage Collector cannot move in memory.
5090 = # of Sink Blocks in use
5091 = This counter displays the current number of sync blocks in use. Sync blocks are per-object data structures allocated for storing synchronization information. Sync blocks hold weak references to managed objects and need to be scanned by the Garbage Collector. Sync blocks are not limited to storing synchronization information and can also store COM interop metadata. This counter was designed to indicate performance problems with heavy use of synchronization primitives.
5092 = .NET CLR Loading
5093 = Statistics for CLR Class Loader.
5094 = Total Classes Loaded
5095 = This counter displays the cumulative number of classes loaded in all Assemblies since the start of this application.
5096 = % Time Loading
5097 = Reserved for future use.
5098 = Assembly Search Length
5099 = Reserved for future use.
5100 = Total # of Load Failures
5101 = This counter displays the peak number of classes that have failed to load since the start of the application. These load failures could be due to many reasons like inadequate security or illegal format. Full details can be found in the profiling services help.
5102 = Rate of Load Failures
5103 = This counter displays the number of classes that failed to load per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval. These load failures could be due to many reasons like inadequate security or illegal format. Full details can be found in the profiling services help.
5104 = Bytes in Loader Heap
5105 = This counter displays the current size (in bytes) of the memory committed by the class loader across all AppDomains. (Committed memory is the physical memory for which space has been reserved on the disk paging file.)
5106 = Total appdomains unloaded
5107 = This counter displays the total number of AppDomains unloaded since the start of the application. If an AppDomain is loaded and unloaded multiple times this counter would count each of those unloads as separate.
5108 = Rate of appdomains unloaded
5109 = This counter displays the number of AppDomains unloaded per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5110 = Current Classes Loaded
5111 = This counter displays the current number of classes loaded in all Assemblies.
5112 = Rate of Classes Loaded
5113 = This counter displays the number of classes loaded per second in all Assemblies. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5114 = Current appdomains
5115 = This counter displays the current number of AppDomains loaded in this application. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process.
5116 = Total Appdomains
5117 = This counter displays the peak number of AppDomains loaded since the start of this application. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process.
5118 = Rate of appdomains
5119 = This counter displays the number of AppDomains loaded per second. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5120 = Current Assemblies
5121 = This counter displays the current number of Assemblies loaded across all AppDomains in this application. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain.
5122 = Total Assemblies
5123 = This counter displays the total number of Assemblies loaded since the start of this application. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain.
5124 = Rate of Assemblies
5125 = This counter displays the number of Assemblies loaded across all AppDomains per second. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5126 = .NET CLR Jit
5127 = Stats for CLR Jit.
5128 = # of Methods Jitted
5129 = This counter displays the total number of methods compiled Just-In-Time (JIT) by the CLR JIT compiler since the start of the application. This counter does not include the pre-jitted methods.
5130 = # of IL Bytes Jitted
5131 = This counter displays the total IL bytes jitted since the start of the application. This counter is exactly equivalent to the "Total # of IL Bytes Jitted" counter.
5132 = Total # of IL Bytes Jitted
5133 = This counter displays the total IL bytes jitted since the start of the application. This counter is exactly equivalent to the "# of IL Bytes Jitted" counter.
5134 = IL Bytes Jitted / sec
5135 = This counter displays the rate at which IL bytes are jitted per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5136 = Standard Jit Failures
5137 = This counter displays the peak number of methods the JIT compiler has failed to JIT since the start of the application. This failure can occur if the IL cannot be verified or if there was an internal error in the JIT compiler.
5138 = % Time in Jit
5139 = This counter displays the percentage of elapsed time spent in JIT compilation since the last JIT compilation phase. This counter is updated at the end of every JIT compilation phase. A JIT compilation phase is the phase when a method and its dependencies are being compiled.
5140 = Not Displayed
5141 = Not Displayed.
5142 = .NET CLR Interop
5143 = Stats for CLR interop.
5144 = # of CCWs
5145 = This counter displays the current number of Com-Callable-Wrappers (CCWs). A CCW is a proxy for the .NET managed object being referenced from unmanaged COM client(s). This counter was designed to indicate the number of managed objects being referenced by unmanaged COM code.
5146 = # of Stubs
5147 = This counter displays the current number of stubs created by the CLR. Stubs are responsible for marshalling arguments and return values from managed to unmanaged code and vice versa; during a COM Interop call or PInvoke call.
5148 = # of marshalling
5149 = This counter displays the total number of times arguments and return values have been marshaled from managed to unmanaged code and vice versa since the start of the application. This counter is not incremented if the stubs are inlined. (Stubs are responsible for marshalling arguments and return values). Stubs usually get inlined if the marshalling overhead is small.
5150 = # of TLB imports / sec
5151 = Reserved for future use.
5152 = # of TLB exports / sec
5153 = Reserved for future use.
5154 = .NET CLR LocksAndThreads
5155 = Stats for CLR Locks and Threads.
5156 = Total # of Contentions
5157 = This counter displays the total number of times threads in the CLR have attempted to acquire a managed lock unsuccessfully. Managed locks can be acquired in many ways; by the "lock" statement in C# or by calling System.Monitor.Enter or by using MethodImplOptions.Synchronized custom attribute.
5158 = Contention Rate / sec
5159 = Rate at which threads in the runtime attempt to acquire a managed lock unsuccessfully. Managed locks can be acquired in many ways; by the "lock" statement in C# or by calling System.Monitor.Enter or by using MethodImplOptions.Synchronized custom attribute.
5160 = Current Queue Length
5161 = This counter displays the total number of threads currently waiting to acquire some managed lock in the application. This counter is not an average over time; it displays the last observed value.
5162 = Queue Length Peak
5163 = This counter displays the total number of threads that waited to acquire some managed lock since the start of the application.
5164 = Queue Length / sec
5165 = This counter displays the number of threads per second waiting to acquire some lock in the application. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5166 = # of current logical Threads
5167 = This counter displays the number of current .NET thread objects in the application. A .NET thread object is created either by new System.Threading.Thread or when an unmanaged thread enters the managed environment. This counters maintains the count of both running and stopped threads. This counter is not an average over time; it just displays the last observed value.
5168 = # of current physical Threads
5169 = This counter displays the number of native OS threads created and owned by the CLR to act as underlying threads for .NET thread objects. This counters value does not include the threads used by the CLR in its internal operations; it is a subset of the threads in the OS process.
5170 = # of current recognized threads
5171 = This counter displays the number of threads that are currently recognized by the CLR; they have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice.
5172 = # of total recognized threads
5173 = This counter displays the total number of threads that have been recognized by the CLR since the start of this application; these threads have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice.
5174 = rate of recognized threads / sec
5175 = This counter displays the number of threads per second that have been recognized by the CLR; these threads have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5176 = .NET CLR Security
5177 = Stats for CLR Security.
5178 = Total Runtime Checks
5179 = This counter displays the total number of runtime Code Access Security (CAS) checks performed since the start of the application. Runtime CAS checks are performed when a caller makes a call to a callee demanding a particular permission; the runtime check is made on every call by the caller; the check is done by examining the current thread stack of the caller. This counter used together with "Stack Walk Depth" is indicative of performance penalty for security checks.
5180 = % Time Sig. Authenticating
5181 = Reserved for future use.
5182 = # Link Time Checks
5183 = This counter displays the total number of linktime Code Access Security (CAS) checks since the start of the application. Linktime CAS checks are performed when a caller makes a call to a callee demanding a particular permission at JIT compile time; linktime check is performed once per caller. This count is not indicative of serious performance issues; its indicative of the security system activity.
5184 = % Time in RT checks
5185 = This counter displays the percentage of elapsed time spent in performing runtime Code Access Security (CAS) checks since the last such check. CAS allows code to be trusted to varying degrees and enforces these varying levels of trust depending on code identity. This counter is updated at the end of a runtime security check; it represents the last observed value; its not an average.
5186 = Not Displayed
5187 = Not Displayed.
5188 = Stack Walk Depth
5189 = This counter displays the depth of the stack during that last runtime Code Access Security check. Runtime Code Access Security check is performed by crawling the stack. This counter is not an average; it just displays the last observed value.
5190 = .NET CLR Remoting
5191 = Stats for CLR Remoting.
5192 = Remote Calls/sec
5193 = This counter displays the number of remote procedure calls invoked per second. A remote procedure call is a call on any object outside the caller;s AppDomain. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5194 = Channels
5195 = This counter displays the total number of remoting channels registered across all AppDomains since the start of the application. Channels are used to transport messages to and from remote objects.
5196 = Context Proxies
5197 = This counter displays the total number of remoting proxy objects created in this process since the start of the process. Proxy object acts as a representative of the remote objects and ensures that all calls made on the proxy are forwarded to the correct remote object instance.
5198 = Context-Bound Classes Loaded
5199 = This counter displays the current number of context-bound classes loaded. Classes that can be bound to a context are called context-bound classes; context-bound classes are marked with Context Attributes which provide usage rules for synchronization; thread affinity; transactions etc.
5200 = Context-Bound Objects Alloc / sec
5201 = This counter displays the number of context-bound objects allocated per second. Instances of classes that can be bound to a context are called context-bound objects; context-bound classes are marked with Context Attributes which provide usage rules for synchronization; thread affinity; transactions etc. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5202 = Contexts
5203 = This counter displays the current number of remoting contexts in the application. A context is a boundary containing a collection of objects with the same usage rules like synchronization; thread affinity; transactions etc.
5204 = Total Remote Calls
5205 = This counter displays the total number of remote procedure calls invoked since the start of this application. A remote procedure call is a call on any object outside the caller;s AppDomain.
5206 = .NET CLR Exceptions
5207 = Runtime statistics on CLR exception handling.
5208 = # of Exceps Thrown
5209 = This counter displays the total number of exceptions thrown since the start of the application. These include both .NET exceptions and unmanaged exceptions that get converted into .NET exceptions e.g. null pointer reference exception in unmanaged code would get re-thrown in managed code as a .NET System.NullReferenceException; this counter includes both handled and unhandled exceptions. Exceptions that are re-thrown would get counted again. Exceptions should only occur in rare situations and not in the normal control flow of the program.
5210 = # of Exceps Thrown / sec
5211 = This counter displays the number of exceptions thrown per second. These include both .NET exceptions and unmanaged exceptions that get converted into .NET exceptions e.g. null pointer reference exception in unmanaged code would get re-thrown in managed code as a .NET System.NullReferenceException; this counter includes both handled and unhandled exceptions. Exceptions should only occur in rare situations and not in the normal control flow of the program; this counter was designed as an indicator of potential performance problems due to large (>100s) rate of exceptions thrown. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5212 = # of Filters / sec
5213 = This counter displays the number of .NET exception filters executed per second. An exception filter evaluates whether an exception should be handled or not. This counter tracks the rate of exception filters evaluated; irrespective of whether the exception was handled or not. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5214 = # of Finallys / sec
5215 = This counter displays the number of finally blocks executed per second. A finally block is guaranteed to be executed regardless of how the try block was exited. Only the finally blocks that are executed for an exception are counted; finally blocks on normal code paths are not counted by this counter. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5216 = Throw To Catch Depth / sec
5217 = This counter displays the number of stack frames traversed from the frame that threw the .NET exception to the frame that handled the exception per second. This counter resets to 0 when an exception handler is entered; so nested exceptions would show the handler to handler stack depth. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5218 = .NET Data Provider for Oracle
5219 = Counters for System.Data.OracleClient
5220 = HardConnectsPerSecond
5221 = The number of actual connections per second that are being made to servers
5222 = HardDisconnectsPerSecond
5223 = The number of actual disconnects per second that are being made to servers
5224 = SoftConnectsPerSecond
5225 = The number of connections we get from the pool per second
5226 = SoftDisconnectsPerSecond
5227 = The number of connections we return to the pool per second
5228 = NumberOfNonPooledConnections
5229 = The number of connections that are not using connection pooling
5230 = NumberOfPooledConnections
5231 = The number of connections that are managed by the connection pooler
5232 = NumberOfActiveConnectionPoolGroups
5233 = The number of unique connection strings
5234 = NumberOfInactiveConnectionPoolGroups
5235 = The number of unique connection strings waiting for pruning
5236 = NumberOfActiveConnectionPools
5237 = The number of active connection pools
5238 = NumberOfInactiveConnectionPools
5239 = The number of inactive connection pools
5240 = NumberOfActiveConnections
5241 = The number of connections currently in-use
5242 = NumberOfFreeConnections
5243 = The number of connections currently available for use
5244 = NumberOfStasisConnections
5245 = The number of connections currently waiting to be made ready for use
5246 = NumberOfReclaimedConnections
5247 = The number of connections we reclaim from GCed external connections
5354 = Search Gatherer Projects
5355 = Counters for the Windows Search Service Gatherer Project object
5356 = Document Additions
5357 = The number of add notifications.
5358 = Document Add Rate
5359 = The number of document additions per second.
5360 = Document Deletes
5361 = The number of delete notifications.
5362 = Document Delete Rate
5363 = The number of document deletes per second.
5364 = Document Modifies
5365 = The number of modify notifications.
5366 = Document Modifies Rate
5367 = The number of modify notifications per second.
5368 = Waiting Documents
5369 = The number of documents waiting to be processed. When this number goes to zero the catalog is idle. This number indicates the total queue size of unprocessed documents in the gatherer.
5370 = Documents In Progress
5371 = The number of documents in progress.
5372 = Documents On Hold
5373 = The number of documents on hold because a document with the same URL is currently in process.
5374 = Delayed Documents
5375 = The number of documents delayed due to site hit frequency rules.
5376 = URLs in History
5377 = The number of files (URLs) in the history list. This indicates the total size of your document corpus that was indexed.
5378 = Processed Documents
5379 = The number of documents processed since the history has been reset.
5380 = Processed Documents Rate
5381 = The number of documents processed per second.
5382 = Status Success
5383 = The number of successfully filtered documents.
5384 = Success Rate
5385 = The number of successfully filtered documents per second.
5386 = Status Error
5387 = The number of filtered documents which returned an error.
5388 = Error Rate
5389 = The number of filtered documents which returned an error per second.
5394 = File Errors
5395 = The number of file protocol errors received while getting documents.
5396 = File Errors Rate
5397 = The number of file protocol errors received per second.
5402 = Accessed Files
5403 = The number of documents accessed via file system.
5404 = Accessed File Rate
5405 = The number of documents accessed via file system per second.
5410 = Filtered Office
5411 = The number of office documents filtered.
5412 = Filtered Office Rate
5413 = The number of office documents filtered per second.
5414 = Filtered Text
5415 = The number of text documents filtered.
5416 = Filtered Text Rate
5417 = The number of text documents filtered per second.
5418 = Crawls in progress
5419 = Number of crawls in progress.
5420 = Gatherer Paused Flag
5421 = The Gatherer paused flag indicates if the Gatherer has been paused.
5422 = Recovery In Progress Flag
5423 = The recovery in progress flag indicates if recovery is currently in progress. Indexing will not be resumed until this flag is off.
5424 = Not Modified
5425 = The number of documents which were not filtered because no modification was detected since the last crawl.
5426 = Iterating History In Progress Flag
5427 = The Iterating history in progress flag indicates if the Gatherer is currently iterating over the URL history.
5428 = Incremental Crawls
5429 = Number of incremental crawls in progress.
5430 = Filtering Documents
5431 = The number of documents currently being filtered.
5432 = Started Documents
5433 = The number of documents initiated into the Gatherer service. This includes the number of documents on hold, in the active queue, and currently filtered. When this number goes to zero during a crawl, it means the crawl will be done soon.
5434 = Retries
5435 = The total number of times a document access has been retried. Having this number high may indicate a problem with accessing the data.
5436 = Retries Rate
5437 = The number of retries per second.
5444 = Adaptive Crawl Errors
5445 = Documents incorrectly rejected by adaptive crawl
5450 = Changed Documents
5451 = Documents which have changed since the last crawl
5452 = Document Moves/Renames
5453 = The number of Move/Rename notifications.
5454 = Document Move and Rename Rate
5455 = The number of document Moves and Renames per second.
5456 = Unique Documents
5457 = Number of unique documents in the system. Documents are considered not unique if their contents is the same.
5458 = History Recovery Progress
5459 = Percentage of the history recovery completed
5460 = Search Gatherer
5461 = Counters for the Windows Search Service Gathering service object
5462 = Notification Sources
5463 = Currently connected external notification sources.
5464 = Ext. Notifications Received
5465 = The total number of notifications received from all notification sources excluding file system.
5466 = Ext. Notifications Rate
5467 = The rate of external notifications received per second.
5468 = Admin Clients
5469 = The number of currently connected administrative clients.
5470 = Heartbeats
5471 = The total number of heartbeats counted since startup. A heartbeat occurs once every 10 seconds while the service is running. If the service is not running there will be no heartbeat and the number of ticks will not be incremented.
5472 = Heartbeats Rate
5473 = Displays one heartbeat every 10 seconds.
5474 = Filtering Threads
5475 = The total number of filtering threads in the system. This number is calculated based on your system resources.
5476 = Idle Threads
5477 = The number of threads waiting for documents.
5478 = Document Entries
5479 = The number of document entries currently in memory. Zero means no indexing activity is going on.
5480 = Performance Level
5481 = Indicates the level of the amount of system resources that the Gatherer service is allowed to use.
5482 = Active Queue Length
5483 = The number of documents waiting for robot threads. If this number is not 0, all threads should be filtering.
5484 = Filter Processes
5485 = The number of filtering processes in the system.
5486 = Filter Processes Max
5487 = The maximum number of filtering processes that have existed in the system since startup.
5488 = Filter Process Created
5489 = The total number of times a filter process was created or restarted. Having too many filter processes created indicates that filtering is having trouble with the data in the documents.
5490 = Delayed Documents
5491 = The number of documents delayed due to site hit frequency rules.
5492 = Server Objects
5493 = The number of servers recently accessed by the system.
5494 = Server Objects Created
5495 = The number of times a new server object had to be created.
5496 = Filter Objects
5497 = The number of filter objects in the system. Each filter object corresponds to a URL currently being filtered.
5498 = Documents Filtered
5499 = The number of times a filter object was created. This corresponds to the total number of documents filtered in the system since startup.
5500 = Documents Filtered Rate
5501 = The number of documents filtered per second.
5502 = Time Outs
5503 = The total number of timeouts detected by the system since startup.
5504 = Servers Currently Unavailable
5505 = A server becomes unavailable when a number of requests to that server time out.
5506 = Servers Unavailable
5507 = A server becomes unavailable when a number of requests to that server time out.
5508 = Threads Accessing Network
5509 = The number of threads waiting for a response from the filter process. If no activity is going on and this number is equal to number of filtering threads, it may indicate a network problem or unavailability of the server it is crawling.
5510 = Threads In Plug-ins
5511 = The number of threads waiting for plug-ins to complete an operation.
5512 = Documents Successfully Filtered
5513 = The number of documents successfully filtered.
5514 = Documents Successfully Filtered Rate
5515 = The number of successfully filtered documents per second.
5516 = Documents Delayed Retry
5517 = The number of documents that will be retried after time-out. When this is non-zero, it means that the local server it is crawling is shut down.
5518 = Word Breakers Cached
5519 = Number of available cached word breakers instances
5520 = Stemmers Cached
5521 = Number of available cached stemmer instances. Too many may indicate a resource usage problem.
5522 = All Notifications Received
5523 = The total number of notifications received from all notification sources including file system.
5524 = Notifications Rate
5525 = The rate of external notifications received per second.
5526 = System IO traffic rate
5527 = System IO (disk) traffic rate in KB/s detected by back off logic
5528 = Reason to back off
5529 = The code describing why the Gatherer service went into back off state. 0 - up and running 1 - high system IO traffic 2 - high notifications rate 3 - delayed recovery in progress (not implemented) 4 - back off due to user activity 5 - Battery Low 6 - Memory Low 99 - back off for some internal reason (forced by Search itself) While backing off, no indexing is performed. To resume the indexing you must eliminate the reason for back off. If the Gatherer service is in back off state, the Search service is paused and there is a message in the event log.
5530 = Threads blocked due to back off
5531 = The number of threads blocked due to back off event
5532 = Search Indexer
5533 = Indexer PlugIn statistics
5534 = Master Index Level.
5535 = The level of the master index.
5536 = Master Merges to Date
5537 = Number of Master Merges to Date
5538 = Master Merge Progress
5539 = Master Merge Progress
5540 = Shadow Merge Levels
5541 = Shadow Merge Levels
5542 = Shadow Merge Levels Threshold
5543 = Shadow Merge Levels Threshold
5544 = Persistent Indexes
5545 = Number of Persistent Indexes
5546 = Index Size
5547 = Size of Index
5548 = Unique Keys
5549 = Number of Unique Keys
5550 = Documents Filtered
5551 = Number of Documents Filtered
5552 = Work Items Created
5553 = Number of invalidator work items that were created
5554 = Work Items Deleted
5555 = Number of invalidator work items that were deleted
5556 = Clean WidSets
5557 = Number of clean WidSets
5558 = Dirty WidSets
5559 = Number of dirty WidSets
5560 = Master Merges Now.
5561 = Indicator if a master merge is going on.
5562 = Active Connections
5563 = Active Connections
5564 = Queries
5565 = Number of Queries
5566 = Queries Failed
5567 = Number of Queries Failed
5568 = Queries Succeeded
5569 = Number of Queries Succeeded
5570 = L0 Indexes (Wordlists)
5571 = The number of L0 Indexes (Wordlists)
5572 = L0 Merges (flushes) Now.
5573 = The number of L0 merges (flushes) in progress at any one moment.
5574 = L0 Merge (Flush) Speed - Average
5575 = The average value [documents/hour] computed for the speed of L0 merges (flushes) since the catalog has been loaded
5576 = L0 Merge (Flush) - Count
5577 = The number of L0 merges (flushes) since the catalog was loaded
5578 = L0 Merge (Flush) Speed - Last
5579 = The last value [documents/hour] computed for the speed of L0 merges (flushes).
5580 = Persistent Indexes L1
5581 = The number of L1 Indexes
5582 = L1 Merges Now.
5583 = The number of L1 merges in progress at any one moment.
5584 = L1 Merge Speed - average
5585 = The average value [documents/hour] computed for the speed of L1 merges since the catalog has been loaded
5586 = L1 Merge - Count
5587 = The number of L1 merges since the catalog was loaded
5588 = L1 Merge Speed - last
5589 = The last value [documents/hour] computed for the speed of L1 merges.
5590 = Persistent Indexes L2
5591 = The number of L2 Indexes
5592 = L2 Merges Now.
5593 = The number of L2 merges in progress at any one moment.
5594 = L2 Merge Speed - average
5595 = The average value [documents/hour] computed for the speed of L2 merges since the catalog has been loaded
5596 = L2 Merge - Count
5597 = The number of L2 merges since the catalog was loaded
5598 = L2 Merge Speed - last
5599 = The last value [documents/hour] computed for the speed of L2 merges.
5600 = Persistent Indexes L3
5601 = The number of L3 Indexes
5602 = L3 Merges Now.
5603 = The number of L3 merges in progress at any one moment.
5604 = L3 Merge Speed - average
5605 = The average value [documents/hour] computed for the speed of L3 merges since the catalog has been loaded
5606 = L3 Merge - Count
5607 = The number of L3 merges since the catalog was loaded
5608 = L3 Merge Speed - last
5609 = The last value [documents/hour] computed for the speed of L3 merges.
5610 = Persistent Indexes L4
5611 = The number of L4 Indexes
5612 = L4 Merges Now.
5613 = The number of L4 merges in progress at any one moment.
5614 = L4 Merge Speed - average
5615 = The average value [documents/hour] computed for the speed of L4 merges since the catalog has been loaded
5616 = L4 Merge - Count
5617 = The number of L4 merges since the catalog was loaded
5618 = L4 Merge Speed - last
5619 = The last value [documents/hour] computed for the speed of L4 merges.
5620 = Persistent Indexes L5
5621 = The number of L5 Indexes
5622 = L5 Merges Now.
5623 = The number of L5 merges in progress at any one moment.
5624 = L5 Merge Speed - average
5625 = The average value [documents/hour] computed for the speed of L5 merges since the catalog has been loaded
5626 = L5 Merge - Count
5627 = The number of L5 merges since the catalog was loaded
5628 = L5 Merge Speed - last
5629 = The last value [documents/hour] computed for the speed of L5 merges.
5630 = Persistent Indexes L6
5631 = The number of L6 Indexes
5632 = L6 Merges Now.
5633 = The number of L6 merges in progress at any one moment.
5634 = L6 Merge Speed - average
5635 = The average value [documents/hour] computed for the speed of L6 merges since the catalog has been loaded
5636 = L6 Merge - Count
5637 = The number of L6 merges since the catalog was loaded
5638 = L6 Merge Speed - last
5639 = The last value [documents/hour] computed for the speed of L6 merges.
5640 = Persistent Indexes L7
5641 = The number of L7 Indexes
5642 = L7 Merges Now.
5643 = The number of L7 merges in progress at any one moment.
5644 = L7 Merge Speed - average
5645 = The average value [documents/hour] computed for the speed of L7 merges since the catalog has been loaded
5646 = L7 Merge - Count
5647 = The number of L7 merges since the catalog was loaded
5648 = L7 Merge Speed - last
5649 = The last value [documents/hour] computed for the speed of L7 merges.
5650 = Persistent Indexes L8
5651 = The number of L8 Indexes
5652 = L8 Merges Now.
5653 = The number of L8 merges in progress at any one moment.
5654 = L8 Merge Speed - average
5655 = The average value [documents/hour] computed for the speed of L8 merges since the catalog has been loaded
5656 = L8 Merge - Count
5657 = The number of L8 merges since the catalog was loaded
5658 = L8 Merge Speed - last
5659 = The last value [documents/hour] computed for the speed of L8 merges.
5660 = ReadyBoost Cache
5661 = Displays performance statistics about ReadyBoost Caches.
5662 = Bytes cached
5663 = The total (uncompressed) amount of data currently stored in ReadyBoost caches.
5664 = Cache space used
5665 = Amount of space in bytes taken by data cached in ReadyBoost caches.
5666 = Compression Ratio
5667 = (Cache space used) / (Bytes cached)
5668 = Total cache size bytes
5669 = Total size, in bytes, of all caches regardless of how much data they contain.
5670 = Cache reads/sec
5671 = Number of I/Os satisfied from ReadyBoost caches per second.
5672 = Cache read bytes/sec
5673 = Bytes of I/Os satisfied from ReadyBoost caches per second.
5674 = Skipped reads/sec
5675 = Number of read I/Os ignored by ReadyBoost due to policy.
5676 = Skipped read bytes/sec
5677 = Bytes of read I/Os ignored by ReadyBoost due to policy.
5678 = Total reads/sec
5679 = Number of read I/Os that are received by ReadyBoost. This counter includes all reads whether or not they were satisfied by ReadyBoost caches.
5680 = Total read bytes/sec
5681 = Bytes of read I/Os that are received by ReadyBoost. This counter includes all reads whether or not they were satisfied by ReadyBoost caches.
5908 = Windows Workflow Foundation
5909 = Windows Workflow Foundation Performance Counters
5910 = Workflows Created
5911 = Total number of workflows created.
5912 = Workflows Created/sec
5913 = Rate of workflows created per second.
5914 = Workflows Unloaded
5915 = Total number of workflows unloaded.
5916 = Workflows Unloaded/sec
5917 = Rate of workflows unloaded per second.
5918 = Workflows Loaded
5919 = Total number of workflows loaded.
5920 = Workflows Loaded/sec
5921 = Rate of workflows loaded per second.
5922 = Workflows Completed
5923 = Total number of workflows completed.
5924 = Workflows Completed/sec
5925 = Rate of workflows completed per second.
5926 = Workflows Suspended
5927 = Total number of workflows suspended.
5928 = Workflows Suspended/sec
5929 = Rate of workflows suspended per second.
5930 = Workflows Terminated
5931 = Total number of workflows terminated.
5932 = Workflows Terminated/sec
5933 = Rate of workflows terminated per second.
5934 = Workflows In Memory
5935 = Total number of workflows in memory.
5936 = Workflows Aborted
5937 = Total number of workflows aborted.
5938 = Workflows Aborted/sec
5939 = Rate of workflows aborted per second.
5940 = Workflows Persisted
5941 = Total number of workflows persisted.
5942 = Workflows Persisted/sec
5943 = Rate of workflows persisted per second.
5944 = Workflows Executing
5945 = Total number of workflow instances actively executing.
5946 = Workflows Idle/sec
5947 = Rate of workflows becoming idle per second.
5948 = Workflows Runnable
5949 = Total number of workflows ready to execute.
5950 = Workflows Pending
5951 = Total number of workflows waiting for a thread.
5952 = ServiceModelEndpoint 3.0.0.0
5953 = ServiceModelEndpoint 3.0.0.0 performance counters
5954 = Calls
5955 = The number of calls to this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.Calls.aspx
5956 = Calls Per Second
5957 = The number of calls to this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsPerSecond.aspx
5958 = Calls Outstanding
5959 = The number of calls to this endpoint that are in progress. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsOutstanding.aspx
5960 = Calls Failed
5961 = The number of calls with unhandled exceptions at this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFailed.aspx
5962 = Calls Failed Per Second
5963 = The number of calls with unhandled exceptions at this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFailedPerSecond.aspx
5964 = Calls Faulted
5965 = The number of calls to this endpoint that returned faults. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFaulted.aspx
5966 = Calls Faulted Per Second
5967 = The number of calls to this endpoint that returned faults per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFaultedPerSecond.aspx
5968 = Calls Duration
5969 = The average duration of calls to this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallDuration.aspx
5970 = Calls Duration Base
5971 = Base counter for the 'Calls Duration' counter.
5972 = Transactions Flowed
5973 = The number of transactions that flowed to operations at this endpoint. This counter is incremented any time a transaction ID is present in the message that is sent to the endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.TxFlowed.aspx
5974 = Transactions Flowed Per Second
5975 = The number of transactions that flowed to operations at this endpoint per second. This counter is incremented any time a transaction ID is present in the message that is sent to the endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.TxFlowedPerSecond.aspx
5976 = Security Validation and Authentication Failures
5977 = The number of calls to this endpoint that failed validation or authentication. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityValidationAuthenticationFailures.aspx
5978 = Security Validation and Authentication Failures Per Second
5979 = The number of calls to this endpoint that failed validation or authentication per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityValidationAuthenticationFailuresPerSecond.aspx
5980 = Security Calls Not Authorized
5981 = The number of calls to this endpoint that failed authorization. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityCallsNotAuthorized.aspx
5982 = Security Calls Not Authorized Per Second
5983 = The number of calls to this endpoint that failed authorization per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityCallsNotAuthorizedPerSecond.aspx
5984 = Reliable Messaging Sessions Faulted
5985 = The number of reliable messaging sessions that faulted at this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMSessionsFaulted.aspx
5986 = Reliable Messaging Sessions Faulted Per Second
5987 = The number of reliable messaging sessions that faulted at this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMSessionsFaultedPerSecond.aspx
5988 = Reliable Messaging Messages Dropped
5989 = The number of reliable messaging messages that were dropped at this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMMessagesDropped.aspx
5990 = Reliable Messaging Messages Dropped Per Second
5991 = The number of reliable messaging messages that were dropped at this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMMessagesDroppedPerSecond.aspx
6046 = ServiceModelService 3.0.0.0
6047 = ServiceModelService 3.0.0.0 performance counters
6048 = Calls
6049 = The number of calls to this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.Calls.aspx
6050 = Calls Per Second
6051 = The number of calls to this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsPerSecond.aspx
6052 = Calls Outstanding
6053 = The number of calls to this service that are in progress. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsOutstanding.aspx
6054 = Calls Failed
6055 = The number of calls with unhandled exceptions in this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFailed.aspx
6056 = Calls Failed Per Second
6057 = The number of calls with unhandled exceptions in this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFailedPerSecond.aspx
6058 = Calls Faulted
6059 = The number of calls to this service that returned faults. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFaulted.aspx
6060 = Calls Faulted Per Second
6061 = The number of calls to this service that returned faults per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFaultedPerSecond.aspx
6062 = Calls Duration
6063 = The average duration of calls to this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallDuration.aspx
6064 = Calls Duration Base
6065 = Base counter for the 'Calls Duration' counter.
6066 = Transactions Flowed
6067 = The number of transactions that flowed to operations in this service. This counter is incremented any time a transaction ID is present in the message that is sent to the service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxFlowed.aspx
6068 = Transactions Flowed Per Second
6069 = The number of transactions that flowed to operations in this service per second. This counter is incremented any time a transaction ID is present in the message that is sent to the service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxFlowedPerSecond.aspx
6070 = Transacted Operations Committed
6071 = The number of transacted operations with the outcome committed in this service. Work done under such operations is fully committed. Resources are updated in accordance with the work done in the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxCommitted.aspx
6072 = Transacted Operations Committed Per Second
6073 = The number of transacted operations with the outcome committed in this service per second. Work done under such operations is fully committed. Resources are updated in accordance with the work done in the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxCommittedPerSecond.aspx
6074 = Transacted Operations Aborted
6075 = The number of transacted operations with the outcome aborted in this service. Work done under such operations is rolled back. Resources are reverted to their previous state. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxAborted.aspx
6076 = Transacted Operations Aborted Per Second
6077 = The number of transacted operations with the outcome aborted in this service per second. Work done under such operations is rolled back. Resources are reverted to their previous state. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxAbortedPerSecond.aspx
6078 = Transacted Operations In Doubt
6079 = The number of transacted operations with an outcome in doubt in this service. Work done with an outcome in doubt is in an indeterminate state. Resources are held pending outcome. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxInDoubt.aspx
6080 = Transacted Operations In Doubt Per Second
6081 = The number of transacted operations with an outcome in doubt in this service per second. Work done with an outcome in doubt is in an indeterminate state. Resources are held pending outcome. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxInDoubtPerSecond.aspx
6082 = Security Validation and Authentication Failures
6083 = The number of calls to this service that failed validation or authentication. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityValidationAuthenticationFailures.aspx
6084 = Security Validation and Authentication Failures Per Second
6085 = The number of calls to this service that failed validation or authentication per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityValidationAuthenticationFailuresPerSecond.aspx
6086 = Security Calls Not Authorized
6087 = The number of calls to this service that failed authorization. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityCallsNotAuthorized.aspx
6088 = Security Calls Not Authorized Per Second
6089 = The number of calls to this service that failed authorization per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityCallsNotAuthorizedPerSecond.aspx
6090 = Instances
6091 = The total number of instances of the service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.Instances.aspx
6092 = Instances Created Per Second
6093 = The creation rate of service instances per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.InstancesPerSecond.aspx
6094 = Reliable Messaging Sessions Faulted
6095 = The number of reliable messaging sessions that were faulted in this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMSessionsFaulted.aspx
6096 = Reliable Messaging Sessions Faulted Per Second
6097 = The number of reliable messaging sessions that were faulted in this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMSessionsFaultedPerSecond.aspx
6098 = Reliable Messaging Messages Dropped
6099 = The number of reliable messaging messages that were dropped in this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMMessagesDropped.aspx
6100 = Reliable Messaging Messages Dropped Per Second
6101 = The number of reliable messaging messages that were dropped in this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMMessagesDroppedPerSecond.aspx
6102 = Queued Poison Messages
6103 = The number of messages to this service that were marked poisoned by the queued transport. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqPoisonMessages.aspx
6104 = Queued Poison Messages Per Second
6105 = The number of messages to this service that were marked poisoned by the queued transport per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqPoisonMessagesPerSecond.aspx
6106 = Queued Messages Rejected
6107 = The number of messages to this servcie that were rejected by the queued transport. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqRejectedMessages.aspx
6108 = Queued Messages Rejected Per Second
6109 = The number of messages to this service that were rejected by the queued transport per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqRejectedMessagesPerSecond.aspx
6110 = Queued Messages Dropped
6111 = The number of messages to this service that were dropped by the queued transport. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqDroppedMessages.aspx
6112 = Queued Messages Dropped Per Second
6113 = The number of messages to this service that were dropped by the queued transport per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqDroppedMessagesPerSecond.aspx
6114 = ServiceModelOperation 3.0.0.0
6115 = ServiceModelOperation 3.0.0.0 performance counters
6116 = Calls
6117 = The number of calls to this operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.Calls.aspx
6118 = Calls Per Second
6119 = The number of calls to this operation per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsPerSecond.aspx
6120 = Calls Outstanding
6121 = The number of calls to this operation that are in progress. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsOutstanding.aspx
6122 = Calls Failed
6123 = The number of calls with unhandled exceptions in this operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFailed.aspx
6124 = Call Failed Per Second
6125 = The number of calls with unhandled exceptions in this operation per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFailedPerSecond.aspx
6126 = Calls Faulted
6127 = The number of calls to this operation that returned faults. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFaulted.aspx
6128 = Calls Faulted Per Second
6129 = The number of calls to this operation that returned faults per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFaultedPerSecond.aspx
6130 = Calls Duration
6131 = The average duration of calls to this operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallDuration.aspx
6132 = Calls Duration Base
6133 = Base counter for the 'Calls Duration' counter.
6134 = Transactions Flowed
6135 = The number of transactions that flowed to this operation. This counter is incremented any time a transaction ID is present in the message sent to the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.TxFlowed.aspx
6136 = Transactions Flowed Per Second
6137 = The number of transactions that flowed to this operation per second. This counter is incremented any time a transaction ID is present in the message sent to the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.TxFlowedPerSecond.aspx
6138 = Security Validation and Authentication Failures
6139 = The number of calls to this operation that failed validation or authentication. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityValidationAuthenticationFailures.aspx
6140 = Security Validation and Authentication Failures Per Second
6141 = The number of calls to this operation that failed validation or authentication per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityValidationAuthenticationFailuresPerSecond.aspx
6142 = Security Calls Not Authorized
6143 = The number of calls to this operation that failed authorization. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityCallsNotAuthorized.aspx
6144 = Security Calls Not Authorized Per Second
6145 = The number of calls to this operation that failed authorization per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityCallsNotAuthorizedPerSecond.aspx
6146 = SMSvcHost 3.0.0.0
6147 = SMSvcHost 3.0.0.0 performance counters
6148 = Protocol Failures over net.tcp
6149 = The total number of failures at the protocol layer of net.tcp.
6150 = Protocol Failures over net.pipe
6151 = The total number of failures at the protocol layer of net.pipe.
6152 = Dispatch Failures over net.tcp
6153 = The total number of failures dispatching messages received over net.tcp.
6154 = Dispatch Failures over net.pipe
6155 = The total number of failures dispatching messages received over net.pipe.
6156 = Connections Dispatched over net.tcp
6157 = The total number of connections dispatched over net.tcp.
6158 = Connections Dispatched over net.pipe
6159 = The total number of connections dispatched over net.pipe.
6160 = Connections Accepted over net.tcp
6161 = The total number of TCP connections accepted over net.tcp.
6162 = Connections Accepted over net.pipe
6163 = The total number of named pipe connections accepted over net.pipe.
6164 = Registrations Active for net.tcp
6165 = The number of uri registrations currently active for net.tcp.
6166 = Registrations Active for net.pipe
6167 = The number of uri registrations currently active for net.pipe.
6168 = Uris Registered for net.tcp
6169 = The total number of uris that were succesfully registered for net.tcp.
6170 = Uris Registered for net.pipe
6171 = The total number of uris that were succesfully registered for net.pipe.
6172 = Uris Unregistered for net.tcp
6173 = The total number of uris that were succesfully unregistered for net.tcp.
6174 = Uris Unregistered for net.pipe
6175 = The total number of uris that were succesfully unregistered for net.pipe.
6176 = MSDTC Bridge 3.0.0.0
6177 = MSDTC Bridge 3.0.0.0 performance counters
6178 = Message send failures/sec
6179 = The number of WS-AT protocol messages that the WS-AT service failed to send per second.
6180 = Prepare retry count/sec
6181 = The number of Prepare retry messages that the WS-AT service has sent per second.
6182 = Commit retry count/sec
6183 = The number of Commit retry messages that the WS-AT service has sent per second.
6184 = Prepared retry count/sec
6185 = The number of Prepared retry messages that the WS-AT service has sent per second.
6186 = Replay retry count/sec
6187 = The number of Replay retry messages that the WS-AT service has sent per second.
6188 = Faults received count/sec
6189 = The number of Fault messages that the WS-AT service has received per second.
6190 = Faults sent count/sec
6191 = The number of Fault messages that the WS-AT service has sent per second.
6192 = Average participant prepare response time
6193 = Average time in milliseconds for the WS-AT service to receive a Prepare message response from a participant.
6194 = Average participant prepare response time Base
6195 = Base counter for the 'Average participant prepare response time' counter.
6196 = Average participant commit response time
6197 = Average time in milliseconds for the WS-AT service to receive a Commit message response from a participant.
6198 = Average participant commit response time Base
6199 = Base counter for the 'Average participant commit response time' counter.
7002 = .NET CLR Networking 4.0.0.0
7003 = Counters for classes in the System.Net namespace.
7004 = Connections Established
7005 = The cumulative total number of socket connections established for this process since the process was started.
7006 = Bytes Received
7007 = The cumulative total number of bytes received over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
7008 = Bytes Sent
7009 = The cumulative total number of bytes sent over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
7010 = Datagrams Received
7011 = The cumulative total number of datagram packets received since the process was started.
7012 = Datagrams Sent
7013 = The cumulative total number of datagram packets sent since the process was started.
7014 = HttpWebRequests Created/Sec
7015 = The number of HttpWebRequest objects created during the last sample interval (typically 1 sec).
7016 = HttpWebRequests Average Lifetime
7017 = The average lifetime of all web requests completed during the last sample interval. The lifetime is defined as the time between the creation of the HttpWebRequest object and the closing of either the HttpWebResponse object or the response stream object. Values are shown in milliseconds.
7018 = HttpWebRequests Average Lifetime Base
7019 = HttpWebRequests Average Lifetime Base
7020 = HttpWebRequests Queued/Sec
7021 = The number of HttpWebRequest objects added to a waiting queue during the last sample interval (typically 1 sec). A request is added to a waiting queue if all connections to the server are already in use when the request is submitted.
7022 = HttpWebRequests Average Queue Time
7023 = The average time HttpWebRequest objects spent in a waiting queue. A request is added to a waiting queue if all connections to the server are already in use when the request is submitted, and remains there until a connection becomes available. Values are shown in milliseconds.
7024 = HttpWebRequests Average Queue Time Base
7025 = HttpWebRequests Average Queue Time Base
7026 = HttpWebRequests Aborted/Sec
7027 = The number of HttpWebRequest objects aborted during the last sample interval (typically 1 sec). Typically requests are aborted either by calling HttpWebRequest.Abort() or if the request times out.
7028 = HttpWebRequests Failed/Sec
7029 = The number of HttpWebRequest objects failed during the last sample interval (typically 1 sec). A request is considered failed, if after starting the request processing one of the following methods throw an exception: HttpWebRequest.EndGetRequestStream(), HttpWebRequest.GetRequestStream(), HttpWebRequest.EndGetResponse(), HttpWebRequest.GetResponse()
7030 = .NET Memory Cache 4.0
7031 = System.Runtime.Caching.MemoryCache Performance Counters
7032 = Cache Hits
7033 = The number of cache hits.
7034 = Cache Misses
7035 = The number of cache misses.
7036 = Cache Hit Ratio
7037 = The percentage of cache hits in the total number of cache requests.
7038 = Cache Hit Ratio Base
7039 = Cache Hit Ratio Base
7040 = Cache Trims
7041 = Total number of entries removed from the cache due to memory pressure or Trim invocations.
7042 = Cache Entries
7043 = The number of entries within the cache.
7044 = Cache Turnover Rate
7045 = The number of entries added to the cache or removed from the cache per second.
10254 = SMSvcHost 4.0.0.0
10255 = SMSvcHost 4.0.0.0 performance counters
10256 = Protocol Failures over net.tcp
10257 = The total number of failures at the protocol layer of net.tcp.
10258 = Protocol Failures over net.pipe
10259 = The total number of failures at the protocol layer of net.pipe.
10260 = Dispatch Failures over net.tcp
10261 = The total number of failures dispatching messages received over net.tcp.
10262 = Dispatch Failures over net.pipe
10263 = The total number of failures dispatching messages received over net.pipe.
10264 = Connections Dispatched over net.tcp
10265 = The total number of connections dispatched over net.tcp.
10266 = Connections Dispatched over net.pipe
10267 = The total number of connections dispatched over net.pipe.
10268 = Connections Accepted over net.tcp
10269 = The total number of TCP connections accepted over net.tcp.
10270 = Connections Accepted over net.pipe
10271 = The total number of named pipe connections accepted over net.pipe.
10272 = Registrations Active for net.tcp
10273 = The number of uri registrations currently active for net.tcp.
10274 = Registrations Active for net.pipe
10275 = The number of uri registrations currently active for net.pipe.
10276 = Uris Registered for net.tcp
10277 = The total number of uris that were succesfully registered for net.tcp.
10278 = Uris Registered for net.pipe
10279 = The total number of uris that were succesfully registered for net.pipe.
10280 = Uris Unregistered for net.tcp
10281 = The total number of uris that were succesfully unregistered for net.tcp.
10282 = Uris Unregistered for net.pipe
10283 = The total number of uris that were succesfully unregistered for net.pipe.
10284 = MSDTC Bridge 4.0.0.0
10285 = MSDTC Bridge 4.0.0.0 performance counters
10286 = Message send failures/sec
10287 = The number of WS-AT protocol messages that the WS-AT service failed to send per second.
10288 = Prepare retry count/sec
10289 = The number of Prepare retry messages that the WS-AT service has sent per second.
10290 = Commit retry count/sec
10291 = The number of Commit retry messages that the WS-AT service has sent per second.
10292 = Prepared retry count/sec
10293 = The number of Prepared retry messages that the WS-AT service has sent per second.
10294 = Replay retry count/sec
10295 = The number of Replay retry messages that the WS-AT service has sent per second.
10296 = Faults received count/sec
10297 = The number of Fault messages that the WS-AT service has received per second.
10298 = Faults sent count/sec
10299 = The number of Fault messages that the WS-AT service has sent per second.
10300 = Average participant prepare response time
10301 = Average time in milliseconds for the WS-AT service to receive a Prepare message response from a participant.
10302 = Average participant prepare response time Base
10303 = Base counter for the 'Average participant prepare response time' counter.
10304 = Average participant commit response time
10305 = Average time in milliseconds for the WS-AT service to receive a Commit message response from a participant.
10306 = Average participant commit response time Base
10307 = Base counter for the 'Average participant commit response time' counter.
10308 = WF (System.Workflow) 4.0.0.0
10309 = Windows Workflow Foundation Performance Counters
10310 = Workflows Created
10311 = Total number of workflows created.
10312 = Workflows Created/sec
10313 = Rate of workflows created per second.
10314 = Workflows Unloaded
10315 = Total number of workflows unloaded.
10316 = Workflows Unloaded/sec
10317 = Rate of workflows unloaded per second.
10318 = Workflows Loaded
10319 = Total number of workflows loaded.
10320 = Workflows Loaded/sec
10321 = Rate of workflows loaded per second.
10322 = Workflows Completed
10323 = Total number of workflows completed.
10324 = Workflows Completed/sec
10325 = Rate of workflows completed per second.
10326 = Workflows Suspended
10327 = Total number of workflows suspended.
10328 = Workflows Suspended/sec
10329 = Rate of workflows suspended per second.
10330 = Workflows Terminated
10331 = Total number of workflows terminated.
10332 = Workflows Terminated/sec
10333 = Rate of workflows terminated per second.
10334 = Workflows In Memory
10335 = Total number of workflows in memory.
10336 = Workflows Aborted
10337 = Total number of workflows aborted.
10338 = Workflows Aborted/sec
10339 = Rate of workflows aborted per second.
10340 = Workflows Persisted
10341 = Total number of workflows persisted.
10342 = Workflows Persisted/sec
10343 = Rate of workflows persisted per second.
10344 = Workflows Executing
10345 = Total number of workflow instances actively executing.
10346 = Workflows Idle/sec
10347 = Rate of workflows becoming idle per second.
10348 = Workflows Runnable
10349 = Total number of workflows ready to execute.
10350 = Workflows Pending
10351 = Total number of workflows waiting for a thread.
11214 = ASP.NET v4.0.30319
11215 = ASP.NET global performance counters
11216 = ASP.NET Apps v4.0.30319
11217 = ASP.NET application performance counters
11218 = Application Restarts
11219 = Number of times the application has been restarted during the web server's lifetime.
11220 = Applications Running
11221 = Number of currently running web applications.
11222 = Requests Disconnected
11223 = The number of requests disconnected due to communication errors or user terminated.
11224 = Request Execution Time
11225 = The number of milliseconds that it took to execute the most recent request.
11226 = Requests Rejected
11227 = The number of requests rejected because the request queue was full.
11228 = Requests Queued
11229 = The number of requests waiting to be processed.
11230 = Worker Processes Running
11231 = Number of worker processes running on the machine.
11232 = Worker Process Restarts
11233 = Number of times a worker process has restarted on the machine.
11234 = Request Wait Time
11235 = The number of milliseconds the most recent request was waiting in the queue.
11236 = State Server Sessions Active
11237 = The current number of sessions currently active.
11238 = State Server Sessions Abandoned
11239 = The number of sessions that have been explicitly abandoned.
11240 = State Server Sessions Timed Out
11241 = The number of sessions timed out.
11242 = State Server Sessions Total
11243 = The number of sessions total.
11244 = Requests Current
11245 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
11246 = Audit Success Events Raised
11247 = Number of audit successes in the application since it was started.
11248 = Audit Failure Events Raised
11249 = Number of audit failures in the application since it was started.
11250 = Error Events Raised
11251 = Number of error events raised since the application was started.
11252 = Request Error Events Raised
11253 = Number of runtime error events raised since the application was started.
11254 = Infrastructure Error Events Raised
11255 = Number of HTTP error events raised since the application was started.
11256 = Requests In Native Queue
11257 = Requests queued because the concurrency limits have been exceeded.
11258 = Anonymous Requests
11259 = Number of requests utilizing anonymous authentication.
11260 = Anonymous Requests/Sec
11261 = Number of Authentication Anonymous Requests/Sec
11262 = Cache Total Entries
11263 = Total number of entries within the cache (both internal and user added)
11264 = Cache Total Turnover Rate
11265 = Number of additions and removals to the total cache per second.
11266 = Cache Total Hits
11267 = Total number of hits from the cache.
11268 = Cache Total Misses
11269 = Total number of cache misses.
11270 = Cache Total Hit Ratio
11271 = Ratio of hits from all cache calls.
11272 = Cache Total Hit Ratio Base
11273 = Cache Total Hit Ratio Base
11274 = Cache API Entries
11275 = Total number of entries within the cache added by the user.
11276 = Cache API Turnover Rate
11277 = Number of additions and removals to the API cache per second.
11278 = Cache API Hits
11279 = Number of cache hits from user code.
11280 = Cache API Misses
11281 = Number of cache misses called from user code.
11282 = Cache API Hit Ratio
11283 = Ratio of hits called from user code.
11284 = Cache API Hit Ratio Base
11285 = Cache API Hit Ratio Base
11286 = Output Cache Entries
11287 = Current number of entries in the output cache.
11288 = Output Cache Turnover Rate
11289 = Number of additions and removals to the output cache per second.
11290 = Output Cache Hits
11291 = Total number of output cacheable requests served from the output cache.
11292 = Output Cache Misses
11293 = Total number of output cacheable requests not served from the output cache.
11294 = Output Cache Hit Ratio
11295 = Ratio of hits to requests for output cacheable requests.
11296 = Output Cache Hit Ratio Base
11297 = Output Cache Hit Ratio Base
11298 = Compilations Total
11299 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
11300 = Debugging Requests
11301 = Number of debugging requests processed.
11302 = Errors During Preprocessing
11303 = Number of errors that have occurred during parsing and configuration.
11304 = Errors During Compilation
11305 = Number of errors that have occurred during compilation.
11306 = Errors During Execution
11307 = Number of errors that have occurred during the processing of a request.
11308 = Errors Unhandled During Execution
11309 = Number of errors not handled by user code, but by the default error handler.
11310 = Errors Unhandled During Execution/Sec
11311 = Rate of unhandled errors.
11312 = Errors Total
11313 = Total number of errors occurred.
11314 = Errors Total/Sec
11315 = Rate of errors occurred.
11316 = Pipeline Instance Count
11317 = Number of active pipeline instances.
11318 = Request Bytes In Total
11319 = The total size, in bytes, of all requests.
11320 = Request Bytes Out Total
11321 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
11322 = Requests Executing
11323 = The number of requests currently executing.
11324 = Requests Failed
11325 = Total number of failed requests.
11326 = Requests Not Found
11327 = The number of requests for resources that were not found.
11328 = Requests Not Authorized
11329 = Number of requests failed due to unauthorized access.
11330 = Requests In Application Queue
11331 = The number of requests in the application request queue.
11332 = Requests Timed Out
11333 = The number of requests that timed out.
11334 = Requests Succeeded
11335 = The number of requests that executed successfully.
11336 = Requests Total
11337 = The total number of requests since the application was started.
11338 = Requests/Sec
11339 = The number of requests executed per second.
11340 = Sessions Active
11341 = The current number of sessions currently active.
11342 = Sessions Abandoned
11343 = The number of sessions that have been explicitly abandoned.
11344 = Sessions Timed Out
11345 = The number of sessions timed out.
11346 = Sessions Total
11347 = Total number of sessions since the application was started.
11348 = Transactions Aborted
11349 = The number of transactions aborted.
11350 = Transactions Committed
11351 = The number of transactions committed.
11352 = Transactions Pending
11353 = Number of transactions in progress.
11354 = Transactions Total
11355 = The total number of transactions since the application was started.
11356 = Transactions/Sec
11357 = Transactions started per second.
11358 = Session State Server connections total
11359 = The total number of connections to the State Server used by session state.
11360 = Session SQL Server connections total
11361 = The total number of connections to the SQL Server used by session state.
11362 = Events Raised
11363 = Total number of instrumentation events raised since the application was started.
11364 = Events Raised/Sec
11365 = Total number of instrumentation events per second.
11366 = Application Lifetime Events
11367 = Number of application events raised since the application was started.
11368 = Application Lifetime Events/Sec
11369 = Number of application events raised per second.
11370 = Error Events Raised
11371 = Number of error events raised since the application was started.
11372 = Error Events Raised/Sec
11373 = Number of error events per second.
11374 = Request Error Events Raised
11375 = Number of runtime error events raised since the application was started.
11376 = Request Error Events Raised/Sec
11377 = Number of runtime error events per second.
11378 = Infrastructure Error Events Raised
11379 = Number of HTTP error events raised since the application was started.
11380 = Infrastructure Error Events Raised/Sec
11381 = Number of HTTP error events raised per second.
11382 = Request Events Raised
11383 = Number of request events raised since the application was started
11384 = Request Events Raised/Sec
11385 = Number of request events raised per second.
11386 = Audit Success Events Raised
11387 = Number of audit successes in the application since it was started.
11388 = Audit Failure Events Raised
11389 = Number of audit failures in the application since it was started.
11390 = Membership Authentication Success
11391 = Number of successful membership credential validations since the application was started.
11392 = Membership Authentication Failure
11393 = Number of failed membership credential validations since the application was started.
11394 = Forms Authentication Success
11395 = Number of successful forms authentication ticket validations since the application was started.
11396 = Forms Authentication Failure
11397 = Number of failed forms authentication ticket validations since the application was started.
11398 = Viewstate MAC Validation Failure
11399 = Number of viewstate MAC validations that failed since the application was started.
11400 = Request Execution Time
11401 = The number of milliseconds that it took to execute the most recent request.
11402 = Requests Disconnected
11403 = The number of requests disconnected due to communication errors or user terminated.
11404 = Requests Rejected
11405 = The number of requests rejected because the application request queue was full.
11406 = Request Wait Time
11407 = The number of milliseconds the most recent request was waiting in the queue.
11408 = Cache % Machine Memory Limit Used
11409 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
11410 = Cache % Machine Memory Limit Used Base
11411 = Cache % Machine Memory Limit Used Base
11412 = Cache % Process Memory Limit Used
11413 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
11414 = Cache % Process Memory Limit Used Base
11415 = Cache % Process Memory Limit Used Base
11416 = Cache Total Trims
11417 = Total number of entries forcibly removed from the cache due to memory pressure.
11418 = Cache API Trims
11419 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
11420 = Output Cache Trims
11421 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.
11422 = % Managed Processor Time (estimated)
11423 = Estimated percentage of elapsed time that the processor spends executing managed application code.  This counter only tracks processor time of managed threads in the application.  It does not include additional processor time spent executing on non-managed threads.  Note that this counter is only updated with new data every five seconds.
11424 = % Managed Processor Time Base (estimated)
11425 = % Managed Processor Time Base (estimated)
11426 = Managed Memory Used (estimated)
11427 = Estimated managed heap memory consumption (in KB) by the application.  The accuracy of this counter varies depending on the duration of elapsed time since the last full managed memory heap collection.  Note that this counter is only updated with new data every five seconds.
11428 = Request Bytes In Total (WebSockets)
11429 = The total size, in bytes, of data received by ASP.NET on WebSocket connections.
11430 = Request Bytes Out Total (WebSockets)
11431 = The total size, in bytes, of data sent to a client on WebSocket connections.
11432 = Requests Executing (WebSockets)
11433 = The number of WebSocket requests currently executing.
11434 = Requests Failed (WebSockets)
11435 = Total number of WebSocket requests that ended up in an aborted state.
11436 = Requests Succeeded (WebSockets)
11437 = Total number of WebSocket requests that completed gracefully.
11438 = Requests Total (WebSockets)
11439 = The total number of WebSocket requests since the application was started.
11666 = ASP.NET State Service
11667 = ASP.NET State Service
11892 = State Server Sessions Active
11893 = The current number of sessions currently active.
11894 = State Server Sessions Abandoned
11895 = The number of sessions that have been explicitly abandoned.
11896 = State Server Sessions Timed Out
11897 = The number of sessions timed out.
11898 = State Server Sessions Total
11899 = The number of sessions total.
11900 = ASP.NET
11901 = ASP.NET global performance counters
11902 = ASP.NET Applications
11903 = ASP.NET application performance counters
11904 = Application Restarts
11905 = Number of times the application has been restarted during the web server's lifetime.
11906 = Applications Running
11907 = Number of currently running web applications.
11908 = Requests Disconnected
11909 = The number of requests disconnected due to communication errors or user terminated.
11910 = Request Execution Time
11911 = The number of milliseconds that it took to execute the most recent request.
11912 = Requests Rejected
11913 = The number of requests rejected because the request queue was full.
11914 = Requests Queued
11915 = The number of requests waiting to be processed.
11916 = Worker Processes Running
11917 = Number of worker processes running on the machine.
11918 = Worker Process Restarts
11919 = Number of times a worker process has restarted on the machine.
11920 = Request Wait Time
11921 = The number of milliseconds the most recent request was waiting in the queue.
11922 = State Server Sessions Active
11923 = The current number of sessions currently active.
11924 = State Server Sessions Abandoned
11925 = The number of sessions that have been explicitly abandoned.
11926 = State Server Sessions Timed Out
11927 = The number of sessions timed out.
11928 = State Server Sessions Total
11929 = The number of sessions total.
11930 = Requests Current
11931 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
11932 = Audit Success Events Raised
11933 = Number of audit successes in the application since it was started.
11934 = Audit Failure Events Raised
11935 = Number of audit failures in the application since it was started.
11936 = Error Events Raised
11937 = Number of error events raised since the application was started.
11938 = Request Error Events Raised
11939 = Number of runtime error events raised since the application was started.
11940 = Infrastructure Error Events Raised
11941 = Number of HTTP error events raised since the application was started.
11942 = Requests In Native Queue
11943 = Requests queued because the concurrency limits have been exceeded.
11944 = Anonymous Requests
11945 = Number of requests utilizing anonymous authentication.
11946 = Anonymous Requests/Sec
11947 = Number of Authentication Anonymous Requests/Sec
11948 = Cache Total Entries
11949 = Total number of entries within the cache (both internal and user added)
11950 = Cache Total Turnover Rate
11951 = Number of additions and removals to the total cache per second.
11952 = Cache Total Hits
11953 = Total number of hits from the cache.
11954 = Cache Total Misses
11955 = Total number of cache misses.
11956 = Cache Total Hit Ratio
11957 = Ratio of hits from all cache calls.
11958 = Cache Total Hit Ratio Base
11959 = Cache Total Hit Ratio Base
11960 = Cache API Entries
11961 = Total number of entries within the cache added by the user.
11962 = Cache API Turnover Rate
11963 = Number of additions and removals to the API cache per second.
11964 = Cache API Hits
11965 = Number of cache hits from user code.
11966 = Cache API Misses
11967 = Number of cache misses called from user code.
11968 = Cache API Hit Ratio
11969 = Ratio of hits called from user code.
11970 = Cache API Hit Ratio Base
11971 = Cache API Hit Ratio Base
11972 = Output Cache Entries
11973 = Current number of entries in the output cache.
11974 = Output Cache Turnover Rate
11975 = Number of additions and removals to the output cache per second.
11976 = Output Cache Hits
11977 = Total number of output cacheable requests served from the output cache.
11978 = Output Cache Misses
11979 = Total number of output cacheable requests not served from the output cache.
11980 = Output Cache Hit Ratio
11981 = Ratio of hits to requests for output cacheable requests.
11982 = Output Cache Hit Ratio Base
11983 = Output Cache Hit Ratio Base
11984 = Compilations Total
11985 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
11986 = Debugging Requests
11987 = Number of debugging requests processed.
11988 = Errors During Preprocessing
11989 = Number of errors that have occurred during parsing and configuration.
11990 = Errors During Compilation
11991 = Number of errors that have occurred during compilation.
11992 = Errors During Execution
11993 = Number of errors that have occurred during the processing of a request.
11994 = Errors Unhandled During Execution
11995 = Number of errors not handled by user code, but by the default error handler.
11996 = Errors Unhandled During Execution/Sec
11997 = Rate of unhandled errors.
11998 = Errors Total
11999 = Total number of errors occurred.
12000 = Errors Total/Sec
12001 = Rate of errors occurred.
12002 = Pipeline Instance Count
12003 = Number of active pipeline instances.
12004 = Request Bytes In Total
12005 = The total size, in bytes, of all requests.
12006 = Request Bytes Out Total
12007 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
12008 = Requests Executing
12009 = The number of requests currently executing.
12010 = Requests Failed
12011 = Total number of failed requests.
12012 = Requests Not Found
12013 = The number of requests for resources that were not found.
12014 = Requests Not Authorized
12015 = Number of requests failed due to unauthorized access.
12016 = Requests In Application Queue
12017 = The number of requests in the application request queue.
12018 = Requests Timed Out
12019 = The number of requests that timed out.
12020 = Requests Succeeded
12021 = The number of requests that executed successfully.
12022 = Requests Total
12023 = The total number of requests since the application was started.
12024 = Requests/Sec
12025 = The number of requests executed per second.
12026 = Sessions Active
12027 = The current number of sessions currently active.
12028 = Sessions Abandoned
12029 = The number of sessions that have been explicitly abandoned.
12030 = Sessions Timed Out
12031 = The number of sessions timed out.
12032 = Sessions Total
12033 = Total number of sessions since the application was started.
12034 = Transactions Aborted
12035 = The number of transactions aborted.
12036 = Transactions Committed
12037 = The number of transactions committed.
12038 = Transactions Pending
12039 = Number of transactions in progress.
12040 = Transactions Total
12041 = The total number of transactions since the application was started.
12042 = Transactions/Sec
12043 = Transactions started per second.
12044 = Session State Server connections total
12045 = The total number of connections to the State Server used by session state.
12046 = Session SQL Server connections total
12047 = The total number of connections to the SQL Server used by session state.
12048 = Events Raised
12049 = Total number of instrumentation events raised since the application was started.
12050 = Events Raised/Sec
12051 = Total number of instrumentation events per second.
12052 = Application Lifetime Events
12053 = Number of application events raised since the application was started.
12054 = Application Lifetime Events/Sec
12055 = Number of application events raised per second.
12056 = Error Events Raised
12057 = Number of error events raised since the application was started.
12058 = Error Events Raised/Sec
12059 = Number of error events per second.
12060 = Request Error Events Raised
12061 = Number of runtime error events raised since the application was started.
12062 = Request Error Events Raised/Sec
12063 = Number of runtime error events per second.
12064 = Infrastructure Error Events Raised
12065 = Number of HTTP error events raised since the application was started.
12066 = Infrastructure Error Events Raised/Sec
12067 = Number of HTTP error events raised per second.
12068 = Request Events Raised
12069 = Number of request events raised since the application was started
12070 = Request Events Raised/Sec
12071 = Number of request events raised per second.
12072 = Audit Success Events Raised
12073 = Number of audit successes in the application since it was started.
12074 = Audit Failure Events Raised
12075 = Number of audit failures in the application since it was started.
12076 = Membership Authentication Success
12077 = Number of successful membership credential validations since the application was started.
12078 = Membership Authentication Failure
12079 = Number of failed membership credential validations since the application was started.
12080 = Forms Authentication Success
12081 = Number of successful forms authentication ticket validations since the application was started.
12082 = Forms Authentication Failure
12083 = Number of failed forms authentication ticket validations since the application was started.
12084 = Viewstate MAC Validation Failure
12085 = Number of viewstate MAC validations that failed since the application was started.
12086 = Request Execution Time
12087 = The number of milliseconds that it took to execute the most recent request.
12088 = Requests Disconnected
12089 = The number of requests disconnected due to communication errors or user terminated.
12090 = Requests Rejected
12091 = The number of requests rejected because the application request queue was full.
12092 = Request Wait Time
12093 = The number of milliseconds the most recent request was waiting in the queue.
12094 = Cache % Machine Memory Limit Used
12095 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
12096 = Cache % Machine Memory Limit Used Base
12097 = Cache % Machine Memory Limit Used Base
12098 = Cache % Process Memory Limit Used
12099 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
12100 = Cache % Process Memory Limit Used Base
12101 = Cache % Process Memory Limit Used Base
12102 = Cache Total Trims
12103 = Total number of entries forcibly removed from the cache due to memory pressure.
12104 = Cache API Trims
12105 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
12106 = Output Cache Trims
12107 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.
12108 = % Managed Processor Time (estimated)
12109 = Estimated percentage of elapsed time that the processor spends executing managed application code.  This counter only tracks processor time of managed threads in the application.  It does not include additional processor time spent executing on non-managed threads.  Note that this counter is only updated with new data every five seconds.
12110 = % Managed Processor Time Base (estimated)
12111 = % Managed Processor Time Base (estimated)
12112 = Managed Memory Used (estimated)
12113 = Estimated managed heap memory consumption (in KB) by the application.  The accuracy of this counter varies depending on the duration of elapsed time since the last full managed memory heap collection.  Note that this counter is only updated with new data every five seconds.
12114 = Request Bytes In Total (WebSockets)
12115 = The total size, in bytes, of data received by ASP.NET on WebSocket connections.
12116 = Request Bytes Out Total (WebSockets)
12117 = The total size, in bytes, of data sent to a client on WebSocket connections.
12118 = Requests Executing (WebSockets)
12119 = The number of WebSocket requests currently executing.
12120 = Requests Failed (WebSockets)
12121 = Total number of WebSocket requests that ended up in an aborted state.
12122 = Requests Succeeded (WebSockets)
12123 = Total number of WebSocket requests that completed gracefully.
12124 = Requests Total (WebSockets)
12125 = The total number of WebSocket requests since the application was started.
12402 = Web Service
12403 = The Web Service object includes counters specific to the World Wide Web Publishing Service.
12404 = Total Bytes Sent
12405 = Total Bytes Sent is the number of data bytes that have been sent by the Web service (since service startup).
12406 = Bytes Sent/sec
12407 = Bytes Sent/sec is the rate data bytes are being sent by the Web service.
12408 = Total Bytes Received
12409 = Total Bytes Received is the number of data bytes that have been received by the Web service (since service startup).
12410 = Bytes Received/sec
12411 = Bytes Received/sec is the rate that data bytes are received by the Web service.
12412 = Total Bytes Transferred
12413 = Total bytes either received or sent by the Web service (since service startup).
12414 = Bytes Total/sec
12415 = Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the Web service.
12416 = Total Files Sent
12417 = Total Files Sent is the total number of files sent by the Web service (since service startup).
12418 = Files Sent/sec
12419 = The rate files are sent by the Web service.
12420 = Total Files Received
12421 = Total Files Received is the total number of files received by the Web service (since service startup).
12422 = Files Received/sec
12423 = The rate files are received by the Web service.
12424 = Total Files Transferred
12425 = Total Files Transferred is the sum of Files Sent and Files Received (since service startup).
12426 = Files/sec
12427 = The rate files are transferred, that is, sent and received by the Web service.
12428 = Current Anonymous Users
12429 = Current Anonymous Users is the number of users who currently have an anonymous connection using the Web service.
12430 = Current NonAnonymous Users
12431 = Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the Web service.
12432 = Total Anonymous Users
12433 = Total Anonymous Users is the total number of users who established an anonymous connection with the Web service (since service startup).
12434 = Anonymous Users/sec
12435 = The rate users are making anonymous connections to the Web service.
12436 = Total NonAnonymous Users
12437 = Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the Web service (since service startup).
12438 = NonAnonymous Users/sec
12439 = The rate users are making non-anonymous connections to the Web service.
12440 = Maximum Anonymous Users
12441 = Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the Web service (since service startup).
12442 = Maximum NonAnonymous Users
12443 = Maximum NonAnonymous Users is the maximum number of concurrent non-anonymous connections to the Web service (since service startup).
12444 = Current Connections
12445 = Current Connections is the current number of connections established with the Web service.
12446 = Maximum Connections
12447 = Maximum Connections is the maximum number of concurrent connections established with the Web service (since service startup).
12448 = Total Connection Attempts (all instances)
12449 = Total Connection Attempts is the number of connections that have been attempted using the Web service (since service startup).  This counter is for all instances listed.
12450 = Connection Attempts/sec
12451 = The rate that connections to the Web service are being attempted.
12452 = Total Logon Attempts
12453 = Total Logon Attempts is the number of logons attempts to the Web Service (since service startup).
12454 = Logon Attempts/sec
12455 = The rate that logons to the Web service are being attempted.
12456 = Total Options Requests
12457 = Total Options Requests is the number of HTTP requests using the OPTIONS method (since service startup).
12458 = Options Requests/sec
12459 = The rate HTTP requests using the OPTIONS method are made.
12460 = Total Get Requests
12461 = Total Get Requests is the number of HTTP requests using the GET method (since service startup).  Get requests are the most common HTTP request.
12462 = Get Requests/sec
12463 = The rate HTTP requests using the GET method are made.  Get requests are the most common HTTP request.
12464 = Total Post Requests
12465 = Total Post Requests is the number of HTTP requests using the POST method (since service startup).
12466 = Post Requests/sec
12467 = The rate HTTP requests using the POST method are made.
12468 = Total Head Requests
12469 = Total Head Requests is the number of HTTP requests using the HEAD method (since service startup).  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.
12470 = Head Requests/sec
12471 = The rate HTTP requests using the HEAD method are made.  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.
12472 = Total Put Requests
12473 = Total Put Requests is the number of HTTP requests using the PUT method (since service startup).
12474 = Put Requests/sec
12475 = The rate HTTP requests using the PUT method are made.
12476 = Total Delete Requests
12477 = Total Delete Requests is the number of HTTP requests using the DELETE method (since service startup).  Delete requests are generally used for file removals.
12478 = Delete Requests/sec
12479 = The rate HTTP requests using the DELETE method are made.  Delete requests are generally used for file removals.
12480 = Total Trace Requests
12481 = Total Trace Requests is the number of HTTP requests using the TRACE method (since service startup).  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.
12482 = Trace Requests/sec
12483 = The rate HTTP requests using the TRACE method are made.  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.
12484 = Total Move Requests
12485 = Total Move Requests is the number of HTTP requests using the MOVE method (since service startup).  Move requests are used for moving files and directories.
12486 = Move Requests/sec
12487 = The rate HTTP requests using the MOVE method are made.  Move requests are used for moving files and directories.
12488 = Total Copy Requests
12489 = Total Copy Requests is the number of HTTP requests using the COPY method (since service startup).  Copy requests are used for copying files and directories.
12490 = Copy Requests/sec
12491 = The rate HTTP requests using the COPY method are made.  Copy requests are used for copying files and directories.
12492 = Total Mkcol Requests
12493 = Total Mkcol Requests is the number of HTTP requests using the MKCOL method (since service startup).  Mkcol requests are used to create directories on the server.
12494 = Mkcol Requests/sec
12495 = The rate HTTP requests using the MKCOL method are made.  Mkcol requests are used to create directories on the server.
12496 = Total Propfind Requests
12497 = Total Propfind Requests is the number of HTTP requests using the PROPFIND method (since service startup).  Propfind requests retrieve property values on files and directories.
12498 = Propfind Requests/sec
12499 = The rate HTTP requests using the PROPFIND method are made.  Propfind requests retrieve property values on files and directories.
12500 = Total Proppatch Requests
12501 = Total Proppatch Requests is the number of HTTP requests using the PROPPATCH method (since service startup).  Proppatch requests set property values on files and directories.
12502 = Proppatch Requests/sec
12503 = The rate HTTP requests using the PROPPATCH method are made.  Proppatch requests set property values on files and directories.
12504 = Total Search Requests
12505 = Total Search Requests is the number of HTTP requests using the SEARCH method (since service startup).  Search requests are used to query the server to find resources that match a set of conditions provided by the client.
12506 = Search Requests/sec
12507 = The rate HTTP requests using the SEARCH method are made.  Search requests are used to query the server to find resources that match a set of conditions provided by the client.
12508 = Total Lock Requests
12509 = Total Lock Requests is the number of HTTP requests using the LOCK method (since service startup).  Lock requests are used to lock a file for one user so that only that user can modify the file.
12510 = Lock Requests/sec
12511 = The rate HTTP requests using the LOCK method are made.  Lock requests are used to lock a file for one user so that only that user can modify the file.
12512 = Total Unlock Requests
12513 = Total Unlock Requests is the number of HTTP requests using the UNLOCK method (since service startup).  Unlock requests are used to remove locks from files.
12514 = Unlock Requests/sec
12515 = The rate HTTP requests using the UNLOCK method are made.  Unlock requests are used to remove locks from files.
12516 = Total Other Request Methods
12517 = Total Other Request Methods is the number of HTTP requests that are not OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, SEARCH, LOCK or UNLOCK methods (since service startup).
12518 = Other Request Methods/sec
12519 = The rate HTTP requests are made that do not use the OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, SEARCH, LOCK or UNLOCK methods.
12520 = Total Method Requests
12521 = Total Method Requests is the number of all HTTP requests (since service startup).
12522 = Total Method Requests/sec
12523 = The rate HTTP requests are received.
12524 = Total CGI Requests
12525 = Total CGI requests is the total number of CGI requests (since service startup).
12526 = CGI Requests/sec
12527 = The rate CGI requests are received by the Web service.
12528 = Total ISAPI Extension Requests
12529 = Total ISAPI Extension Requests received (since service startup).
12530 = ISAPI Extension Requests/sec
12531 = The rate that ISAPI Extension requests are received by the Web service.
12532 = Total Not Found Errors
12533 = Total Not Found Errors is the number of requests that couldn't be satisfied by the server because the requested document could not be found (since service startup).  These are generally reported as an HTTP 404 error code to the client.
12534 = Not Found Errors/sec
12535 = The rate of errors due to requests that couldn't be satisfied by the server because the requested document could not be found.  These are generally reported as an HTTP 404 error code to the client.
12536 = Total Locked Errors
12537 = Total Locked Errors is the number of requests that couldn't be satisfied by the server because the requested was locked (since service startup).  These are generally reported as an HTTP 423 error code to the client.
12538 = Locked Errors/sec
12539 = The rate of errors due to requests that couldn't be satisfied by the server because the requested document was locked.  These are generally reported as an HTTP 423 error code to the client.
12540 = Current CGI Requests
12541 = Current CGI Requests is the current number of CGI requests being simultaneously processed by the Web service.
12542 = Current ISAPI Extension Requests
12543 = Current ISAPI Extension Requests is the current number of ISAPI requests being simultaneously processed by the Web service.
12544 = Maximum CGI Requests
12545 = Maximum CGI Requests is the maximum number of CGI requests simultaneously processed by the Web service (since service startup).
12546 = Maximum ISAPI Extension Requests
12547 = Maximum ISAPI Extension Requests is the maximum number of ISAPI requests simultaneously processed by the Web service (since service startup).
12548 = Current CAL count for authenticated users
12549 = This counter is no longer valid. Value will always be zero.
12550 = Maximum CAL count for authenticated users
12551 = This counter is no longer valid. Value will always be zero.
12552 = Total count of failed CAL requests for authenticated users
12553 = This counter is no longer valid. Value will always be zero.
12554 = Current CAL count for SSL connections
12555 = This counter is no longer valid. Value will always be zero.
12556 = Maximum CAL count for SSL connections
12557 = This counter is no longer valid. Value will always be zero.
12558 = Total Blocked Async I/O Requests
12559 = Total requests temporarily blocked due to bandwidth throttling settings (since service startup).
12560 = Total Allowed Async I/O Requests
12561 = Total requests allowed by bandwidth throttling settings (since service startup).
12562 = Total Rejected Async I/O Requests
12563 = Total requests rejected due to bandwidth throttling settings (since service startup).
12564 = Current Blocked Async I/O Requests
12565 = Current requests temporarily blocked due to bandwidth throttling settings.
12566 = Total count of failed CAL requests for SSL connections
12567 = This counter is no longer valid. Value will always be zero.
12568 = Measured Async I/O Bandwidth Usage
12569 = Measured bandwidth of asynchronous I/O averaged over a minute.
12570 = Total blocked bandwidth bytes.
12571 = Total bytes blocked due to bandwidth throttling settings (since service startup).
12572 = Current blocked bandwidth bytes.
12573 = Current bytes temporarily blocked due to bandwidth throttling settings.
12574 = Service Uptime
12575 = The length of time the Web Service has been running.
12576 = Web Service Cache
12577 = The Web Service Cache Counters object includes cache counters specific to the World Wide Web Publishing Service.
12578 = Current Files Cached
12579 = Current number of files whose content is in the user-mode cache.
12580 = Total Files Cached
12581 = Total number of files whose content was ever added to the user-mode cache (since service startup).
12582 = File Cache Hits
12583 = Total number of successful lookups in the user-mode file cache (since service startup).
12584 = File Cache Misses
12585 = Total number of unsuccessful lookups in the user-mode file cache (since service startup).
12586 = File Cache Hits %
12587 = The ratio of user-mode file cache hits to total cache requests (since service startup).
12590 = File Cache Flushes
12591 = The number of files removed from the user-mode cache (since service startup).
12592 = Current File Cache Memory Usage
12593 = Current number of bytes used for the user-mode file cache.
12594 = Maximum File Cache Memory Usage
12595 = Maximum number of bytes used for user-mode file cache (since service startup).
12596 = Active Flushed Entries
12597 = Active Flushed Entries are file handles cached in user-mode that will be closed when all current transfers complete.
12598 = Total Flushed Files
12599 = Total Flushed Files is the number of file handles that have been removed from the user-mode cache (since service startup).
12600 = Current URIs Cached
12601 = URI information blocks currently in the user-mode cache.
12602 = Total URIs Cached
12603 = Total number of URI information blocks added to the user-mode cache (since service startup).
12604 = URI Cache Hits
12605 = Total number of successful lookups in the user-mode URI cache (since service startup).
12606 = URI Cache Misses
12607 = Total number of unsuccessful lookups in the user-mode URI cache (since service startup).
12608 = URI Cache Hits %
12609 = The ratio of user-mode URI Cache Hits to total cache requests (since service startup).
12612 = URI Cache Flushes
12613 = User-mode URI Cache flushes (since service startup).
12614 = Total Flushed URIs
12615 = The number of URI information blocks that have been removed from the user-mode cache (since service startup).
12616 = Current Metadata Cached
12617 = Current number of metadata information blocks currently in the user-mode cache.
12618 = Total Metadata Cached
12619 = Total number of metadata information blocks added to the user-mode cache (since service startup).
12620 = Metadata Cache Hits
12621 = Total number of successful lookups in the user-mode metadata cache (since service startup).
12622 = Metadata Cache Misses
12623 = Total number of unsuccessful lookups in the user-mode metadata cache (since service startup).
12624 = Metadata Cache Hits %
12625 = The ratio of user-mode metadata cache hits to total cache requests (since service startup).
12628 = Metadata Cache Flushes
12629 = The number of user-mode metadata cache flushes (since service startup).
12630 = Total Flushed Metadata
12631 = Total Flushed Metadata is the number of Metadata information blocks that have been removed from the user-mode cache (since service startup).
12632 = Kernel: Current URIs Cached
12633 = URI information blocks currently cached by the kernel.
12634 = Kernel: Total URIs Cached
12635 = Total number of URI information blocks added to the kernel cache (since service startup).
12636 = Kernel: URI Cache Hits
12637 = Total number of successful lookups in the kernel URI cache (since service startup).
12638 = Kernel: Uri Cache Hits/sec
12639 = The rate of kernel URI Cache hits.
12640 = Kernel: URI Cache Misses
12641 = Total number of unsuccessful lookups in the kernel URI cache (since service startup).
12642 = Kernel: URI Cache Hits %
12643 = The ratio of kernel URI cache hits to total cache requests (since service startup).
12646 = Kernel: URI Cache Flushes
12647 = Kernel URI Cache Flushes (since server startup).
12648 = Kernel: Total Flushed URIs
12649 = The number of URI information blocks that have been removed from the kernel cache (since service startup).
12650 = Output Cache Current Memory Usage
12651 = Current memory usage by output cache.
12652 = Output Cache Current Items
12653 = Number of items currently in output cache.
12654 = Output Cache Total Hits
12655 = Total number of hits in output cache.
12656 = Output Cache Total Misses
12657 = Total number of misses in output cache.
12658 = Output Cache Total Flushes
12659 = Total number of flushes in output cache.
12660 = Output Cache Current Flushed Items
12661 = Number of items that have been flushed, but are still being used by outgoing responses so are still taking up memory.
12662 = Output Cache Total Flushed Items
12663 = Total number of items flushed by cache.
12664 = Output Cache Current Hits %
12665 = Output Cache current hit ratio. Calculated as (H)/(H+M) where H and M represent Hits and Misses in previous sample interval respectively.
12910 = ASP.NET v2.0.50727
12911 = ASP.NET global performance counters
12912 = ASP.NET Apps v2.0.50727
12913 = ASP.NET application performance counters
12914 = Application Restarts
12915 = Number of times the application has been restarted during the web server's lifetime.
12916 = Applications Running
12917 = Number of currently running web applications.
12918 = Requests Disconnected
12919 = The number of requests disconnected due to communication errors or user terminated.
12920 = Request Execution Time
12921 = The number of milliseconds that it took to execute the most recent request.
12922 = Requests Rejected
12923 = The number of requests rejected because the request queue was full.
12924 = Requests Queued
12925 = The number of requests waiting to be processed.
12926 = Worker Processes Running
12927 = Number of worker processes running on the machine.
12928 = Worker Process Restarts
12929 = Number of times a worker process has restarted on the machine.
12930 = Request Wait Time
12931 = The number of milliseconds the most recent request was waiting in the queue.
12932 = State Server Sessions Active
12933 = The current number of sessions currently active.
12934 = State Server Sessions Abandoned
12935 = The number of sessions that have been explicitly abandoned.
12936 = State Server Sessions Timed Out
12937 = The number of sessions timed out.
12938 = State Server Sessions Total
12939 = The number of sessions total.
12940 = Requests Current
12941 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
12942 = Audit Success Events Raised
12943 = Number of audit successes in the application since it was started.
12944 = Audit Failure Events Raised
12945 = Number of audit failures in the application since it was started.
12946 = Error Events Raised
12947 = Number of error events raised since the application was started.
12948 = Request Error Events Raised
12949 = Number of runtime error events raised since the application was started.
12950 = Infrastructure Error Events Raised
12951 = Number of HTTP error events raised since the application was started.
12952 = Anonymous Requests
12953 = Number of requests utilizing anonymous authentication.
12954 = Anonymous Requests/Sec
12955 = Number of Authentication Anonymous Requests/Sec
12956 = Cache Total Entries
12957 = Total number of entries within the cache (both internal and user added)
12958 = Cache Total Turnover Rate
12959 = Number of additions and removals to the total cache per second.
12960 = Cache Total Hits
12961 = Total number of hits from the cache.
12962 = Cache Total Misses
12963 = Total number of cache misses.
12964 = Cache Total Hit Ratio
12965 = Ratio of hits from all cache calls.
12966 = Cache Total Hit Ratio Base
12967 = Cache Total Hit Ratio Base
12968 = Cache API Entries
12969 = Total number of entries within the cache added by the user.
12970 = Cache API Turnover Rate
12971 = Number of additions and removals to the API cache per second.
12972 = Cache API Hits
12973 = Number of cache hits from user code.
12974 = Cache API Misses
12975 = Number of cache misses called from user code.
12976 = Cache API Hit Ratio
12977 = Ratio of hits called from user code.
12978 = Cache API Hit Ratio Base
12979 = Cache API Hit Ratio Base
12980 = Output Cache Entries
12981 = Current number of entries in the output cache.
12982 = Output Cache Turnover Rate
12983 = Number of additions and removals to the output cache per second.
12984 = Output Cache Hits
12985 = Total number of output cacheable requests served from the output cache.
12986 = Output Cache Misses
12987 = Total number of output cacheable requests not served from the output cache.
12988 = Output Cache Hit Ratio
12989 = Ratio of hits to requests for output cacheable requests.
12990 = Output Cache Hit Ratio Base
12991 = Output Cache Hit Ratio Base
12992 = Compilations Total
12993 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
12994 = Debugging Requests
12995 = Number of debugging requests processed.
12996 = Errors During Preprocessing
12997 = Number of errors that have occurred during parsing and configuration.
12998 = Errors During Compilation
12999 = Number of errors that have occurred during compilation.
13000 = Errors During Execution
13001 = Number of errors that have occurred during the processing of a request.
13002 = Errors Unhandled During Execution
13003 = Number of errors not handled by user code, but by the default error handler.
13004 = Errors Unhandled During Execution/Sec
13005 = Rate of unhandled errors.
13006 = Errors Total
13007 = Total number of errors occurred.
13008 = Errors Total/Sec
13009 = Rate of errors occurred.
13010 = Pipeline Instance Count
13011 = Number of active pipeline instances.
13012 = Request Bytes In Total
13013 = The total size, in bytes, of all requests.
13014 = Request Bytes Out Total
13015 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
13016 = Requests Executing
13017 = The number of requests currently executing.
13018 = Requests Failed
13019 = Total number of failed requests.
13020 = Requests Not Found
13021 = The number of requests for resources that were not found.
13022 = Requests Not Authorized
13023 = Number of requests failed due to unauthorized access.
13024 = Requests In Application Queue
13025 = The number of requests in the application request queue.
13026 = Requests Timed Out
13027 = The number of requests that timed out.
13028 = Requests Succeeded
13029 = The number of requests that executed successfully.
13030 = Requests Total
13031 = The total number of requests since the application was started.
13032 = Requests/Sec
13033 = The number of requests executed per second.
13034 = Sessions Active
13035 = The current number of sessions currently active.
13036 = Sessions Abandoned
13037 = The number of sessions that have been explicitly abandoned.
13038 = Sessions Timed Out
13039 = The number of sessions timed out.
13040 = Sessions Total
13041 = Total number of sessions since the application was started.
13042 = Transactions Aborted
13043 = The number of transactions aborted.
13044 = Transactions Committed
13045 = The number of transactions committed.
13046 = Transactions Pending
13047 = Number of transactions in progress.
13048 = Transactions Total
13049 = The total number of transactions since the application was started.
13050 = Transactions/Sec
13051 = Transactions started per second.
13052 = Session State Server connections total
13053 = The total number of connections to the State Server used by session state.
13054 = Session SQL Server connections total
13055 = The total number of connections to the SQL Server used by session state.
13056 = Events Raised
13057 = Total number of instrumentation events raised since the application was started.
13058 = Events Raised/Sec
13059 = Total number of instrumentation events per second.
13060 = Application Lifetime Events
13061 = Number of application events raised since the application was started.
13062 = Application Lifetime Events/Sec
13063 = Number of application events raised per second.
13064 = Error Events Raised
13065 = Number of error events raised since the application was started.
13066 = Error Events Raised/Sec
13067 = Number of error events per second.
13068 = Request Error Events Raised
13069 = Number of runtime error events raised since the application was started.
13070 = Request Error Events Raised/Sec
13071 = Number of runtime error events per second.
13072 = Infrastructure Error Events Raised
13073 = Number of HTTP error events raised since the application was started.
13074 = Infrastructure Error Events Raised/Sec
13075 = Number of HTTP error events raised per second.
13076 = Request Events Raised
13077 = Number of request events raised since the application was started
13078 = Request Events Raised/Sec
13079 = Number of request events raised per second.
13080 = Audit Success Events Raised
13081 = Number of audit successes in the application since it was started.
13082 = Audit Failure Events Raised
13083 = Number of audit failures in the application since it was started.
13084 = Membership Authentication Success
13085 = Number of successful membership credential validations since the application was started.
13086 = Membership Authentication Failure
13087 = Number of failed membership credential validations since the application was started.
13088 = Forms Authentication Success
13089 = Number of successful forms authentication ticket validations since the application was started.
13090 = Forms Authentication Failure
13091 = Number of failed forms authentication ticket validations since the application was started.
13092 = Viewstate MAC Validation Failure
13093 = Number of viewstate MAC validations that failed since the application was started.
13094 = Request Execution Time
13095 = The number of milliseconds that it took to execute the most recent request.
13096 = Requests Disconnected
13097 = The number of requests disconnected due to communication errors or user terminated.
13098 = Requests Rejected
13099 = The number of requests rejected because the application request queue was full.
13100 = Request Wait Time
13101 = The number of milliseconds the most recent request was waiting in the queue.
13102 = Cache % Machine Memory Limit Used
13103 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13104 = Cache % Machine Memory Limit Used Base
13105 = Cache % Machine Memory Limit Used Base
13106 = Cache % Process Memory Limit Used
13107 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13108 = Cache % Process Memory Limit Used Base
13109 = Cache % Process Memory Limit Used Base
13110 = Cache Total Trims
13111 = Total number of entries forcibly removed from the cache due to memory pressure.
13112 = Cache API Trims
13113 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
13114 = Output Cache Trims
13115 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.
13116 = ASP.NET v2.0.50727
13117 = ASP.NET global performance counters
13118 = ASP.NET Apps v2.0.50727
13119 = ASP.NET application performance counters
13120 = Application Restarts
13121 = Number of times the application has been restarted during the web server's lifetime.
13122 = Applications Running
13123 = Number of currently running web applications.
13124 = Requests Disconnected
13125 = The number of requests disconnected due to communication errors or user terminated.
13126 = Request Execution Time
13127 = The number of milliseconds that it took to execute the most recent request.
13128 = Requests Rejected
13129 = The number of requests rejected because the request queue was full.
13130 = Requests Queued
13131 = The number of requests waiting to be processed.
13132 = Worker Processes Running
13133 = Number of worker processes running on the machine.
13134 = Worker Process Restarts
13135 = Number of times a worker process has restarted on the machine.
13136 = Request Wait Time
13137 = The number of milliseconds the most recent request was waiting in the queue.
13138 = State Server Sessions Active
13139 = The current number of sessions currently active.
13140 = State Server Sessions Abandoned
13141 = The number of sessions that have been explicitly abandoned.
13142 = State Server Sessions Timed Out
13143 = The number of sessions timed out.
13144 = State Server Sessions Total
13145 = The number of sessions total.
13146 = Requests Current
13147 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
13148 = Audit Success Events Raised
13149 = Number of audit successes in the application since it was started.
13150 = Audit Failure Events Raised
13151 = Number of audit failures in the application since it was started.
13152 = Error Events Raised
13153 = Number of error events raised since the application was started.
13154 = Request Error Events Raised
13155 = Number of runtime error events raised since the application was started.
13156 = Infrastructure Error Events Raised
13157 = Number of HTTP error events raised since the application was started.
13158 = Anonymous Requests
13159 = Number of requests utilizing anonymous authentication.
13160 = Anonymous Requests/Sec
13161 = Number of Authentication Anonymous Requests/Sec
13162 = Cache Total Entries
13163 = Total number of entries within the cache (both internal and user added)
13164 = Cache Total Turnover Rate
13165 = Number of additions and removals to the total cache per second.
13166 = Cache Total Hits
13167 = Total number of hits from the cache.
13168 = Cache Total Misses
13169 = Total number of cache misses.
13170 = Cache Total Hit Ratio
13171 = Ratio of hits from all cache calls.
13172 = Cache Total Hit Ratio Base
13173 = Cache Total Hit Ratio Base
13174 = Cache API Entries
13175 = Total number of entries within the cache added by the user.
13176 = Cache API Turnover Rate
13177 = Number of additions and removals to the API cache per second.
13178 = Cache API Hits
13179 = Number of cache hits from user code.
13180 = Cache API Misses
13181 = Number of cache misses called from user code.
13182 = Cache API Hit Ratio
13183 = Ratio of hits called from user code.
13184 = Cache API Hit Ratio Base
13185 = Cache API Hit Ratio Base
13186 = Output Cache Entries
13187 = Current number of entries in the output cache.
13188 = Output Cache Turnover Rate
13189 = Number of additions and removals to the output cache per second.
13190 = Output Cache Hits
13191 = Total number of output cacheable requests served from the output cache.
13192 = Output Cache Misses
13193 = Total number of output cacheable requests not served from the output cache.
13194 = Output Cache Hit Ratio
13195 = Ratio of hits to requests for output cacheable requests.
13196 = Output Cache Hit Ratio Base
13197 = Output Cache Hit Ratio Base
13198 = Compilations Total
13199 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
13200 = Debugging Requests
13201 = Number of debugging requests processed.
13202 = Errors During Preprocessing
13203 = Number of errors that have occurred during parsing and configuration.
13204 = Errors During Compilation
13205 = Number of errors that have occurred during compilation.
13206 = Errors During Execution
13207 = Number of errors that have occurred during the processing of a request.
13208 = Errors Unhandled During Execution
13209 = Number of errors not handled by user code, but by the default error handler.
13210 = Errors Unhandled During Execution/Sec
13211 = Rate of unhandled errors.
13212 = Errors Total
13213 = Total number of errors occurred.
13214 = Errors Total/Sec
13215 = Rate of errors occurred.
13216 = Pipeline Instance Count
13217 = Number of active pipeline instances.
13218 = Request Bytes In Total
13219 = The total size, in bytes, of all requests.
13220 = Request Bytes Out Total
13221 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
13222 = Requests Executing
13223 = The number of requests currently executing.
13224 = Requests Failed
13225 = Total number of failed requests.
13226 = Requests Not Found
13227 = The number of requests for resources that were not found.
13228 = Requests Not Authorized
13229 = Number of requests failed due to unauthorized access.
13230 = Requests In Application Queue
13231 = The number of requests in the application request queue.
13232 = Requests Timed Out
13233 = The number of requests that timed out.
13234 = Requests Succeeded
13235 = The number of requests that executed successfully.
13236 = Requests Total
13237 = The total number of requests since the application was started.
13238 = Requests/Sec
13239 = The number of requests executed per second.
13240 = Sessions Active
13241 = The current number of sessions currently active.
13242 = Sessions Abandoned
13243 = The number of sessions that have been explicitly abandoned.
13244 = Sessions Timed Out
13245 = The number of sessions timed out.
13246 = Sessions Total
13247 = Total number of sessions since the application was started.
13248 = Transactions Aborted
13249 = The number of transactions aborted.
13250 = Transactions Committed
13251 = The number of transactions committed.
13252 = Transactions Pending
13253 = Number of transactions in progress.
13254 = Transactions Total
13255 = The total number of transactions since the application was started.
13256 = Transactions/Sec
13257 = Transactions started per second.
13258 = Session State Server connections total
13259 = The total number of connections to the State Server used by session state.
13260 = Session SQL Server connections total
13261 = The total number of connections to the SQL Server used by session state.
13262 = Events Raised
13263 = Total number of instrumentation events raised since the application was started.
13264 = Events Raised/Sec
13265 = Total number of instrumentation events per second.
13266 = Application Lifetime Events
13267 = Number of application events raised since the application was started.
13268 = Application Lifetime Events/Sec
13269 = Number of application events raised per second.
13270 = Error Events Raised
13271 = Number of error events raised since the application was started.
13272 = Error Events Raised/Sec
13273 = Number of error events per second.
13274 = Request Error Events Raised
13275 = Number of runtime error events raised since the application was started.
13276 = Request Error Events Raised/Sec
13277 = Number of runtime error events per second.
13278 = Infrastructure Error Events Raised
13279 = Number of HTTP error events raised since the application was started.
13280 = Infrastructure Error Events Raised/Sec
13281 = Number of HTTP error events raised per second.
13282 = Request Events Raised
13283 = Number of request events raised since the application was started
13284 = Request Events Raised/Sec
13285 = Number of request events raised per second.
13286 = Audit Success Events Raised
13287 = Number of audit successes in the application since it was started.
13288 = Audit Failure Events Raised
13289 = Number of audit failures in the application since it was started.
13290 = Membership Authentication Success
13291 = Number of successful membership credential validations since the application was started.
13292 = Membership Authentication Failure
13293 = Number of failed membership credential validations since the application was started.
13294 = Forms Authentication Success
13295 = Number of successful forms authentication ticket validations since the application was started.
13296 = Forms Authentication Failure
13297 = Number of failed forms authentication ticket validations since the application was started.
13298 = Viewstate MAC Validation Failure
13299 = Number of viewstate MAC validations that failed since the application was started.
13300 = Request Execution Time
13301 = The number of milliseconds that it took to execute the most recent request.
13302 = Requests Disconnected
13303 = The number of requests disconnected due to communication errors or user terminated.
13304 = Requests Rejected
13305 = The number of requests rejected because the application request queue was full.
13306 = Request Wait Time
13307 = The number of milliseconds the most recent request was waiting in the queue.
13308 = Cache % Machine Memory Limit Used
13309 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13310 = Cache % Machine Memory Limit Used Base
13311 = Cache % Machine Memory Limit Used Base
13312 = Cache % Process Memory Limit Used
13313 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13314 = Cache % Process Memory Limit Used Base
13315 = Cache % Process Memory Limit Used Base
13316 = Cache Total Trims
13317 = Total number of entries forcibly removed from the cache due to memory pressure.
13318 = Cache API Trims
13319 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
13320 = Output Cache Trims
13321 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.
13322 = ASP.NET
13323 = ASP.NET global performance counters
13324 = ASP.NET Applications
13325 = ASP.NET application performance counters
13326 = Application Restarts
13327 = Number of times the application has been restarted during the web server's lifetime.
13328 = Applications Running
13329 = Number of currently running web applications.
13330 = Requests Disconnected
13331 = The number of requests disconnected due to communication errors or user terminated.
13332 = Request Execution Time
13333 = The number of milliseconds that it took to execute the most recent request.
13334 = Requests Rejected
13335 = The number of requests rejected because the request queue was full.
13336 = Requests Queued
13337 = The number of requests waiting to be processed.
13338 = Worker Processes Running
13339 = Number of worker processes running on the machine.
13340 = Worker Process Restarts
13341 = Number of times a worker process has restarted on the machine.
13342 = Request Wait Time
13343 = The number of milliseconds the most recent request was waiting in the queue.
13344 = State Server Sessions Active
13345 = The current number of sessions currently active.
13346 = State Server Sessions Abandoned
13347 = The number of sessions that have been explicitly abandoned.
13348 = State Server Sessions Timed Out
13349 = The number of sessions timed out.
13350 = State Server Sessions Total
13351 = The number of sessions total.
13352 = Requests Current
13353 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
13354 = Audit Success Events Raised
13355 = Number of audit successes in the application since it was started.
13356 = Audit Failure Events Raised
13357 = Number of audit failures in the application since it was started.
13358 = Error Events Raised
13359 = Number of error events raised since the application was started.
13360 = Request Error Events Raised
13361 = Number of runtime error events raised since the application was started.
13362 = Infrastructure Error Events Raised
13363 = Number of HTTP error events raised since the application was started.
13364 = Anonymous Requests
13365 = Number of requests utilizing anonymous authentication.
13366 = Anonymous Requests/Sec
13367 = Number of Authentication Anonymous Requests/Sec
13368 = Cache Total Entries
13369 = Total number of entries within the cache (both internal and user added)
13370 = Cache Total Turnover Rate
13371 = Number of additions and removals to the total cache per second.
13372 = Cache Total Hits
13373 = Total number of hits from the cache.
13374 = Cache Total Misses
13375 = Total number of cache misses.
13376 = Cache Total Hit Ratio
13377 = Ratio of hits from all cache calls.
13378 = Cache Total Hit Ratio Base
13379 = Cache Total Hit Ratio Base
13380 = Cache API Entries
13381 = Total number of entries within the cache added by the user.
13382 = Cache API Turnover Rate
13383 = Number of additions and removals to the API cache per second.
13384 = Cache API Hits
13385 = Number of cache hits from user code.
13386 = Cache API Misses
13387 = Number of cache misses called from user code.
13388 = Cache API Hit Ratio
13389 = Ratio of hits called from user code.
13390 = Cache API Hit Ratio Base
13391 = Cache API Hit Ratio Base
13392 = Output Cache Entries
13393 = Current number of entries in the output cache.
13394 = Output Cache Turnover Rate
13395 = Number of additions and removals to the output cache per second.
13396 = Output Cache Hits
13397 = Total number of output cacheable requests served from the output cache.
13398 = Output Cache Misses
13399 = Total number of output cacheable requests not served from the output cache.
13400 = Output Cache Hit Ratio
13401 = Ratio of hits to requests for output cacheable requests.
13402 = Output Cache Hit Ratio Base
13403 = Output Cache Hit Ratio Base
13404 = Compilations Total
13405 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
13406 = Debugging Requests
13407 = Number of debugging requests processed.
13408 = Errors During Preprocessing
13409 = Number of errors that have occurred during parsing and configuration.
13410 = Errors During Compilation
13411 = Number of errors that have occurred during compilation.
13412 = Errors During Execution
13413 = Number of errors that have occurred during the processing of a request.
13414 = Errors Unhandled During Execution
13415 = Number of errors not handled by user code, but by the default error handler.
13416 = Errors Unhandled During Execution/Sec
13417 = Rate of unhandled errors.
13418 = Errors Total
13419 = Total number of errors occurred.
13420 = Errors Total/Sec
13421 = Rate of errors occurred.
13422 = Pipeline Instance Count
13423 = Number of active pipeline instances.
13424 = Request Bytes In Total
13425 = The total size, in bytes, of all requests.
13426 = Request Bytes Out Total
13427 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
13428 = Requests Executing
13429 = The number of requests currently executing.
13430 = Requests Failed
13431 = Total number of failed requests.
13432 = Requests Not Found
13433 = The number of requests for resources that were not found.
13434 = Requests Not Authorized
13435 = Number of requests failed due to unauthorized access.
13436 = Requests In Application Queue
13437 = The number of requests in the application request queue.
13438 = Requests Timed Out
13439 = The number of requests that timed out.
13440 = Requests Succeeded
13441 = The number of requests that executed successfully.
13442 = Requests Total
13443 = The total number of requests since the application was started.
13444 = Requests/Sec
13445 = The number of requests executed per second.
13446 = Sessions Active
13447 = The current number of sessions currently active.
13448 = Sessions Abandoned
13449 = The number of sessions that have been explicitly abandoned.
13450 = Sessions Timed Out
13451 = The number of sessions timed out.
13452 = Sessions Total
13453 = Total number of sessions since the application was started.
13454 = Transactions Aborted
13455 = The number of transactions aborted.
13456 = Transactions Committed
13457 = The number of transactions committed.
13458 = Transactions Pending
13459 = Number of transactions in progress.
13460 = Transactions Total
13461 = The total number of transactions since the application was started.
13462 = Transactions/Sec
13463 = Transactions started per second.
13464 = Session State Server connections total
13465 = The total number of connections to the State Server used by session state.
13466 = Session SQL Server connections total
13467 = The total number of connections to the SQL Server used by session state.
13468 = Events Raised
13469 = Total number of instrumentation events raised since the application was started.
13470 = Events Raised/Sec
13471 = Total number of instrumentation events per second.
13472 = Application Lifetime Events
13473 = Number of application events raised since the application was started.
13474 = Application Lifetime Events/Sec
13475 = Number of application events raised per second.
13476 = Error Events Raised
13477 = Number of error events raised since the application was started.
13478 = Error Events Raised/Sec
13479 = Number of error events per second.
13480 = Request Error Events Raised
13481 = Number of runtime error events raised since the application was started.
13482 = Request Error Events Raised/Sec
13483 = Number of runtime error events per second.
13484 = Infrastructure Error Events Raised
13485 = Number of HTTP error events raised since the application was started.
13486 = Infrastructure Error Events Raised/Sec
13487 = Number of HTTP error events raised per second.
13488 = Request Events Raised
13489 = Number of request events raised since the application was started
13490 = Request Events Raised/Sec
13491 = Number of request events raised per second.
13492 = Audit Success Events Raised
13493 = Number of audit successes in the application since it was started.
13494 = Audit Failure Events Raised
13495 = Number of audit failures in the application since it was started.
13496 = Membership Authentication Success
13497 = Number of successful membership credential validations since the application was started.
13498 = Membership Authentication Failure
13499 = Number of failed membership credential validations since the application was started.
13500 = Forms Authentication Success
13501 = Number of successful forms authentication ticket validations since the application was started.
13502 = Forms Authentication Failure
13503 = Number of failed forms authentication ticket validations since the application was started.
13504 = Viewstate MAC Validation Failure
13505 = Number of viewstate MAC validations that failed since the application was started.
13506 = Request Execution Time
13507 = The number of milliseconds that it took to execute the most recent request.
13508 = Requests Disconnected
13509 = The number of requests disconnected due to communication errors or user terminated.
13510 = Requests Rejected
13511 = The number of requests rejected because the application request queue was full.
13512 = Request Wait Time
13513 = The number of milliseconds the most recent request was waiting in the queue.
13514 = Cache % Machine Memory Limit Used
13515 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13516 = Cache % Machine Memory Limit Used Base
13517 = Cache % Machine Memory Limit Used Base
13518 = Cache % Process Memory Limit Used
13519 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13520 = Cache % Process Memory Limit Used Base
13521 = Cache % Process Memory Limit Used Base
13522 = Cache Total Trims
13523 = Total number of entries forcibly removed from the cache due to memory pressure.
13524 = Cache API Trims
13525 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
13526 = Output Cache Trims
13527 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.

[PerfStrings_0804]
1 = 1847
2 = System
3 = 该系统性能对象包含应用于计算机上多个组件处理器实例的计数器。
4 = Memory
5 = Memory performance object 由描述计算机上的物理和虚拟内存行为的计数器组成。物理内存指计算机上的随机存取存储器的数量。虚拟内存由物理内存和磁盘上的空间组成。许多内存计数器监视页面调度(指磁盘与物理内存之的代码和数据页的移动)。过多的页面调度(内存不足的一种表现)可引起拖延，会影响整个系统处理效率。
6 = % Processor Time
7 = % Processor Time 指处理器用来执行非闲置线程时间的百分比。计算方法是，度量处理器用来执行空闲线程的时间，然后用 100% 减去该值。(每个处理器有一个空闲线程，该线程在没有其他线程可以运行时消耗周期)。此计数器是处理器活动的主要指示器，显示在采样间隔期间所观察的繁忙时间平均百分比。应注意，对处理器是否空闲的计算是在系统时钟的内部采样间隔期间(10ms)执行的。考虑到现在的处理器速度非常快，因此，在处理器可能会用大量时间为系统时钟采样间隔之间的线程提供服务时，% Processor Time 会低估处理器利用率。当恰好进行采样后即向计时器发出信号时，更可能对应用程序做出不准确地度量，基于工作负荷的计时器应用程序是一个这样的示例。
9 = % Total DPC Time 指所有处理器用于接收和为延缓的过程调用(DPCs) 提供服务的平均时间的百分比。(DPC 指以低于标准间隔优先权运行的那些间隔)。它是指在该计算机上的所有处理器的 Processor: % DPC Time 的总数。由于 DPS 是以特权模式执行， System: % Total DPC Time 为 System: % Total Privileged Time 的组件。DPC 是分别计数的并且不是间隔计算的组件。这个计数值将平均忙时作为实例时间的一部分以百分率显示。
10 = File Read Operations/sec
11 = File Read Operations/sec 指对计算机上的所有设备的文件系统读取请求(包括请求从文件系统缓存中的读取)的综合速率。它是用读取数目来衡量的。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
12 = File Write Operations/sec
13 = File Write Operations/sec 指计算机上所有设备的文件系统写入请求(包括请求从文件系统缓存中的写入)的综合速率。用写入数来计算。这个计数器显示用上两个实例中观察到的值之间的差除于实例间隔的持续时间所得的值。
14 = File Control Operations/sec
15 = File Control Operations/sec 指那些既不是读取也不是写入的文件系统操作(如文件系统控制请求和对有关设备性能和状态信息的请求)的综合速率。这是 System: File Data Operations/sec 的逆转，用每秒操作数来衡量。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
16 = File Read Bytes/sec
17 = File Read Bytes/sec 指满足计算机上所有设备文件系统读取请求(包括从文件系统缓存的读取)的读取字节的总速率。它是用每秒字节数来衡量的。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
18 = File Write Bytes/sec
19 = File Write Bytes/sec 指满足计算机上所有设备的文件系统写入请求(包括写入文件系统缓存)的写入字节的总速率。它是用每秒字节数来衡量的。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
20 = File Control Bytes/sec
21 = File Control Bytes/sec 指在所有既不是读取也不是写入的文件系统操作(包括系统控制请求和对有关设备性能和状态信息的请求)中传输字节的总速率。它是用每秒字节数来衡量的。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
23 = % Total Interrupt Time 指所有处理器在采样间隔内用于接收硬件中断并为其提供服务的平均时间的百分比；该值间接指示生成中断的设备的活动。它是用计算机上的所有处理器的 Processor: % Interrupt Time 的总和除以处理器的数目得出的。DPC 是分开计算的，不作为中断计算的一部分。此值是生成中断的设备活动(如系统计时器、鼠标、磁盘驱动程序、数据通讯线、网络接口卡和其他外围设备)的间接指示符。
24 = Available Bytes
25 = Available Bytes 是指以字节表示的物理内存数量。此内存能立刻分配给一个进程或系统使用。它等于分配给待机(缓存的)、空闲和零分页列表内存的总和。要获得内存管理器的详细解释，请参阅 MSDN 和/或 Windows Server 2003 Resource Kit 里的系统性能和疑难解答指南章节。
26 = Committed Bytes
27 = Committed Byte 是指以字节表示的确认虚拟内存。确认内存磁盘页面文件上保留了空间的物理内存。每个物理磁盘上可以有一个或一个以上的页面文件。这个计数器只显示上一回观察到的值；它不是一个平均值。
28 = Page Faults/sec
29 = Page Faults/sec 是每秒钟出错页面的平均数量。由于每个错误操作中只有一个页面出错，计算单位为每秒出错页面数量，因此这也等于页面错误操作的数量。这个计数器包括硬错误(那些需要磁盘访问的)和软错误(在物理内存的其他地方找到的错误页)。许多处理器可以在有大量软错误的情况下继续操作。但是，硬错误可以导致明显的拖延。
30 = Commit Limit
31 = Commit Limit 是指在不用扩展分页文件的情况下可以使用的虚拟内存的数量。这是用字节来计算的。确认的内存是指保留在磁盘分页文件上的物理内存。在每个逻辑磁盘上可以有一个分页内存。如果扩展分页文件，这个限量将相应增加。这个计数器只显示上一回观察到的值；而不是一个平均值。
32 = Write Copies/sec
33 = Write Copies/sec 是指使用物理内存中的其他空间复制页以满足写入的尝试而引起的页面错误速度。由于页只在写入时才复制，这是一个实用的共享数据的方式；否则需要共享该页。这个计数器在不计算每次操作时复制的页数的情况下显示复制的数量。
34 = Transition Faults/sec
35 = Transition Faults/sec is 是恢复页面解析页面错误的速度。此恢复页面正被另一个共享此页面进程使用，或在被修改的页面列表或待机列表上，或在发生页面错误时正被写入磁盘。在没有额外磁盘运行的情况下，页面已被恢复。中转错误以错误数量计算，因为每一操作只有一个页面错误，它也等于错误的页面数量。
36 = Cache Faults/sec
37 = Cache Faults/sec 指在文件系统缓存中找不到要寻找的页而需要从内存(软错误)的其他地方或从磁盘(硬错误)的其他上检索时出现的错误的速度。文件系统缓存活动是大部分应用程序 IP 操作的可靠指示器。这个计数器显示错误的次数而不管每次操作中的出错的页数。
38 = Demand Zero Faults/sec
39 = Demand Zero Faults/sec 是需要零页面以满足错误的速度。零页面和前面存储的数据被删除并被填满零的页面是 Windows 的一个安全特征，它阻止其他进程看见前一进程使用内存空间存储的数据。Windows 保存一份零页面的列表以加速此进程。此计数器显示错误的数量，它并不考虑为了满足错误而检索的页面数量。此计数器显示上两个示例的值除以实例间隔时间的差别。
40 = Pages/sec
41 = Pages/sec 是指为解决硬页错误从磁盘读取或写入磁盘的速度。这个计数器是可以显示导致系统范围延缓类型错误的主要指示器。它是 Memory\\Pages Input/sec 和 Memory\\Pages Output/sec 的总和。是用页数计算的，以便在不用做转换的情况下就可以同其他页计数如: Memory\\Page Faults/sec 做比较，这个值包括为满足错误而在文件系统缓存(通常由应用程序请求)的非缓存映射内存文件中检索的页。
42 = Page Reads/sec
43 = Page Reads/sec 是取读磁盘以解析硬页面错误的速度。它显示读取操作的数量，它并不考虑每个操作的页面数量。当一个进程引用一个虚拟内存的页面，而此虚拟内存位于工作集以外或物理内存的其他位置，并且此页面必须从磁盘检索时，就会发生硬页面错误。此计数器是引起系统范围内延迟的主要指示器。它包含读取操作以满足文件系统缓存(通常由应用程序请求)和非缓存映射内存文件的错误。比较内存的值\\Pages Reads/sec 与内存的值\\Pages Input/sec 来决定每个操作取读的平均页面数量。
44 = Processor Queue Length
45 = Processor Queue Length 是处理器队列的线程数量。与磁盘计数器不同，此计数器只显示就绪线程，而不是正在运行的线程。即使运行多处理器的计算机只有一个处理器队列。因此，如果一台计算机有几个处理器，您需要将此值除以处理工作量的处理器数量。每个处理器，不管工作量大小，如果保持 10 个以下线程的处理器队列，通常是可以接受的。
46 = Thread State
47 = Thread State 是指线程当前的状态。0 代表初始化、1 代表就绪、2 代表运行、3 代表备用、4 代表终止、5 代表等待、6 代表传输、7 代表未知。一个运行的线程表示正在使用处理器；一个备用的线程表示正要使用一个。一个就绪的线程表示想使用处理器，但是由于没有空闲处理器，该线程必须等待。一个在传输中的线程表示正在等待一个资源以便执行，比如等待自己的执行堆栈以便在磁盘上分页。由于正在等待完成一个附属操作或资源之后才能空闲，一个处于等待的线程不使用处理器。
48 = Pages Output/sec
49 = Pages Output/sec 是指为了释放物理内存空间而将页面写入磁盘的速度。只有在物理内存中更改时页面才会写回到磁盘上，因此页面可能只保留数据而不是代码。高速的页面输出可能表示内存不足。当物理内存不足时，Windows 会将页面写回到磁盘以便释放空间。这个计数器可以在不转换的情况下，显示页面数量并可以与其他页面计数进行比较。
50 = Page Writes/sec
51 = Page Writes/sec 是指为了释放物理内存空间而将页面写入磁盘的速度。只有页面还在物理内存中时所做的更改才会写入磁盘，因此这些页面可能只保留数据而不保留代码。这个计数器显示写入操作不计数每个操作中写入的页数。这个计数器显示用上两个实例中观察到的值之间的差除于实例间隔的持续时间所得的值。
52 = Browser
53 = Browser performance object 由衡量通知、枚举和其他浏览器传输率的计数器组成。
54 = Announcements Server/sec
55 = Announcements Server/sec 指在这个域中的服务器向这台服务器通告自己的速度。
56 = Pool Paged Bytes
57 = Pool Paged Bytes 指在分页池中的字节数，分页池是系统内存(操作系统使用的物理内存)中可供对象(在不处于使用时可以写入磁盘的)使用的一个区域。Memory\\Pool Paged Bytes 的计数方式与 Process\\Pool Paged Bytes 的方式不同，因此可能不等于 Process\\Pool Paged Bytes\\_Total。这个计数器仅显示上一次观察的值；而不是一个平均值。
58 = Pool Nonpaged Bytes
59 = Pool Nonpaged Bytes 指在非分页池中的字节数，非分页池是指系统内存(操作系统使用的物理内存)中可供对象(指那些在不处于使用时不可以写入磁盘上而且只要分派过就必须保留在物理内存中的对象)使用的一个区域。Memory\\Pool Nonpaged Bytes 的计数方式与 Process\\Pool Nonpaged Bytes 的计数方式不同，因此可能不等于 Pool Nonpaged Bytes\\_Total。 这个计数器仅显示上一次观察的值；而不是一个平均值。
60 = Pool Paged Allocs
61 = Pool Paged Allocs 指在分页池中分派空间的调用次数。分页池是系统内存(操作系统使用的物理内存)中可供对象(指那些在不处于使用时可以写入磁盘上的对象)使用的一个区域。它是用计算分配空间的调用次数来计算的，而不管在每个调用中分派的空间数是什么。这个计数器仅显示上一次观察的值；而不是一个平均值。
63 = Pool Paged Resident Bytes 指分页池的当前大小的字节数。分页池是指系统内存(操作系统使用的物理内存)中可供对象(指那些在不处于使用时可以写入磁盘上的对象)使用的一个区域。分页和非分页池使用的空间来自物理内存，因此如果一个池太大就会使内存空间无法进行处理。这个计数器仅显示上一次观察的值；而不是一个平均值。
64 = Pool Nonpaged Allocs
65 = Pool Nonpaged Allocs 指在非分页池中分派空间的调用数。非分页池是系统内存(操作系统使用的物理内存)中可供对象(指那些在不处于使用时不可以写入到磁盘上并且分派后必须保留在物理内存中的对象)使用的一个区域。它是用衡量分配空间的调用数来计数的，而不管在每个调用中分派的空间数是多少。这个计数器仅显示上一次观察的值；而不是一个平均值。
66 = Pool Paged Resident Bytes
67 = Bytes Total/sec 是协议从网络上接收或发送的字节的总速度，但只计算携带数据的帧(即数据包)。这是 Frame Bytes/sec 和 Datagram Bytes/sec 的总数。
68 = System Code Total Bytes
69 = System Code Total Bytes 指当前在虚拟内存中的可分页的操作系统代码的字节数。这是用来衡量在不使用时可以写入到磁盘上的操作系统使用的物理内存的数量。这个值是通过将在 Ntoskrnl.exe, Hal.dll 、启动驱动器和用 Ntldr/osloader 加载的文件系统中的字节的数相加得出的。这个计数器不包括必须保留在物理内存中并不能写入到磁盘上的代码。这个计算器仅显示上一次观察的值；而不是一个平均值。
70 = System Code Resident Bytes
71 = System Code Resident Bytes 是操作系统代码当前在物理内存的字节大小，此物理内存在未使用时可写入磁盘。此值是 Memory\\System Code Total Bytes 的组件，它还包括磁盘上的操作系统代码。 Memory\\System Code Resident Bytes (和 Memory\\System Code Total Bytes) 不包括必须留在物理内存的代码，并且不能写入磁盘。这个计数器只显示上一次观察到的值; 它不是一个平均值。
72 = System Driver Total Bytes
73 = System Driver Total Bytes 指设备驱动程序当前使用的可分页的虚拟内存的字节大小。当可分页内存不使用时可以写入磁盘。它包括物理内存(Memory\\System Driver Resident Bytes)和代码以及分页到磁盘的数据。它是 Memory\\System Code Total Bytes 的一部分。此计数器仅显示上一次观察到的值；它不是平均值。
74 = System Driver Resident Bytes
75 = System Driver Resident Bytes 指设备驱动程序当前使用的可分页的虚拟内存的字节数。它是驱动程序的工作集(物理内存区域)。这个值为 Memory\\System Driver Total Bytes (也包括可以写入磁盘的驱动程序内存)的组件。无论 System Driver Resident Bytes 还是 System Driver Total Bytes 都不可以写入磁盘。
76 = System Cache Resident Bytes
77 = System Cache Resident Bytes 是文件系统缓存可分页的操作系统代码的字节大小。此值只包括当前的物理页面，而不包括当前不是常驻的虚拟内存页面。它不等于"任务管理器"上显示的系统缓存值。因此，此值会比文件系统缓存使用的实际虚拟内存要小。此值是 Memory\\System Code Resident Bytes 的一部分，它代表当前在物理内存里的所有可分页的操作系统代码。此计数器仅显示上一次观察到的值；它不是平均值。
78 = Announcements Domain/sec
79 = Announcements Domain/sec 指域向网络通告自己的速率。
80 = Election Packets/sec
81 = Election Packets/sec 指这台工作站接收浏览器选择数据包的速率。
82 = Mailslot Writes/sec
83 = Mailslot Writes/sec 指已成功接收 mailslot 信息的速率。
84 = Server List Requests/sec
85 = Server List Requests/sec 指由这台工作站检索已处理的浏览器服务器的清单的请求速率。
86 = Cache
87 = Cache performance object 包括监督文件系统缓存(物理内存上尽可能长时间的存储最近使用过的数据以便访问该数据时不需再从磁盘上读取的那一部分内存。)的计数器。因为应用程序只使用缓存，因此该缓存可作为应用程序 I/O 操作的指示器。当有足够内存时，缓存可增大，但当内存不足时，缓存会变得太小而无法使用。
88 = Data Maps/sec
89 = Data Maps/sec 指文件系统(如 NTFS)向文件系统缓存映射一页文件以读取该文件的频率。
90 = Sync Data Maps/sec
91 = Sync Data Maps/sec 计算文件系统如 NTFS 向文件系统缓存映射一页文件以读取该文件并且如页不在主内存中时等待索取该页的频率。
92 = Async Data Maps/sec
93 = Async Data Maps/sec 指一个应用程序使用文件系统如 NTFS 向文件系统缓存映射一页文件以读取该文件，并且如果页不在主内存中时不等待索取该页的频率。
94 = Data Map Hits %
95 = Data Map Hit 指由于页面已经在物理内存中，可以不从磁盘上检索页面的情况下解析在文件系统缓存中的数据映射的百分比。
96 = Data Map Pins/sec
97 = Data Map Pins/sec 是指在文件系统缓存中的数据映射的频率，会引起在主内存中 pinning 页面，这是一个通常准备将文件写入到磁盘上的操作。当 pinned 时，不会更改一个页面在主内存中的物理地址和文件系统缓存中的虚拟地址。
98 = Pin Reads/sec
99 = Pin Reads/sec 指将数据读取到文件系统缓存以准备把数据写入回到磁盘上的频率。这种方式的页面读取是在读取完成时在内存中 pinned 的。在 pinned 时，不会更改一个页面在文件系统缓存中的物理地址。
100 = Sync Pin Reads/sec
101 = Sync Pin Reads/sec 指将数据读取到文件系统缓存以准备把数据写入回到磁盘上的频率。这种方式的页面读取在读取完成时在内存中 pinned 的。直到页面在文件系统缓存中 pinned 过之后，文件系统才会重新获得控制，特别是在如果必须访问磁盘才可检索页面的情况下。在 pinned 时，不会更改页面在文件系统缓存中的物理地址。
102 = Async Pin Reads/sec
103 = Async Pin Reads/sec 是将数据读取到文件系统缓存以准备把数据写入回到磁盘上的频率。这种方式的页面读取是在读取完成时在内存中 pinned 的。即使必须访问磁盘才可检索页面，文件系统也会立即重新获得控制。在 pinned 时，不会更改一个页面在文件系统缓存中的物理地址。
104 = Pin Read Hits %
105 = Pin Read Hit 指 pin 读取请求命中文件系统缓存的百分比，这些缓存不需要磁盘读取就能为在文件系统缓存的页面提供访问。在 pinned 时，不会更改页面在文件系统缓存中的物理地址。LAN 重定向器使用这个方式从缓存(象 LAN 服务器为小传输一样)中检索数据。这是磁盘文件系统通常使用的方式。
106 = Copy Reads/sec
107 = Copy Reads/sec 指从文件系统缓存页(需要一份从缓存到应用程序缓冲器中的数据内存副本)中读取的频率。LAN 重定向器使用这个方式从缓存(象 LAN 服务器为小传输所做那样)中检索数据。这是磁盘文件系统通常使用的方式。
108 = Sync Copy Reads/sec
109 = Sync Copy Reads/sec 指从文件系统缓存页(需要一份从缓存到应用程序缓冲器中的数据内存副本)中读取的频率。在副本操作完成之前，该文件系统不会重新获取控制，即使在必须访问磁盘才可检索页面的情况下。
110 = Async Copy Reads/sec
111 = Async Copy Reads/sec 指从文件系统缓存页(需要一份从缓存到应用程序缓冲器中的数据内存副本)中读取的频率。即使必须访问磁盘才可检索页面，该文件系统也会立即重新获得控制。
112 = Copy Read Hits %
113 = Copy Read Hits 指命中缓存的缓存复制读取百分比，既它们不需要磁盘读取就可提供在缓存中的页面访问。副本读取为文件读取操作，该操作由缓存中的一页内存复制到应用程序的缓冲器上来完成。LAN Redirector 使用这种方式从缓存中检索信息；LAN 服务器小型传输时也使用同样方式。磁盘文件系统页也使用这个方法。
114 = MDL Reads/sec
115 = MDL Reads/sec 指使用 Memory Descriptor List (MDL)访问数据的文件系统缓存读取的频率。MDL 包含与传送相关的每个页面的物理地址，因此可以使用一个“目录内存访问”(DMA)硬件设备进行复制。在做大量输出服务器的传送时，LAN 服务器采用这一方式。
116 = Sync MDL Reads/sec
117 = Sync MDL Reads/sec 是指从使用 Memory Descriptor List (MDL) 访问数据的文件系统缓存中读取的频率。MDL 包含需要传送的每个页面的物理地址，因此允许页面“目录内存访问”(DMA)。如果访问的页面不在主内存中，呼叫方会等待页面从磁盘中出错。
118 = Async MDL Reads/sec
119 = Async MDL Reads/sec 是指从使用 Memory Descriptor List (MDL)访问数据的文件系统缓存中读取的频率。MDL 包含需要传送的每个页面的物理地址，因此允许页面“目录内存访问”(DMA)。如果访问的页面不在主内存中，呼叫方不会等待页面从磁盘中出错。
120 = MDL Read Hits %
121 = MDL Read Hits 是指 Memory Descriptor List 向文件系统缓存发出的请求命中缓存的百分比，例如: 不需要磁盘访问即可为在缓存中的页面提供内存访问。
122 = Read Aheads/sec
123 = Read Aheads/sec 是指从文件系统缓存中读取的频率，缓存在该文件系统缓存中检测到对一个文件的系列访问。向前读取允许传送比应用程序请求的数据块大的数据，从而减少了每次访问的消费。
124 = Fast Reads/sec
125 = Fast Reads/sec 是指从文件系统缓存中的读取频率，该读取绕过了已安装的文件信息系统并从缓存中直接检索数据。通常，文件 I/O 请求会激活相应的文件系统，从一个文件中检索数据。但是如果数据在缓存中，这个路径允许在没有文件系统的参与下直接从缓存中检索数据。即使数据不在缓存中，也避免了激活一次文件系统。
126 = Sync Fast Reads/sec
127 = Sync Fast Reads/sec 是指从文件系统缓存中的读取频率，该读取绕过了已安装的文件信息系统并从缓存中直接检索数据。通常，文件 I/O 请求会激活相应的文件系统，从一个文件中检索数据，但是如果数据在缓存中，这个路径允许在没有文件系统的参与下直接从缓存中检索数据。即使数据不在缓存中，也避免了激活一次文件系统。如果数据不在缓存中，该请求(应用程序调用)会一直等到从磁盘上检索到数据。
128 = Async Fast Reads/sec
129 = Async Fast Reads/sec 是指从文件系统缓存中的读取频率，该读取绕过已安装的文件信息系统并从缓存中直接检索数据。通常，文件 I/O 请求会激活相应的文件系统，从一个文件中检索数据，但是如果数据在缓存中，这个路径允许(在没有文件系统的参与下)直接从缓存中检索数据。即使数据在缓存中，也避免了激活一次文件系统。如果数据不在缓存中，该请求(应用程序调用)不会一直等到从磁盘上检索到数据，而会马上获得控制。
130 = Fast Read Resource Misses/sec
131 = Fast Read Resource Misses/sec 指由于缺乏有效资源以满足请求而需要的缓存遗漏频率。
132 = Fast Read Not Possibles/sec
133 = Fast Read Not Possibles/sec 指应用程序界面(API)性能呼叫绕过文件系统以得到在不激活文件系统的情况下无法获得的文件系统缓存中的数据所做的尝试的频率。
134 = Lazy Write Flushes/sec
135 = Lazy Write Flushes/sec 指 Lazy Writer 线程写入磁盘的频率。Lazy Writer 是指页在内存中更改之后更新磁盘的过程，该过程可使更改文件的应用程序不用等待磁盘完成写入就可继续进行。每次写入操作可传送不止一页。
136 = Lazy Write Pages/sec
137 = Lazy Write Pages/sec 指 Lazy Writer 线程写入磁盘的频率。Lazy Writer 指页在内存中更改之后更新磁盘的过程，该过程可使更改文件的应用程序不用等待磁盘完成写入就可继续进行。每次单一一个磁盘写入操作可传送不止一页。
138 = Data Flushes/sec
139 = Data Flushes/sec 指由于清仓请求的结果或为满足写入文件的写入请求，文件系统缓存将其所有内容清仓到磁盘上的速率。每次清仓操作可以传送不止一页。
140 = Data Flush Pages/sec
141 = Data Flush Pages/sec 指由于一个清仓请求的结果或为满足一个写入文件的写入请求，文件系统缓存清仓到磁盘上的页数。每次清仓操作可以传送不止一页。
142 = % User Time
143 = % User Time 指处理器处于用户模式的时间百分比。用户模式是为应用程序、环境分系统和整数分系统设计的有限处理模式。另一个模式为特权模式，它是为操作系统组件设计的并且允许直接访问硬件和所有内存。操作系统将应用程序线程转换成特权模式以访问操作系统服务。这个计数值将平均忙时作为示例时间的一部分显示。
144 = % Privileged Time
145 = % Privileged Time 是在特权模式下进程线程执行代码所花时间的百分比。当调用 Windows 系统服务时，此服务经常在特权模式运行，以便获取对系统专有数据的访问。在用户模式执行的线程无法访问这些数据。 对系统的调用可以是直接的(explicit)或间接的(implicit)，例如页面错误或中断。不像某些早期的操作系统，Windows 除了使用用户和特权模式的传统保护模式之外，还使用处理边界作为分系统保护。某些由 Windows 为您的应用程序所做的操作除了出现在处理的特权时间内，还可能在其他子系统处理出现。
146 = Context Switches/sec
147 = Context Switches/sec 指计算机上的所有处理器全都从一个线程切换到另一个线程的综合速率。当正在运行的线程自动放弃处理器时出现上下文开关，由一个有更高优先就绪的线程占先或在用户模式和特权(内核)模式之间切换以使用执行或分系统服务。它是在计算机上的所有处理器上运行的所有线程的 Thread\\Context Switches/sec的总数，并且用切换次数来计算。在系统和线程对象上有上下文开关计数器。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
148 = Interrupts/sec
149 = Interrupts/sec 是处理器接收和处理硬件中断的平均速度，单位为每秒事例数。这不包括分开计数的延迟的进程调用(DPCs)。这个值说明生成中断的设备(如系统时钟、鼠标、磁盘驱动器、数据通讯线、网络接口卡和其他外缘设备)的活动。这些设备通常在完成任务或需要注意时中断处理器。正常线程执行因此被中断。系统时钟通常每 10 毫秒中断处理器一次，创建中断活动的背景。这个计数值显示用上两个实例中观察到的值之间的差除于实例间隔的持续时间所得的值。
150 = System Calls/sec
151 = System Calls/sec 指运行在计算机上的所有进程调用操作系统服务例程的综合速率。这些例程执行计算机上所有的基本调度和活动同步，并提供对非图形设备、内存管理和命名空间管理的访问。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
152 = Level 1 TLB Fills/sec
153 = Level 1 TLB Fills/sec 指要参阅 Page Table Entry (PTE) 没有在 Translation Lookaside Buffer (TLB) 中的内存时发生的错误频率。在某些计算机上这个错误是由软件将 PTE 加载到TLB 中的解决的，并且这个计数值为递增的。
154 = Level 2 TLB Fills/sec
155 = Level 2 TLB Fills/sec 指当要放到 Page Table Entry (PTE) 中的参阅没有在 Translation Lookaside Buffer (TLB) 中或包含 PTE 的页中时发生的错误频率。在某些计算机上这个错误是由将 PTE 加载到 TLB 中的软件管理的，并且这个计数值为递增的。
156 = Enumerations Server/sec
157 = % User Time 指处理线程用于执行使用用户模式的代码的时间的百分比。应用程序、环境分系统和集合分系统是以用户模式执行的。Windows 的可执行程序、内核和设备驱动程序不会被以用户模式执行的代码损坏。不像某些早期的操作系统，Windows 除了使用用户和特权模式的传统式保护模式之外，还使用处理边界作为分系统保护。某些由 Windows 为您的应用程序所做的操作除了出现在处理的特权时间内，还可能在其他子系统处理出现。
158 = Enumerations Domain/sec
159 = % Privileged Time 是在特权模式下处理线程执行代码所花时间的百分比。当调用 Windows 系统服务时，此服务经常在特权模式运行，以便获取对系统专有数据的访问。在用户模式执行的线程无法访问这些数据。对系统的调用可以是直接的(explicit)或间接的(implicit)，例如页面错误或间隔。不像某些早期的操作系统，Windows 除了使用用户和特权模式的传统保护模式之外，还使用进程边界作为分系统保护。某些由 Windows 为您的应用程序所做的操作除了出现在进程的特权时间内，还可能在其他子系统进程出现。
160 = Enumerations Other/sec
161 = Enumerations Server/sec 指服务器浏览这台工作站已经过处理的请求的速率。
162 = Missed Server Announcements
163 = Enumerations Domain/sec 指域浏览这台工作站已经过处理的请求的速率。
164 = Missed Mailslot Datagrams
165 = Enumerations Other/sec 指浏览这台工作站已经过处理的非域或服务器浏览请求的请求的速率。
166 = Missed Server List Requests
167 = Missed Server Announcement 指由于配置或分配限制而丢失的服务器宣告数。
168 = Server Announce Allocations Failed/sec
169 = Missed Mailslot Datagram 指由于配置或分配限制而放弃的 Mailslot Datagram 数。
170 = Mailslot Allocations Failed
171 = Missed Server List Requests 指这台工作站接收的、但无法处理的请求检索浏览服务器列表的次数。
172 = Virtual Bytes Peak
173 = Virtual Bytes Peak 指在任何时间内该处理使用的虚拟地址空间字节的最大数。使用虚拟地址空间不一定是指对磁盘或主内存页的相应的使用。但是虚拟空间是有限的，也可能会限制处理加载数据库的能力。
174 = Virtual Bytes
175 = Virtual Bytes 指处理使用的虚拟地址空间的以字节数显示的当前大小。使用虚拟地址空间不一定是指对磁盘或主内存页的相应的使用。虚拟空间是有限的，可能会限制处理加载数据库的能力。
177 = Page Faults/sec 指在这个进程中执行线程造成的页面错误出现的速度。当线程引用了不在主内存工作集中的虚拟内存页即会出现 Page Fault。如果它在备用表中(即已经在主内存中)或另一个共享页的处理正在使用它，就会引起无法从磁盘中获取页。
178 = Working Set Peak
179 = Working Set Peak 指在任何时间这个在处理的 Working Set 的最大字节数。Working Set 是在处理中被线程最近触到的那个内存页集。如果计算机上的可用内存处于阈值以上，即使页不在使用中，也会留在一个处理的 Working Set 中。当可用内存降到阈值之下，将从 Working Set 中删除页。如果需要页时，它会在离开主内存前软故障返回到 Working Set 中。
180 = Working Set
181 = Working Set 指这个处理的 Working Set 中的当前字节数。Working Set 是在处理中被线程最近触到的那个内存页集。如果计算机上的可用内存处于阈值以上，即使页不在使用中，也会留在一个处理的 Working Set中。当可用内存降到阈值以下，将从 Working Set 中删除页。如果需要页时，它会在离开主内存前软故障返回到 Working Set 中。
182 = Page File Bytes Peak
183 = Page File Bytes Peak 是指以字节表示的虚拟内存的最大数量，此进程保留虚拟内存用于分页文件。分页文件被用来存储内存的分页，此内存由没有包含在其他文件里的进程使用。分页文件由所有进程共享，分页文件缺乏空间会阻止其他进程分配内存。如果没有分页文件，此计数器反映的是此进程在物理内存保留的、虚拟内存的最大数量。
184 = Page File Bytes
185 = Page File Bytes 是指以字节表示的虚拟内存当前数量，此进程保留虚拟内存用于分页文件。分页文件被用来存储内存的分页，此内存由没有包含在其他文件里的进程使用。分页文件由所有进程共享，分页文件缺乏空间会阻止其他进程分配内存。如果没有分页文件，此计数器反映的是此进程在物理内存保留的、虚拟内存的当前数量。
186 = Private Bytes
187 = Private Bytes 指这个处理不能与其他处理共享的、已分配的当前字节数。
188 = Announcements Total/sec
189 = % Processor Time 是所有进程线程使用处理器执行指令所花的时间百分比。指令是计算机执行的基础单位。线程是执行指令的对象，进程是程序运行时创建的对象。此计数包括处理某些硬件间隔和陷阱条件所执行的代码。
190 = Enumerations Total/sec
191 = % Processor Time 是所有进程线程使用处理器执行指令所花的时间百分比。指令是计算机执行的基础单位。线程是执行指令的对象，进程是程序运行时创建的对象。此计数包括处理某些硬件间隔和陷阱条件所执行的代码。
193 = % User Time 指这个线程用于执行用户模式的代码所用时间的百分比。应用程序、环境分系统和整数分系统以用户模式执行。以用户模式执行的代码不会损坏 Windows NT Executive、内核和设备驱动程序的整体性。与某些早期操作系统不同，Windows NT 除了使用传统的用户和特权模式保护之外还使用处理边界保护分系统。因此，Windows NT 为您的应用程序所做的作业还可能会出现在处理的特权时间之外的其他子系统处理中。
195 = % Privileged Time 是在特权模式下进程线程执行代码所花时间的百分比。当调用 Windows 系统服务时，此服务经常在特权模式运行，以便获取对系统专有数据的访问。在用户模式执行的线程无法访问这些数据。 对系统的调用可以是直接的(explicit)或间接的(implicit)，例如页面错误或中断。不像某些早期的操作系统，Windows 除了使用用户和特权模式的传统保护模式之外，还使用处理边界作为分系统保护。某些由 Windows 为您的应用程序所做的操作除了出现在处理的特权时间内，还可能在其他子系统处理出现。
197 = Context Switches/sec 为从一个线程转换到另一个线程的速率。线程转换可能发生在一个单一的处理中或互交处理中。一个线程转换可以由一个线程向另一个线程要求信息而引起，或一个线程被另一个准备就绪而且优先级更高的线程占先而引起。与某些早期操作系统不同，Windows NT 除了使用传统的用户和特权模式保护之外还使用处理边界保护分系统。因此， Windows NT 为您的应用程序所做的作业还可能会出现在处理的特权时间之外的其他子系统处理中。 转换到分系统处理导致在应用程序线程中一个上下文转换。转换回来导致分系统线程的另一个上下文转换。
198 = Current Disk Queue Length
199 = Current Disk Queue Length 是在收集性能数据时磁盘上当前的请求数量。它还包括在收集时处于服务的请求。这是瞬间的快照，不是时间间隔的平均值。多轴磁盘设备能有一次处于运行状态的多重请求，但是其他同期请求正在等待服务。此计数器会反映暂时的高或低的队列长度，但是如果磁盘驱动器被迫持续运行，它有可能一直处于高的状态。请求的延迟与此队列的长度减去磁盘的轴数成正比。为了提高性能，此差应该平均小于二。
200 = % Disk Time
201 = % Disk Time 指所选磁盘驱动器忙于为读或写入请求提供服务所用的时间的百分比。
202 = % Disk Read Time
203 = % Disk Read Time 指所选磁盘驱动器忙于为读请求提供服务所用的时间的百分比。
204 = % Disk Write Time
205 = % Disk Write Time 指所选磁盘驱动器忙于为写入请求提供服务所用的时间的百分比。
206 = Avg. Disk sec/Transfer
207 = Avg. Disk sec/Transfer 指以秒计算的一般磁盘传送所需时间。
208 = Avg. Disk sec/Read
209 = Avg. Disk sec/Read 指以秒计算的在此盘上读取数据的所需平均时间。
210 = Avg. Disk sec/Write
211 = Avg. Disk sec/Write 指以秒计算的在此盘上写入数据的所需平均时间。
212 = Disk Transfers/sec
213 = Disk Transfers/sec 指在此盘上读取/写入操作速率。
214 = Disk Reads/sec
215 = Disk Reads/sec 指在此盘上读取操作的速率。
216 = Disk Writes/sec
217 = Disk Writes/sec 指在此盘上写入操作的速率。
218 = Disk Bytes/sec
219 = Disk Bytes/sec 指在进行写入或读取操作时从磁盘上传送或传出的字节速率。
220 = Disk Read Bytes/sec
221 = Disk Read Bytes/sec 指在读取操作时从磁盘上传送字节的速率。
222 = Disk Write Bytes/sec
223 = Disk Write Bytes/sec 指在写入操作时传送到磁盘上的字节速度。
224 = Avg. Disk Bytes/Transfer
225 = Avg. Disk Bytes/Transfer 指在写入或读取操作时从磁盘上传送或传出字节的平均数。
226 = Avg. Disk Bytes/Read
227 = Avg. Disk Bytes/Read 在读取操作时从磁盘上传送的字节平均数。
228 = Avg. Disk Bytes/Write
229 = Avg. Disk Bytes/Write 在写入操作时从磁盘上传送的字节平均数。
230 = Process
231 = Process performance object 包含监视运行中应用程序和系统处理的计数器。所有在一个处理中的线程均共享同一个地址空间并可以访问同样的数据。
232 = Thread
233 = Thread performance object 包括衡量线程行为方面的计数器。一个线程是在一台处理器上执行指令的基本对象。所有运行的处理至少有一个线程。
234 = PhysicalDisk
235 = Physical Disk performance object 包含监视计算机上的硬盘或固定磁盘驱动器的计数器。磁盘用于存储文件、程序及分页数据并且通过读取检索这些项目并通过记录写入对其进行更改。物理磁盘计数器的值为逻辑磁盘(由磁盘分成)值的总和。
236 = LogicalDisk
237 = Logical Disk performance object 包含监视一个硬盘或固定磁盘驱动器的逻辑分区的计数器。Performance Monitor 用逻辑磁盘的驱动器号(如: C)来识别逻辑磁盘。
238 = Processor
239 = Processor performance object 包含衡量处理器活动方面的计数器。处理器是计算机进行算数和逻辑计算、在附属件起始操作及运行处理线程的部分。一台计算机可以有多台处理器。处理器对象将每台处理器作为对象的实例。
240 = % Total Processor Time
241 = % Total Processor Time 指计算机上的所有处理器执行非空闲线程的平均时间。此计数器设计为多处理器计算机上处理器活动的主要指示器。它等于所有处理器的 Process: % Processor Time 的总和除以处理器数得出的值。它是通过合计所有处理器用于在每个采样间隔内执行空闲进程的线程的时间总数，并从 100% 中减去该值，然后再用该差值除以计算机上的处理器数，计算而得到的值。(当其他线程都没有准备好运行时，每台处理器会有一个空闲线程消耗周期)。例如: 在一台多处理器的计算机上，一个 50% 的值意味着所有处理器在一半采样间隔中是繁忙的，或者一半处理器在所有采样间隔中总是处于繁忙状态。此计数器显示了在采样间隔中观察到的繁忙时间的平均百分比。它是通过监视服务处于不活动的时间，然后从 100% 中减去该值计算得来的。
242 = % Total User Time
243 = % Total User Time 指所有处理器用于用户模式的非空闲时间的平均百分比。它是用计算机上的所有处理器的 Processor: % User Time 的总和除以处理器数得出的。System: % Total User Time 和 System: % Total Privileged Time 相加得出 % Total Processor Time，但是通常不到 100%。(用户模式是受限处理模式为应用程序、环境子系统和整数子系统设计的。另一处理模式为特权模式，是为操作系统组件设计的并允许直接访问硬件和所有内存。操作系统将应用程序线程切换成特权模式以访问操作系统服务)。此计数器将平均繁忙时间显示为采样时间的百分比。
244 = % Total Privileged Time
245 = % Total Privileged Time 指所有处理器用于特权(内核)模式的非空闲时间的平均百分比。它是用计算机上的所有处理器的 Processor: % Privileged Time 的总和除以处理器数得出的。System: % Total User Time 和 System: % Total Privileged Time 相加得出 % Total Processor Time，但是通常不到 100%。(特权模式是指为操作系统组件设计的并允许直接访问硬件和所有内存的处理模式。操作系统将应用程序线程切换成特权模式以访问操作系统服务。另一处理模式为用户模式，是指为应用程序和环境子系统而设计的受限处理模式。此计数器将平均繁忙时间显示为采样时间的百分比。
246 = Total Interrupts/sec
247 = Total Interrupts/sec 指计算机上由所有处理器接收和提供服务的硬件中断的综合速率。它是用所有处理器的 Processor: Interrupts/sec 除以处理器数得出的，是用中断数来衡量的。它不包括分开计算的 DPC。此值是生成中断的设备活动(如系统计时器、鼠标、磁盘驱动程序、数据通讯线、网络接口卡和其他外围设备)的间接指示符。这些设备通常在完成任务或需要注意时中断处理器。中断期间，正常的线程执行会挂起。大多数系统时钟每 10 毫秒中断处理器一次，创建中断活动的背景。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
248 = Processes
249 = Processes 指在数据收集时在计算机中处理的数字。这是一个即时计算而不是一个时间间隔的平均值。每个处理代表一个程序的运行。
250 = Threads
251 = Threads 指在数据收集时在计算机中线程的数目。这是一个即时计算而不是一个时间间隔的平均值。一个线程为一个基本的可执行实体，该实体在处理器中执行指令。
252 = Events
253 = Events 指在数据收集时在计算机中的事件数目。这是一个即时计算而不是一个时间间隔的平均值。当两个或更多个线程希望同步执行时使用事件。
254 = Semaphores
255 = Semaphores 指数据收集时在计算机中信号量的数目。这是一个即时计算而不是一个时间间隔的平均值。线程使用信号量获得对于其他线程共享的数据结构的专用访问。
256 = Mutexes
257 = Mutexes 指数据收集时在计算机中多用户终端执行程序的数目。请注意这是一个即时计算而不是一个时间间隔的平均值。线程使用多用户终端执行程序以确保只有一个线程执行某段的代码。
258 = Sections
259 = Sections 指数据收集时在计算机中区域的数目。这是一个即时计算而不是一个时间间隔的平均值。一个区域为存储数据处理创建的虚拟内存的一部分。一个处理可与其他处理共享区域。
260 = Objects
261 = Object performance object 包含在系统中监督逻辑对象的计数器，如: 处理、线程、多用户终端执行程序和信号量。这个信息可以用于检测计算机资源的不必要的消耗。每个对象需要内存以存储有关对象的基本信息。
262 = Redirector
263 = Redirector performance object 包括在本地计算机上监督网络连接的计数器。
264 = Bytes Received/sec
265 = Bytes Received/sec 指字节从网络进入重定向器的速率。它包括所有应用程序数据和网络协议信息(如数据包标头)。
266 = Packets Received/sec
267 = Packets Received/sec 指重定向器接收数据包的速率(也称为 SMB 或 Server Message Block)。网络传输分成数据包。一个数据包中所接收的平均字符数可通过用这台计算机除以 Bytes Received/sec 获得。某些接收的数据包可能不包括输入数据(例如一个对一个由重定向器所做写入的承认就会算做一个输入数据包)。
268 = Read Bytes Paging/sec
269 = Read Bytes Paging/sec 指重定向器为响应页错误的尝试读取字节的速率。页错误由加载模块(如程序和数据库)、在缓存(见 Read Bytes Cache/sec)中的一个遗失、或将文件直接映像到应用程序(Windows NT 的高功能特性)的地址空间中引起。
270 = Read Bytes Non-Paging/sec
271 = Read Bytes Non-Paging/sec 指那些由重定向器为响应由一个应用程序(当重新定向使其来自另一台计算机时)对文件的正常请求而读取的那些字节。除了文件请求外，这个计数器包含其他通过网络的读取方式，如 Named Pipes 和 Transactions。这个总数不计算网络协议信息，只计算应用程序数据。
272 = Read Bytes Cache/sec
273 = Read Bytes Cache/sec 指应用程序使用重定向器访问文件系统缓存的速度。可通过从缓存检索数据满足某些这些数据请求。错过缓存的请求可导致页错误(请见 Read Bytes Paging/sec)。
274 = Read Bytes Network/sec
275 = Read Bytes Network/sec 指应用程序通过网络读取数据的速度。当在文件系统缓存中寻找数据找不到而必须从网络上检索数据时会出现这种情况。用这个值除于 Bytes Received/sec 表示应用程序数据通过网络(见 Bytes Received/sec)传输的比例。
276 = Bytes Transmitted/sec
277 = Bytes Transmitted/sec 指字节离开重定向器进入网络的速度。它包括所有应用程序数据和网络协议信息(如数据包标头之类)。
278 = Packets Transmitted/sec
279 = Packets Transmitted/sec 指重定向器发送数据包的速度(也称为 SMB 或服务器消息块)。网络传输分为数据包。在一个数据包中传输的字节的平均数字可用这个值除以 Bytes Transmitted/sec 获得。
280 = Write Bytes Paging/sec
281 = Write Bytes Paging/sec 指重定向器尝试在被应用程序使用的页中写入更改的字节的速度。由从通过网络加载的模块更改的程序数据(如程序和库)在不需要时会 'paged out'。其他输出页来自文件系统缓存(见 Write Bytes Cache/sec)。
282 = Write Bytes Non-Paging/sec
283 = Write Bytes Non-Paging/sec 指由重定向器为响应一个应用程序的正常文件输出(当将其重新指向另一台计算机时)而写入字节的速率。除了文件请求之外，这个计算包括其他通过网络写入的方式，如 Named Pipes and Transactions。这个值不计算网络协议信息，只计算应用程序数据。
284 = Write Bytes Cache/sec
285 = Write Bytes Cache/sec 指在您的计算机上的应用程序使用重定向器写入文件系统缓存的速度。数据可能不会马上离开您的计算机；在写入到网络之前可能会留在缓存中以供进一步进行修改。这样可以降低网络通讯量。 写入到缓存中的每个字节在都会算在这里面。
286 = Write Bytes Network/sec
287 = Write Bytes Network/sec 为应用程序通过网络写入数据的速度。当绕过文件系统缓存时(如: 为 Named Pipes 或 Transactions 或缓存将字节写入磁盘以便为其他数据释放空间)就会出现这种情况。用 Bytes Transmitted/sec 除于这个值表示已发送到网络上的应用程序数据的部分(见 Transmitted Bytes/sec)。
288 = Read Operations/sec
289 = File Read Operations/sec 指应用程序向重定向器要数据的速率。每次对文件系统的调用或向此应用程序界面的调用计为一次操作。
290 = Read Operations Random/sec
291 = Read Operations Random/sec 计算以文件到文件为基础的，不是连续做的读取的速率。如果读取使用一个特别文件句柄，然后接着一个不是紧接的下一个字节的读取，这个计数值增加 1。
292 = Read Packets/sec
293 = Read Packets/sec 指读取数据库放入网络上的速度。每当由于一个远程读取数据的请求而发送的一个数据包，这个总数增加 1。
294 = Reads Large/sec
295 = Reads Large/sec 指应用程序做的读取了服务器协商缓冲器大小 2 倍的速率。这种情况过多会消耗服务器上的资源。这个每读取一次递增 1。它不计算数据包。
296 = Read Packets Small/sec
297 = Read Packets Small/sec 指应用程序做的读取了服务器协商缓冲器大小速率的 1/4。这种情况过多表示浪费了服务器上的缓冲器。这个每读取一次递增 1。它不计算数据包。
298 = Write Operations/sec
299 = File Write Operations/sec 指应用程序向 Redirector 发送数据的速度。每次对文件系统的调用或向此应用程序界面(API)的调用计为一次操作。
300 = Write Operations Random/sec
301 = Write Operations Random/sec 计算以文件到文件为基础的，不是连续做的写入的速率。如果写入使用一个特别文件句柄，然后接着一个不是紧接的下一个字节的写入，这个计数值增加 1。
302 = Write Packets/sec
303 = Write Packets/sec 指写入被发送到网络上的速度。每当由于一个远程写入数据的请求而发送的一个数据包，这个总数增加 1。
304 = Writes Large/sec
305 = Writes Large/sec 指由应用程序所做的写入速度两倍于服务器的协商过的缓冲大小。这类情况过多会对服务器的资源有压力。每次写入这个总数即会增加 1。它不计算数据包。
306 = Write Packets Small/sec
307 = Write Packets Small/sec 指由应用程序所做的写入速度只有服务器的协商的缓冲大小的 1/4。这类情况过多表示浪费了服务器上的缓冲器。每次写入这个总数即会增加 1: 以写入次数而不是以数据包数计算。
308 = Reads Denied/sec
309 = Reads Denied/sec 指服务器无法完成 Raw Reads 请求的速度。当一个读取比服务器协商的缓冲大小大很多时，Redirector 请求一个(如果能够给于的话)可以允许在每个数据包上没有很多协议开销的情况下传输数据的 Raw Read。要达到这一点，服务器必须将其他请求锁定以便在服务器忙时拒绝该请求。
310 = Writes Denied/sec
311 = Writes Denied/sec 指服务器无法接纳 Raw Write 请求的速度。当一个写入比服务器协商的缓冲器大小大的多时，重定向器请求一个(如果能够给于的话)可以允许在每个数据包上没有很多协议开销的情况下传输数据的 Raw Read。要达到这一点，服务器必须将其他请求锁定以便在服务器忙时拒绝该请求。
312 = Network Errors/sec
313 = Network Errors/sec 是严重意外错误的出现率。这样的错误通常表示重新定向器和一个或多个服务器发生通讯困难。例如 SMB (Server Manager Block) 协议错误是网络错误。此错误会写入系统事件日志并提供详细信息。
314 = Server Sessions
315 = Server Sessions 计算重定向器管理的安全对象的总数。例如: 登录一台服务器后紧接着对同一服务器进行网络访问只会建立一个连接而不是两个会话。
316 = Server Reconnects
317 = Server Reconnects 计算您的重定向器需要重新连接到服务器上多少次才能完成一个新活动请求。如果您不活动的时间太久就可能被服务器断开。即使在本机上关闭了所有远程文件，重定向器也会保障 10 分钟的连接(名义上)。该类不活动连接被称为“休眠连接”。重新连接会花很多时间。
318 = Connects Core
319 = Connects Core 计算您必须有多少连接才能运行原有 MS-Net SMB 协议，包括 MS-Net SMB 本身、Xenix 和 VAX。
320 = Connects Lan Manager 2.0
321 = Connects LAN Manager 2.0 计算到 LAN Manager 2.0 服务器的连接，包括 LMX 服务器。
322 = Connects Lan Manager 2.1
323 = Connects LAN Manager 2.1 计算到 LAN Manager 2.1 服务器的连接，包括 LMX 服务器。
324 = Connects Windows NT
325 = Connects Windows NT 计算跟 Windows 2000 及更早的计算机的连接。
326 = Server Disconnects
327 = Server Disconnect 计算一台服务器必须中断您的重定向器的次数。另请参阅“服务器重新连接”。
328 = Server Sessions Hung
329 = Server Sessions Hung 计算超时的和由于缺乏从远程服务器的响应而无法进行的活动会话的数字。
330 = Server
331 = Server performance object 包含衡量在本地计算机和网络之间通讯的总数。
333 = 服务器在网络上接收的字节的数目。表示服务器忙的程度。
335 = 服务器在网络上发送的字节的数目。表示服务器忙的程度。
336 = Thread Wait Reason
337 = Thread Wait Reason 仅在线程处于“等待”状态(请见线程状态)下才可使用。当线程等待“可执行”时为 0 到 7、空闲页为 1 到 8、Page In 为 2 到 9、Pool Allocation 为 3 到 10、Execution Delay 为 4 到 11、暂停状态为 5 到 12、用户请求为 6 到 3、14 为 Event Pair High、15 为 Event Pair Low、16 为 LPC Receive、17 为 LPC 回应、18 为虚拟内存、19 为 Page Out、20 和 20 以上在这次写入时尚未分派。Event Pair 用于与受保护的子系统通讯(请见 Context Switches)。
339 = % DPC Time 指在采样间隔期间处理器用在延迟过程调用(DPC)接收和提供服务的时间百分比。DPC 是以低于标准中断优先权运行的中断。因为 DPC 是以特权模式执行的，所以 % DPC Time 是 % Privileged Time 的一部分。他们是分开计算的，并且不是中断计数器的一部分。此计数器将平均繁忙时间显示为采样时间的百分比。
340 = Sessions Timed Out
341 = 由于空闲时间超过服务器的 AutoDisconnect 参数而被关闭的会话数目。显示 AutoDisconnect 配置是否帮助节省资源。
342 = Sessions Errored Out
343 = 由于意外错误或会话已达到自动中断连接超时被关闭并正常中断连接的会话数量。
344 = Sessions Logged Off
345 = 被正常中断的会话数目。在解释 Sessions Times Out 和 Sessions Erred Out 统计数字中有用—允许百分比计算。
346 = Sessions Forced Off
347 = 被强迫注销的会话数目。可以表示由于登录时间的限制有多少会话被迫注销。
348 = Errors Logon
349 = 尝试登录服务器失败的次数。可以表示是否使用了密码猜测程序以攻破服务器上的安全措施。
350 = Errors Access Permissions
351 = 客户打开失败次数，STATUS_ACCESS_DENIED。可以表示某人想得到没有适当保护的资源，正在随意访问文件。
352 = Errors Granted Access
353 = 拒绝访问已成功打开文件的次数。可以表示访问文件的用户没有正确的访问权限。
354 = Errors System
355 = 检测出“内部服务器错误”的次数。意外的错误通常表示服务器有问题。
356 = Blocking Requests Rejected
357 = 由于没有足够的可用工作项目，服务器拒绝阻止 SMB 的次数。该数字表示 MaxWorkItem 或 MinFreeWorkItems 服务器参数是否需要调整。
358 = Work Item Shortages
359 = STATUS_DATA_NOT_ACCEPTED 在接收显示时返回的次数。这会出现在没有有效的或可以指派以便为输入请求提供服务的作业项目。这个数字可以表示 MaxWorkItem 或 MinFreeWorkItems 服务器参数是否需要调整。
360 = Files Opened Total
361 = 服务器为客户进行的成功的打开尝试的次数。可用于确定文件的 I/O 数量、确定基于路径操作的开销以及确定打开锁定的有效性。
362 = Files Open
363 = 服务器中当前打开的文件数目。该数目表示当前服务器的活动性。
365 = 服务器中当前活动的会话。该数目表示当前服务器的活动性。
366 = File Directory Searches
367 = 在服务器中寻找当前活动的文件的数目。该数目表示当前服务器的活动性。
369 = 服务器正在使用的非可分页计算机内存的字节的数目。该值可用于确定 Windows(R) NT Registry 中的 MaxNonpagedMemoryUsage 输入值。
370 = Pool Nonpaged Failures
371 = 非页面池分配失败的次数。表示计算机的物理内存太小。
372 = Pool Nonpaged Peak
373 = 服务器在此时使用的最大的非分页池的字节数。该值表示计算机应该有多少物理内存。
375 = 本服务器当前使用的可分页计算机内存的字节的数量。该值可帮助为 MaxPagedMemoryUsage 参数确定有效值。
376 = Pool Paged Failures
377 = 页面池分配失败的次数。表示计算机的物理内存或页面文件太小。
378 = Pool Paged Peak
379 = 本服务器已经指派的分页池字节的最大数目。该值表示页文件和物理内存的正常大小。
381 = Server Announce Allocations Failed/sec 指服务器(或域)广播由于内存不足而失败的比率。
383 = Mailslot Allocations Failed 指数据报接收器未能指派缓冲器以保留用户的邮件槽写入的次数。
385 = Mailslot Receives Failed 表示由于传输失败而无法接收的邮件槽消息数目。
387 = Mailslot Writes Failed 指成功接收的但无法写入邮件槽的邮件槽消息的总数。
388 = Bytes Total/sec
389 = Bytes Total/sec 指重定向器处理数据字节的速度。该值包括所有在额外协议信息如数据包标头中的应用程序和文件数据。
391 = File Data Operations/sec 是重新定向器处理数据操作的速度。一个操作应该包括许多字节，因为每个操作都有额外工作(overhead)。将 Bytes/sec 除以此计数可以决定此路径的效率，这样可以得出每个操作传送字节的平均数。
392 = Current Commands
393 = 当前命令计数器指示从本地计算机到所有目标服务器的挂起命令的数量。如果当前命令计数器显示的数字很大，而本地计算机处于空闲状态，则表明可能是与网络有关的问题，或者是本地计算机上的重定向器瓶颈。.
395 = 服务器从网络上发送和接收的字节数。该值显示了服务器大体上有多忙。
397 = % Interrupt Time 是处理器在实例间隔期间接受和服务硬件中断的时间。此值间接表示了生成间隔的设备活动， 如系统时钟、鼠标、磁盘驱动程序、数据通讯线路、网络界面卡和其他外围设备。当这些设备完成一项任务或需要管理时，它们通常会中断处理器。中断期间，正常的线程执行会停止。多数系统时钟会每隔 10 毫秒中断处理器，产生间隔活动的背景，在间隔期间，终止正常的线程执行。此计数器显示此平均占用时间为实例时间的一部分。
398 = NWLink NetBIOS
399 = NWLink NetBIOS 性能对象包含监视 IPX 传输率和连接的计数器。
400 = Packets/sec
401 = Packets/sec 指重定向器处理数据包的速度。一个数据包(希望)包括很多字节。之所以说是希望如此是因为每个数据包都有协议开销。您可以用 Bytes/sec 除于这个总数以确定这个路径的效率。您还可以将这个总数除于每秒的操作以确定每次操作传送的字节的平均值，另一种衡量效率的方式。
404 = Context Blocks Queued/sec
405 = Context Blocks Queued per second 指将 work context blocks 放到服务器的 FSP 列队以等待服务器操作的速度。
406 = File Data Operations/sec
407 = File Data Operations/sec 指计算机的所有逻辑磁盘上读取和写入操作的综合速率。这是 System: File Control Operations/sec 的逆转。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
408 = % Free Space
409 = % Free Space 是所选定的逻辑磁盘驱动器上总的可用空闲空间的百分比。
410 = Free Megabytes
411 = 可用的 MB 显示磁盘驱动器上尚未分配的空间。1 MB = 1,048,576 字节。
412 = Connections Open
413 = Connections Open 指当前为这个协议打开的连接数目。这个值只显示当前计数并不是一段时间的积数。
414 = Connections No Retries
415 = Connections No Retries 指第一次尝试时连接成功的总数。此值为积累数并显示一个运转总数。
416 = Connections With Retries
417 = Connections With Retries 指在重试尝试之后连接的总数。当第一 次连接尝试失败后的尝试为重试。这个值为一个积累数并显示一个运转总数。
418 = Disconnects Local
419 = Disconnects Local 指由本地计算机初始的会话中断数目。这个值为积累数并显示一个运转总数。
420 = Disconnects Remote
421 = Disconnects Remote 指由远程计算机初始的会话中断数目。这个值为积累数并显示一个运转总数。
422 = Failures Link
423 = Failures Link 指由于链路失败而放弃的连接数目。这个值为积累数并显示一个运转总数。
424 = Failures Adapter
425 = Failures Adapter 为由于链路失败而放弃的适配器数目。这个值为积累数并显示一个运转总数。
426 = Connection Session Timeouts
427 = Connection Session Timeout 为由于会话超时而放弃的连接数目。这个值为积累数并显示一个运转总数。
428 = Connections Canceled
429 = Connections Canceled 为取消的连接数目。这个值为积累数并显示一个运转总数。
430 = Failures Resource Remote
431 = Failures Resource Remote 指由于远程计算机上的资源问题和不足而造成的连接失败的数目。这个值为积累数并显示一个运转总数。
432 = Failures Resource Local
433 = Failures Resource Local 指由于本机上的资源问题和不足而造成的连接失败的数目。这个值为积累数并显示一个运转总数。
434 = Failures Not Found
435 = Failures Not Found 指由于找不到远程计算机而引起的连接尝试失败。这个值为积累数并显示一个运转总数。
436 = Failures No Listen
437 = Failures No Listen 指由于远程计算机没有收听连接请求而拒绝的连接数目。
438 = Datagrams/sec
439 = Datagrams/sec 指计算机处理数据报的速度。这个值显示了发送和接收的数据报的总数。数据报指一个不能确保发送到远程的无连接数据包。
440 = Datagram Bytes/sec
441 = Datagram Bytes/sec 指计算机处理数据报字节的速度。这个值为发送和接收的数据报的总值。数据报指一个不能确保发送到远程的无连接数据包。
442 = Datagrams Sent/sec
443 = Datagrams Sent/sec 指从计算机上发送数据报的速度。数据报指一个不能确保发送到远程的无连接数据包。
444 = Datagram Bytes Sent/sec
445 = Datagram Bytes Sent/sec 指从计算机上发送数据报字节的速度。数据报指一个不能确保发送到远程的无连接数据包。
446 = Datagrams Received/sec
447 = Datagrams Received/sec 指从计算机上接收数据报的速度。数据报指一个不能确保发送到远程的无连接数据包。
448 = Datagram Bytes Received/sec
449 = Datagram Bytes Received/sec 指从计算机上接收数据报字节的速度。数据报指一个不能确保发送到远程的无连接数据包。
451 = Packets/sec 指计算机处理数据包的速度。这个值为每秒钟发送的数据包和接收的数据包的总数。
452 = Packets Sent/sec
453 = Packets Sent/sec 指计算机发送的数据包的速度。这个值计算所有由计算机发送的数据包，如控件和数据包。
455 = Packets Received/sec 指计算机接收的数据包的速度。这个值计算所有经过处理的数据包，如控件和数据包。
456 = Frames/sec
457 = Frames/sec 指由计算机处理的数据帧(或数据包)的速度。这个值为发送的数据帧和接收的数据帧的总值。这个值只计算那些带数据的帧(数据包)。
458 = Frame Bytes/sec
459 = Frame Bytes/sec 指由计算机处理的帧字节的速度。这个值为发送的和接收的帧字节的总值。这个值只计算那些带数据的帧(数据包)。 这个值只计算那些带数据的帧(数据包)中的字节。
460 = Frames Sent/sec
461 = Frames Sent/sec 指由计算机发送的数据帧的速度。这个值只计算那些带数据的帧(数据包)。
462 = Frame Bytes Sent/sec
463 = Frame Bytes Sent/sec 指由计算机发送的数据字节的速度。这个值只计算那些带数据的帧(数据包)中的字节。
464 = Frames Received/sec
465 = Frames Received/sec 指由计算机接收的数据字节的速度。这个值只计算那些带数据的帧(数据包)。
466 = Frame Bytes Received/sec
467 = Frame Bytes Received/sec 指由计算机接收的数据字节的速度。这个值只计算那些带数据的帧(数据包)。
468 = Frames Re-Sent/sec
469 = Frames Re-Sent/sec 指由计算机重新发送的数据帧(数据包)的速度。这个值只计算那些带数据的帧和数据包。
470 = Frame Bytes Re-Sent/sec
471 = Frame Bytes Re-Sent/sec 指由计算机重新发送的数据字节的速度。这个值只计算那些带数据的帧中的字节。
472 = Frames Rejected/sec
473 = Frames Rejected/sec 指拒绝数据帧的速度。这个值只计算那些带数据的帧(数据包)。
474 = Frame Bytes Rejected/sec
475 = Frame Bytes Rejected/sec 指拒绝数据字节的速度。这个值只计算那些带数据的帧(数据包)。
476 = Expirations Response
477 = Expirations Response 指 T1 计时器超时的数字。
478 = Expirations Ack
479 = Expirations Ack 指 T2 计时器超时的数字。
480 = Window Send Maximum
481 = Window Send Maximum 指在等待从远程计算机的认可之前发送的数据字节的最大量。
482 = Window Send Average
483 = Window Send Average 指 在等待从远程计算机的认可之前发送的数据字节的运转平均值。
484 = Piggyback Ack Queued/sec
485 = Piggyback Ack Queued/sec 指非法携带的认可列队的速度。非法携带的认可指接收的包括在下次向远程计算机输出的数据包的认可。
486 = Piggyback Ack Timeouts
487 = Piggyback Ack Timeouts 指由于没有可以进行非法携带的输出到远程机上的数据包而不能发送非法携带的认可的次数。非法携带的认可指随一个输出的数据包发送到远程计算机上的接收到数据包的认可。如果在有效时间内没有发送数据数据包，那么就会发送一个认可数据包并且这个值就会增加。
488 = NWLink IPX
489 = NWLink IPX performance object 包括衡量使用 IPX 协议在计算机之间传输数据报的值。
490 = NWLink SPX
491 = NWLink SPX performance object 包括使用SPX协议的计算机衡量数据发送和会话连接的值。
492 = NetBEUI
493 = NetBEUI performance object 包含衡量符合 NetBIOS End User Interface 标准的网络活动数据传输的计数器。
494 = NetBEUI Resource
495 = NetBEUI Resource performance object 包括跟踪 NetBEUI 协议对缓冲器使用的值。
496 = Used Maximum
497 = Used Maximum 指在任何时候处于使用的 NetBEUI 资源(缓冲器)的最大量。该值可用于调整提供的最大资源的大小。资源名后的括号中的数字用于识别在事件日志消息中的资源。
498 = Used Average
499 = Used Average 指在此时处于使用的资源的最新数字。资源名后的括号中的数字用于识别在事件日志消息中的资源。
500 = Times Exhausted
501 = Times Exhausted 是指所有资源(缓冲器)处于使用的次数。资源名称后的括号中的数字用于在事件日志消息中识别资源。
502 = NBT Connection
503 = NBT Connection performance object 包括衡量用 NBT 连接在一台本地计算机和一台远程计算机之间发送和接收字节的速率的计数器。该连接用远程计算机的名称来识别。
505 = Bytes Received/sec 为本地计算机从某台用 NBT 连接的远程计算机上接收字节的速率。所有由本地计算机用特定 NBT 连接所接收的字节都计算在内。
506 = Bytes Sent/sec
507 = Bytes Sent/sec 为本地计算机从某台用 NBT 连接的远程计算机上发送字节的速率。所有由本地计算机用特定 NBT 连接所发送的字节都计算在内。
508 = Total Bytes/sec
509 = Bytes Total/sec 为本地计算机从某台用 NBT 连接的远程计算机上发送或接收字节的速率。所有由本地计算机用特定 NBT 连接所发送或接收的字节都计算在内。
510 = Network Interface
511 = Network Interface performance object 包括衡量通过一个 TCP/IP 网络连接发送和接收字节和数据包的速率的计数器。它包括监督连接错误的计数器。
512 = Bytes/sec
513 = Bytes Total/sec 指在每个网络适配器上发送和接收字节的速率，包括帧字符在内。Network Interface\Bytes Total/sec 是 Network Interface\Bytes Received/sec 和 Network Interface\Bytes Sent/sec 的总和。
515 = Packets/sec 为在网络界面发送和接收数据包的速率。
517 = Packets Received/sec 为在网络界面接收数据包的速率。
519 = Packets Sent/sec 为在网络界面发送数据包的速率。
520 = Current Bandwidth
521 = Current Bandwidth 指以位/每秒估计的网络接口的当前带宽。对于那些带宽不变的或无法估计出准确数据的界面，这个值为名义带宽。
523 = Bytes Received/sec 指每个网络适配器上接收字节的速率，包括帧字符在内。Network Interface\Bytes Received/sec 是 Network Interface\Bytes Total/sec 的子集。
524 = Packets Received Unicast/sec
525 = Packets Received Unicast/sec 为(子网)单址广播数据包传递给更高层协议的速率。
526 = Packets Received Non-Unicast/sec
527 = Packets Received Non-Unicast/sec 为非单址广播(子网广播或子网多址广播)数据包传递给更高层协议的速率。
528 = Packets Received Discarded
529 = Packets Received Discarded 指选定要丢弃的输入数据包的数字，即使没有发现阻碍这些数据包成为可传送到更高层协议的错误。造成丢弃数据包的可能原因是释放缓冲器空间。
530 = Packets Received Errors
531 = Packets Received Error 指输入数据包的数目，这些数据包含阻碍它们成为可传送到更高层协议的错误。
532 = Packets Received Unknown
533 = Packets Received Unknown 指由于未知或不支持的协议而丢弃通过界面接收的数据包的数目。
535 = Bytes Sent/sec 指在每个网络适配器上发送字节的速率，包括帧字符在内。Network Interface\Bytes Sent/sec 是 Network Interface\Bytes Total/sec 的子集。
536 = Packets Sent Unicast/sec
537 = Packets Sent Unicast/sec 指用更高层协议将数据包请求传输到子网单层广播地址的速度。这个速度包括丢弃的或没有发送的数据包。
538 = Packets Sent Non-Unicast/sec
539 = Packets Sent Non-Unicast/sec 为请求用更高层协议将数据包传输到非单址广播(子网广播或子网多址广播)地址的速率。该速率包括丢弃的或未发送的数据包。
540 = Packets Outbound Discarded
541 = Packets Outbound Discarded 为选为丢弃的输出数据包的数目，即便没有发现会阻止传输这些数据包的错误。丢弃数据包的可能原因是释放缓冲空间。
542 = Packets Outbound Errors
543 = Packets Outbound Error 为由于错误不能传输的输出数据包的数目。
544 = Output Queue Length
545 = Output Queue Length 为输出数据列队(数据包)的长度。如果这个长于 2，即会出现延缓并且如果可能的话找出并解决瓶颈问题。由于请求是在这个操作由网络驱动程序接口规格(NDIS)列队，这永远会是 0。
546 = IPv4
547 = IP performance object 包括衡量使用 IP 协议发送和接收的 IP 数据报速度的计数器。它还包含监督 IP 协议错误计数器。
548 = IPv6
549 = Datagrams/sec 为从界面(包括出错的在内)从 IP 接收或发送给 IP 数据报的速度，单位为每秒事件次数。任何转发的数据报都不包括在这个速度中。
551 = Datagrams Received/sec 是从界面接收 IP 数据流(包括出错的在内)的速度，单位为每秒事件次数。Datagrams Received/sec 是 Datagrams/sec 的子集。
552 = Datagrams Received Header Errors
553 = Datagrams Received Header Error 指由于在其 IP 标头中出现错误、包括错误检查和、版本号错误匹配、其他格式错误、超出存在时间、在处理 IP 选项中发现错误而放弃的输入数据包数目。
554 = Datagrams Received Address Errors
555 = Datagrams Received Address Errors 是因为在 IP 标头目标字符域的 IP 地址对此计算机无效而丢弃的输入数据流的数量。此计数包括无效的地址 (例如， 0.0.  0.0) 和不受支持的类别的地址 (例如，Class E)。对于那些非 IP 网关和不转送数据流的实体，此计数器包括因为目标地址为非本地地址而引起丢弃的数据流。
556 = Datagrams Forwarded/sec
557 = Datagrams Forwarded/sec 是尝试寻找转送输入数据流到其最终目标的路由的速度，单位为每秒事件次数，原因是本地服务器不是最终的 IP 目标。在不是作为 IP 网关的服务器上，此速度包括通过此实体安排源路由的数据包，此处的源路由选项处理成功。
558 = Datagrams Received Unknown Protocol
559 = Datagrams Received Unknown Protocol 指成功接收的标为本机地址的，但由于未知或不支持的协议而放弃的数据包的数目。
560 = Datagrams Received Discarded
561 = Datagrams Received Discarded 是丢失的输入 IP 数据流的数量(即使存在问题阻止数据流继续转送，例如，缺少缓冲区空间)。 此计数器不包括在等待重新程序集时丢失的数据流。
562 = Datagrams Received Delivered/sec
563 = Datagrams Received Delivered/sec 是输入数据流成功地被发送到 IP 用户协议的速度，包括 Internet 控制消息协议 (ICMP)，单位为每秒事件次数。
565 = Datagrams Sent/sec 是本地 IP 用户协议(包括 ICMP)用于传输所提供的 IP 数据流的速度，单位为每秒事件次数。此计数器不包括算在 Datagrams Forwarded/sec 中的数据流。 Datagrams Sent/sec 是 Datagrams/sec 子集。
566 = Datagrams Outbound Discarded
567 = Datagrams Outbound Discarded 是丢弃的输出 IP 数据流的数量(即使没有遇到问题阻止数据流传输到其目标，例如，缺少缓冲区空间)。此计数器包括算在 Datagrams Forwarded/sec 中的、符合其标准的数据流。
568 = Datagrams Outbound No Route
569 = Datagrams Outbound No Route 为由于没有找到可以将其传输到目标的路由而丢弃的 IP 数据报数目。这个计数器包括在 Datagrams  Forwarded/sec 中任何符合这个‘无路由’标准的数据包。
570 = Fragments Received/sec
571 = Fragments Received/sec is 是当接收到此实体时需要重新汇编的 IP 分段的速度，单位为每秒事件次数。
572 = Fragments Re-assembled/sec
573 = Fragments Re-assembled/sec 是 IP 分段成功重新汇编的速度，单位为每秒事件次数。
574 = Fragment Re-assembly Failures
575 = Fragment Re-assembly Failures 是 IP 重新汇编算法检测到的失败次数，例如，超时、错误等。这不一定是丢弃 IP 分段的计数，因为某些算法 (比如 RFC 815) 在收到分段后将其组合而失去分段的计数。
576 = Fragmented Datagrams/sec
577 = Fragmented Datagrams/sec 是成功分段数据流的速度，单位为每秒事件次数。
578 = Fragmentation Failures
579 = Fragmentation Failures 是需要分段但不能分段而引起丢失的 IP 数据流的数量 (例如，设置了“不分段”标记)。
580 = Fragments Created/sec
581 = Fragments Created/sec 是因为分段而生成的 IP 数据报分段，单位为每秒事件次数。
582 = ICMP
583 = ICMP performance object 包括衡量用 ICMP 协议发送和接收消息的速度的计数器。它还包括监督 ICMP 协议错误的计数器。
584 = Messages/sec
585 = Messages/sec 是此实体发送和接收到的 ICMP 消息的速度，单位为每秒事件次数。此速度包括接收或发送的错误消息。
586 = Messages Received/sec
587 = Messages Received/sec 是接收到的 ICMP 消息的速度，单位为每秒事件次数。此速度包括接收的错误消息。
588 = Messages Received Errors
589 = Messages Received Errors 是实体收到的但含有错误的 ICMP 的消息，例如，错误 ICMP 检验和、长度不正确等。
590 = Received Dest. Unreachable
591 = Received Destination Unreachable 为接收的 ICMP Destination Unreachable 消息的数目。
592 = Received Time Exceeded
593 = Received Time Exceeded 指接收的 ICMP Time Exceeded 消息的数目。
594 = Received Parameter Problem
595 = Received Parameter Problem 指接收的 ICMP Parameter Problem 消息的数目。
596 = Received Source Quench
597 = Received Source Quench 指接收的 ICMP Source Quench 消息的数目。
598 = Received Redirect/sec
599 = Received Redirect/sec 是接受 ICMP 重新定向消息的速度，单位为每秒事件次数。
600 = Received Echo/sec
601 = Received Echo/sec 是接收 ICMP 回显消息的速度，单位为每秒事件次数。
602 = Received Echo Reply/sec
603 = Received Echo Reply/sec 是接收 ICMP 回显回复消息的速度，单位为每秒事件次数。
604 = Received Timestamp/sec
605 = Received Timestamp/sec 是接收 ICMP 时间戳请求消息的速度，单位为每秒事件次数。
606 = Received Timestamp Reply/sec
607 = Received Timestamp Reply/sec 接收ICMP Timestamp Reply 消息的速度。
608 = Received Address Mask
609 = Received Address Mask 为接收的 ICMP Address Mask Request 信息的数目。
610 = Received Address Mask Reply
611 = Received Address Mask Reply 为接收的 ICMP Address Mask Reply 信息的数目。
612 = Messages Sent/sec
613 = Messages Sent/sec 是服务器试图发送的速度，单位为每秒事件次数。此速度包括发送出错的消息。
614 = Messages Outbound Errors
615 = Messages Outbound Errors 指本实体由于发现的 ICMP 内部问题(如缓冲器不足)而未法送出的 ICMP 信息数目。这个值不包括在 ICMP 层之外发现的错误，如那些 IP 路由结果数据报失败的记录。在某些执行中，任何错误种类都不包含在这个计数值中。
616 = Sent Destination Unreachable
617 = Sent Destination Unreachable 指发送的 ICMP Destination Unreachable 信息数目。
618 = Sent Time Exceeded
619 = Sent Time Exceeded 指发送的 ICMP Time Exceeded 信息数目。
620 = Sent Parameter Problem
621 = Sent Parameter Problem 指发送的 ICMP Parameter Problem 信息数目。
622 = Sent Source Quench
623 = Sent Source Quench 指发送的 ICMP Source Quench 信息数目。
624 = Sent Redirect/sec
625 = Sent Redirect/sec 是发送 ICMP 重新定向消息的速度，单位为每秒事件次数。
626 = Sent Echo/sec
627 = Sent Echo/sec 指发送 ICMP Echo 信息的速率。
628 = Sent Echo Reply/sec
629 = Sent Echo Reply/sec 时发送 ICMP 回显回复消息的速度，单位为每秒事件次数。
630 = Sent Timestamp/sec
631 = Sent Timestamp/sec 是发送 ICMP 时间戳请求消息的速度，单位为每秒事件次数。
632 = Sent Timestamp Reply/sec
633 = Sent Timestamp Reply/sec 是发送 ICMP 时间戳回复消息的速度，单位为每秒事件次数。
634 = Sent Address Mask
635 = Sent Address Mask 指发送的 ICMP Address Mask Request 信息数目。
636 = Sent Address Mask Reply
637 = Sent Address Mask Reply 指发送的 ICMP Address Mask Reply 信息数目。
638 = TCPv4
639 = TCP performance object 包含衡量使用 TCP 协议发送和接收 TCP Segment 速率的计数器变量。它包含监督在每个 TCP 连接状态下的 TCP 连接数目的计数器变量。
640 = Segments/sec
641 = Segments/sec 指使用 TCP 协议发送或接收 TCP segment 的速率。
642 = Connections Established
643 = Connections Established 指当前状态为 ESTABLISHED 或 CLOSE-WAIT 的 TCP 连接数目。
644 = Connections Active
645 = Connections Active 指 TCP 连接完成从 CLOSED 状态直接转换成 SYN-SENT 状态的次数。换句话说，它显示由本地计算机初始化的连接数量。该值为累积合计。
646 = Connections Passive
647 = Connections Passive 指 TCP 连接完成从 LISTEN 状态直接转换成 SYN-RCVD 状态的次数。换句话说，它显示由远程计算机初始化的到本地计算机的连接数量。该值为累积合计。
648 = Connection Failures
649 = Connection Failures 指 TCP 连接完成从 SYN-SENT 状态直接转换成 CLOSED 状态或 SYN-RCVD 状态的次数，加上 TCP 连接完成从 SYN-RCVD 状态直接转换成 LISTEN 状态的次数。
650 = Connections Reset
651 = Connections Reset 指 TCP 连接完成从 ESTABLISHED 状态或 CLOSE-WAIT 状态直接转换成 CLOSED 状态的次数。
652 = Segments Received/sec
653 = Segments Received/sec 指接收(包括错误接收在内)程序段的速率。这个计数包括在目前建立的连接上接收的程序段。
654 = Segments Sent/sec
655 = Segments Sent/sec 指程序段发送的速率，包括在当前连接上的发送的程序段但不包括那些只含有重新传输字节的发送程序段。
656 = Segments Retransmitted/sec
657 = Segments Retransmitted/sec 指程序段重新传输的速率，即传输的程序段中包含一个或多个以前传输过的字节。
658 = UDPv4
659 = UDP performance object 包含衡量使用 UDP 协议发送和接收 UDP 数据报的速率的计数器。它包括监督 UDP 协议错误的计数器。
660 = % Total DPC Time
661 = Datagrams/sec 指实体发送或接收 UDP 数据图的速率。
662 = % Total Interrupt Time
663 = Datagrams Received/sec 指 UDP 数据图发送到 UDP 用户的速率。
664 = Datagrams No Port/sec
665 = Datagrams No Port/sec 指接收在目标端口没有应用程序的 UDP 数据图的速率。
666 = Datagrams Received Errors
667 = Datagrams Received Error 指无法传递(除了由于在目标端口没有应用程序之外)的接收的 UDP 数据图的数目。
669 = Datagrams Sent/sec 指从实体发送 UDP 数据图的速率。
670 = Disk Storage Unit
671 = 外部计算机的磁盘存储设备统计数
672 = Allocation Failures
673 = 由磁盘存储设备汇报的分配失败的数目
674 = System Up Time
675 = System Up Time 指计算机自上次启动后已经运行的时间(以秒计)。此计数器显示启动时间和当前时间之差。
676 = System Handle Count
677 = 当前正在使用的系统句柄。
678 = Free System Page Table Entries
679 = Free System Page Table Entries 指系统当前未使用的页表项数目。此计数器仅显示上一次观察到的值；它不是平均值。
680 = Thread Count
681 = 在这次处理中正在活动的线程数目。指令是在一台处理器中基本的执行单位，线程是指执行指令的对象。每个运行处理至少有一个线程。
682 = Priority Base
683 = 这次处理的当前基本优先权。在一个处理中的线程可以根据处理的基本优先权提高或降低自己的基本优先权。
684 = Elapsed Time
685 = 这个处理运行的总时间(用秒计算)。
686 = Alignment Fixups/sec
687 = Alignment Fixups/sec 是系统修正对齐错误的速度，单位为每秒事件次数。
688 = Exception Dispatches/sec
689 = Exception Dispatches/sec 是系统发送意外的速度，单位为每秒事件次数。
690 = Floating Emulations/sec
691 = Floating Emulations/sec 指由系统执行的浮点仿真的速率。这个计数值显示在上两个范例中观察到的值的差异除于范例间隔的时间。
692 = Logon/sec
693 = Logon/sec 指所有服务器登录的速率。
694 = Priority Current
695 = 这个线程的当前动态优先权。如果该线程正在处理用户输入，系统可以将该线程的动态优先权提到高于基本优先权，或者当线程成为受计算限制时，将其降低至基本优先权。
696 = % DPC Time
697 = 这个线程的当前基本优先权。如果该线程正在处理用户输入，系统可以将该线程的动态优先权提到高于基本优先权，或者当线程成为受计算限制时，将其降低至基本优先权。
698 = % Interrupt Time
699 = 这个线程已经运行的总时间(用秒计算)。
700 = Paging File
701 = Paging File performance object 包括监督在计算机上的分页文件的计数器。分页文件指为备份计算机上已用物理内存而保留的磁盘空间。
702 = % Usage
703 = 用百分比显示的正在使用的 Page File 实例的数量。另请参阅 Process\\Page File Bytes。
704 = % Usage Peak
705 = 用百分比显示的 Page File 实例的使用峰值。另请参阅 Process\\Page File Bytes Peak。
706 = Start Address
707 = 为这个线程开始虚拟地址。
708 = User PC
709 = 这个线程的当前用户程序计数器。
710 = Mapped Space No Access
711 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。没有任何访问保护可以防止一个处理在这些页中写入和读取也无法在尝试写入和读取时产生访问冲突。
712 = Mapped Space Read Only
713 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。只读保护防止修改这些页的内容。任何对这些页的写入和修改将产生访问冲突。
714 = Mapped Space Read/Write
715 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。读取/写入保护允许一个处理在这些页中读取、修改和写入。
716 = Mapped Space Write Copy
717 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。当内存用于读取共享但不能用于写入时，使用写入副本保护。当处理读取这个内存时，这些处理可以共享同样内存。但是，当一个共享处理希望对这个共享内存进行写入访问时，只可复制一份该内存。
718 = Mapped Space Executable
719 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。可执行的内存指可由程序执行，但不能读取或写入的内存。不是所有种类的处理器都支持这类保护。
720 = Mapped Space Exec Read Only
721 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。只可执行/读取内存指可以执行也可以读取的内存。
722 = Mapped Space Exec Read/Write
723 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。可执行/读取/写入内存指可以执行也可读取和修改的内存。
724 = Mapped Space Exec Write Copy
725 = Mapped Space 指已经映射到处理的虚拟地址空间上的一个特指虚拟地址(或虚拟地址的一个范围)的虚拟内存。可执行写入副本指可由程序执行也可读取和写入的内存。当内存需要在处理之间共享时使用这类保护。如果共享处理只读取该内存，那么它们可以使用同一内存。如果共享处理需要写入访问，那么会为那个处理复制一份这个内存。
726 = Reserved Space No Access
727 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。没有任何访问保护可以防止一个处理在这些页中写入和读取，会在尝试写入和读取时产生访问冲突。
728 = Reserved Space Read Only
729 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。只读保护防止修改这些页的内容。任何写入或修改这些页的尝试会产生访问冲突。
730 = Reserved Space Read/Write
731 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。读取/写入保护允许一个处理对这些页进行读取、修改和写入。
732 = Reserved Space Write Copy
733 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。当内存用于只读共享但不用于写入共享时，使用写入复制保护。当处理读取这个内存时，它们可以共享同一内存，但是当共享处理想要对这个共享内存进行读取/写入访问时，可以复制一份那个内存。
734 = Reserved Space Executable
735 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。可执行内存指那些可以由程序执行，但不可读取或写入的内存。不是所有处理器种类都支持这种保护。
736 = Reserved Space Exec Read Only
737 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。只可执行/读取的内存指可以执行和读取的内存。
738 = Reserved Space Exec Read/Write
739 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。只可执行/读取/写入的内存指可以执行也可读取和修改的内存。
740 = Image
741 = Image performance object 包含监督在计算机上的由处理执行的虚拟地址映像的使用的计数器。
742 = Reserved Space Exec Write Copy
743 = Reserved Space 指由一个处理为将来的使用所保留的，但尚未映射或使用的虚拟内存。执行写入副本只可以由程序执行也可以读取和写入的内存。当内存需要在处理之间共享时，使用这类保护。如果共享处理只读内存，那么它们都使用同一内存。如果共享处理想进行写入访问，那么会为那个处理复制一份这个内存的副本。
744 = Unassigned Space No Access
745 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。没有任何访问保护可以防止一个处理从这些页中写入或读取，并且如果尝试写入或读取是会产生访问冲突。
746 = Unassigned Space Read Only
747 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。只读保护可防止任何对这些页的内容的修改。任何对这些页的写入或修改尝试将会产生访问冲突。
748 = Unassigned Space Read/Write
749 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。读取/写入保护允许一个处理读取、修改和写入这些页。
750 = Unassigned Space Write Copy
751 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。当内存用于读取共享但不用于写入共享时，使用写入副本保护。当处理读取这个内存，它们可以共享同一内存，但是当一个共享处理想要读取/写入访问这些共享内存时，可以复制一分该内容已供写入使用。
752 = Unassigned Space Executable
753 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。可执行内存指可以由程序执行的但不可以读取和写入的内存。不是所有处理器种类都支持这种保护。
754 = Unassigned Space Exec Read Only
755 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。只可执行/读取的内存只可以执行并读取的内存。
756 = Unassigned Space Exec Read/Write
757 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。只可执行/读取/写入的内存只可以执行也可读取和写入的内存。
758 = Unassigned Space Exec Write Copy
759 = Unassigned Space 指由处理使用的已映射的和可供使用的虚拟内存，但该虚拟内存不能归属于由那个处理执行的任何一个映像。执行写入副本指可以由程序执行也可读取和写入的内存。当内存需要在处理之间共享时，使用这类保护。如果共享处理只读取内存，那么它们都使用同一内存。如果一个共享处理想进行写入访问，可为那个处理复制一个这个内存的副本。
760 = Image Space No Access
761 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。任何访问保护都不能防止处理写入或读取这些页，如果尝试写入或处理就会产生访问冲突。
762 = Image Space Read Only
763 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。只读保护可以防止这些页的内容被修改。任何尝试写入或修改都会产生访问冲突。
764 = Image Space Read/Write
765 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。读取/写入保护允许处理读取、修改和写入这些页。
766 = Image Space Write Copy
767 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。当内存可供读取共享但不能写入时，使用写入副本保护。当处理可以读取这个内存，它们可以共享同一内存，但是当共享处理想读取/写入访问这个共享内存时，会复制一份该内存的副本以供写入。
768 = Image Space Executable
769 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。可执行内存为可由程序执行但不能读取或写入的内存。不是所有处理器都支持这类保护。
770 = Image Space Exec Read Only
771 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。只执行/读取内存为可以执行和读取的内存。
772 = Image Space Exec Read/Write
773 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。执行/读取/写入内存是指允许处理读取、修改和写入的内存。
774 = Image Space Exec Write Copy
775 = Image Space 指由处理执行的映像使用的虚拟地址空间。这是由所选处理运行的映像分配的带这个保护的所有地址空间的总数。可执行写入副本指可由程序执行、读取或写入的内存。当内存需要在处理之间共享时使用这种保护。如果共享处理只读取内存，那么它们可以使用同一内存。如果一个共享处理想要写入访问，那么将会为那个处理复制一份这个内存的副本以供写入。
776 = Bytes Image Reserved
777 = Bytes Image Reserved 指由在这个处理中运行的映像保留的所有虚拟内存的总量。
778 = Bytes Image Free
779 = Bytes Image Free 指不是由在这个处理中的映像使用或保留的虚拟地址空间的数量。
780 = Bytes Reserved
781 = Bytes Reserved 指为这个处理将来使用保留的虚拟内存总量。
782 = Bytes Free
783 = Bytes Free 指这个处理的未用虚拟地址空间的总数。
784 = ID Process
785 = ID Process 指这个处理的特别的识别符。ID Process 号可重复使用，所以这些 ID Process 号只能在一个处理的寿命期内识别那个处理。
786 = Process Address Space
787 = Process Address Space performance object 包含监督一个所选处理的内存分配和使用的计数器。
788 = No Access
789 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。没有可以防止一个处理写入或读取这些页并且在尝试读取或访问时产生访问冲突的访问保护。
790 = Read Only
791 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。只读保护防止这些页的内容被修改。任何写入或修改这些页的尝试都会产生一个访问冲突。
792 = Read/Write
793 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。读取/写入访问允许一个处理读取、修改和写入这些页。
794 = Write Copy
795 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。当内存仅作为读取共享但不作为写入共享时，使用写入副本保护。当处理读取这个内存时，它们可以共享同一内存，但是当一个共享程序相对这个共享内存进行读取/写入访问时，会复制一份该内存以供写入。
796 = Executable
797 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。可执行内存指可以由程序执行但不能读取或写入的内存。不是所有处理器都支持这种保护。
798 = Exec Read Only
799 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。执行/只读内存指可以执行和读取的内存。
800 = Exec Read/Write
801 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。执行/读取/写入内存指可以由程序执行、读取和写入的内存。
802 = Exec Write Copy
803 = Image Space 指带这个保护的所选映像使用的虚拟地址空间。执行写入副本指可由程序执行、读取和写入的内存。当内存需要在处理之间共享时使用这种保护。如果共享处理只读内存，那么它们使用的是同一内存。如果一个共享处理想进行写入访问，那么会为那个共享制作一份这个内存的副本。
804 = ID Thread
805 = ID Thread 指这个线程的独特的标识符。ID Thread 可重复使用，因此它们是在一个线程的寿命期内识别那个线程。
806 = Mailslot Receives Failed
807 = Mailslot Opens Failed/sec 表示此工作站接收 mailslots  消息发送到没有出现的 mailslots 的速度。
808 = Mailslot Writes Failed
809 = Duplicate Master Announcement 表示主浏览器在同一域中检查到另一个主浏览器的次数。
810 = Mailslot Opens Failed/sec
811 = Illegal Datagrams/sec 指由该工作站接收错误格式化的数据图的速率。
812 = Duplicate Master Announcements
813 = Announcements Total/sec 指 Announcements Server/sec 和 Announcements Domain/sec 的总数。
814 = Illegal Datagrams/sec
815 = Enumerations Total/sec 指这台工作站已处理的浏览请求的速率。这是 Enumerations Server/sec、Enumerations Domain/sec 和 Enumerations Other/sec 的总和。
816 = Thread Details
817 = Thread Details performance object 包含衡量难以收集或收集时间长的那类线程行为的计数器。这些计数器由于它们的高消耗区别于在线程对象中的其他计数器。
818 = Cache Bytes
819 = Cache Bytes 是 Memory\\System Cache Resident Bytes、Memory\\System Driver Resident Bytes、Memory\\System Code Resident Bytes 和 Memory\\Pool Paged Resident Bytes 计数器的总和。此计数器仅显示上一次观察到的值；它不是平均值。
820 = Cache Bytes Peak
821 = Cache Bytes Peak 指从系统上一次重新启动后文件系统缓存使用的最大字节数。这可能比当前的缓存量要大。此计数器仅显示上一次观察到的值；它不是平均值。
822 = Pages Input/sec
823 = Pages Input/sec 是从磁盘取读页面以解析硬页面错误的速度。它显示读取操作的数量，它并不考虑每个操作的页面数量。当一个进程引用一个虚拟内存的页面，而此虚拟内存位于工作集以外或物理内存的其他位置，并且此页面必须从磁盘检索时，就会发生硬页面错误。当夜面发生错误时，系统尝试将多个连续页面读入内存以充分利用取读操作的优点。 请比较 Memory\\Pages Input/sec 的值和  Memory\\Page Reads/sec 的值以便决定每个取读操作读入内存的平均页面数量。
824 = Transition Pages RePurposed/sec
825 = Transition Pages RePurposed 指重新用于不同目的的中转缓存页面数量的比例。这些页面否则会保留在页面缓存，在此页面在将来被访问时，提供一个(快速)软错误(而不是从后备存储检索)。请注意，这些页面可能包含专用或共享内存。
872 = Bytes Transmitted
873 = 这次连接传输的字节总数。
874 = Bytes Received
875 = 这次连接接收的字节总数。
876 = Frames Transmitted
877 = 这次连接传输的数据帧总数。
878 = Frames Received.
879 = 这次连接接收的数据帧总数。
880 = Percent Compression Out
881 = 传输的字节的压缩率。
882 = Percent Compression In
883 = 接收的字节的压缩率。
884 = CRC Errors
885 = 这次连接的 CRC 错误总数。当接收的帧包含错误数据时出现 CRC 错误。
886 = Timeout Errors
887 = 这次连接的超时错误总数。当在预期的时间内没有按时接到数据时出现超时错误。
888 = Serial Overrun Errors
889 = 这次连接的串连溢出错误总数。当硬件无法处理接收数据的速率时出现串连溢出错误。
890 = Alignment Errors
891 = 这次连接的校准错误总数。当接收的字节和预料接收的字节不同时出现校准错误。
892 = Buffer Overrun Errors
893 = 这次连接的缓冲区溢出错误总数。当软件无法无法处理接收数据的速率时出现缓冲区溢出错误。
894 = Total Errors
895 = 这次连接的 CRC、超时、串连溢出、校准和缓冲区溢出的错误总数。
896 = Bytes Transmitted/Sec
897 = 每秒传输的字节数。
898 = Bytes Received/Sec
899 = 每秒接收的字节数。
900 = Frames Transmitted/Sec
901 = 每秒传输的帧数。
902 = Frames Received/Sec
903 = 每秒接收的帧数。
904 = Total Errors/Sec
905 = 每秒的 CRC、超时、串连溢出、校准和缓冲区溢出的错误总数。
908 = Total Connections
909 = 远程访问服务连接的总数。
920 = WINS Server
921 = WINS Server performance object 包含监督使用 WINS 服务器服务进行通讯的计数器。
922 = Unique Registrations/sec
923 = Unique Registrations/sec 指由 WINS 服务器接收的独特注册的速率。
924 = Group Registrations/sec
925 = Group Registrations/sec 指由 WINS 服务器接收的组注册的速率。
926 = Total Number of Registrations/sec
927 = Total Number of Registrations/sec 指每秒进行的独特注册和组注册的总数。这是 WINS 服务器接收的注册的总速率。
928 = Unique Renewals/sec
929 = Unique Renewals/sec 指由 WINS 服务器接收的独特续订速率。
930 = Group Renewals/sec
931 = Group Renewals/sec 指由 WINS 服务器接收的组续订速率。
932 = Total Number of Renewals/sec
933 = Total Number of Renewals/sec 指每秒进行的独特续订和组续订的总数。这是由 WINS 服务器接收续订总速率。
934 = Releases/sec
935 = Total Number of Releases/sec 指由 WINS 服务器接收的发行速率。
936 = Queries/sec
937 = Total Number of Queries/sec 指由 WINS 服务器接收查询的速率。
938 = Unique Conflicts/sec
939 = Unique Conflicts/sec 指由 WINS 服务器接收与数据库中的记录发生冲突的独特注册/续订的速率。
940 = Group Conflicts/sec
941 = Group Conflicts/sec 指由 WINS 服务器接收与数据库中的记录发生冲突的组注册/续订的速率。
942 = Total Number of Conflicts/sec
943 = Total Number of Conflicts/sec 指每秒发生的独特和组冲突的总数。这是 WINS 服务器看到冲突的总速率。
944 = Successful Releases/sec
945 = 每秒成功释放的总数
946 = Failed Releases/sec
947 = 每秒失败释放的总数
948 = Successful Queries/sec
949 = 每秒成功查询的总数
950 = Failed Queries/sec
951 = 每秒失败查询的总数
952 = Handle Count
953 = 由这个处理现在打开的句柄总数。这个数字等于这个处理中每个线程当前打开的句柄的总数。
1000 = MacFile Server
1001 = Services for Macintosh AFP File Server。
1002 = Max Paged Memory
1003 = 由 MacFile 服务器使用的分页内存资源的最大数量。
1004 = Current Paged Memory
1005 = 由 MacFile 服务器使用的分页内存资源的当前数量。
1006 = Max NonPaged Memory
1007 = 由 MacFile 服务器使用的非分页内存资源的最大数量。
1008 = Current NonPaged memory
1009 = 由 MacFile 服务器使用的非分页内存资源的当前数量。
1010 = Current Sessions
1011 = 目前与 MacFile 服务器连接的会话次数。表示服务器的当前活动。
1012 = Maximum Sessions
1013 = 在某一时间与 MacFile 服务器连接的最大会话次数。表示服务器的使用量高低。
1014 = Current Files Open
1015 = 在 MacFile 服务器中当前打开的内部文件数。这个计数不包括为 Macintosh  客户打开的文件。
1016 = Maximum Files Open
1017 = 在 MacFile 服务器中可打开的最多内部文件数。这个计数不包括为 Macintosh  客户打开的文件。
1018 = Failed Logons
1019 = 登录 MacFile 服务器尝试失败的次数。可以表示是否使用密码猜测程序尝试越过服务器上的安全措施。
1020 = Data Read/sec
1021 = 每秒可从磁盘上读取的字节数。
1022 = Data Written/sec
1023 = 每秒可写入磁盘的字节数。
1024 = Data Received/sec
1025 = 每秒可从网络上接收的字结束。表示服务器有多忙。
1026 = Data Transmitted/sec
1027 = 每秒可从网络上发送的字结束。表示服务器有多忙。
1028 = Current Queue Length
1029 = 等侯处理的未完成的作业项目。
1030 = Maximum Queue Length
1031 = 某一时间等候处理的未完成的作业项目的最大量。
1032 = Current Threads
1033 = MacFile 服务器当前使用的线程数量。表示服务器有多忙。
1034 = Maximum Threads
1035 = MacFile 服务器可使用的线程的最大数量。表示服务器有多忙。
1050 = AppleTalk
1051 = AppleTalk 协议
1052 = Packets In/sec
1053 = 每秒由 Appletalk 在这个端口接收到的数据包数。
1054 = Packets Out/sec
1055 = 每秒由 Appletalk 在这个端口发送的数据包数。
1056 = Bytes In/sec
1057 = 每秒由 Appletalk 在这个端口接收到的字节数。
1058 = Bytes Out/sec
1059 = 每秒由 Appletalk 在这个端口发送的字节数。
1060 = Average Time/DDP Packet
1061 = 在这个端口上处理一个 DDP 数据包的平均时间(以毫秒计算)。
1062 = DDP Packets/sec
1063 = 由 Appletalk 在这个端口上每秒接收的 DDP 数据包的数量。
1064 = Average Time/AARP Packet
1065 = 在这个端口上处理一个 AARP 数据包的平均时间(以毫秒计算)。
1066 = AARP Packets/sec
1067 = 由 Appletalk 在这个端口上每秒接收的 AARP 数据包的数量。
1068 = Average Time/ATP Packet
1069 = 在这个端口上处理一个 ATP 数据包的平均时间(以毫秒计算)。
1070 = ATP Packets/sec
1071 = 由 Appletalk 在这个端口上每秒接收的 ATP 数据包的数量。
1072 = Average Time/NBP Packet
1073 = 在这个端口上处理一个 NBP 数据包的平均时间(以毫秒计算)。
1074 = NBP Packets/sec
1075 = 由 Appletalk 在这个端口上每秒接收的 NBP 数据包的数量。
1076 = Average Time/ZIP Packet
1077 = 在这个端口上处理一个 ZIP 数据包的平均时间(以毫秒计算)。
1078 = ZIP Packets/sec
1079 = 由 Appletalk 在这个端口上每秒接收的 ZIP 数据包的数量。
1080 = Average Time/RTMP Packet
1081 = 在这个端口上处理一个 RTMP 数据包的平均时间(以毫秒计算)。
1082 = RTMP Packets/sec
1083 = 由 Appletalk 在这个端口上每秒接收的 RTMP 数据包的数量。
1084 = ATP Retries Local
1085 = 在这个端口上重新传输的 ATP 请求数目。
1086 = ATP Response Timouts
1087 = 在这个端口上已经过期的 ATP 发行计时器数目。
1088 = ATP XO Response/Sec
1089 = 在这个端口上的每秒只做一次的 ATP 事务响应数目。
1090 = ATP ALO Response/Sec
1091 = 在这个端口上的每秒至少一次的 ATP 事务响应数目。
1092 = ATP Recvd Release/Sec
1093 = 在这个端口上每秒钟发送的 ATP 事务发行数目。
1094 = Current NonPaged Pool
1095 = 由 AppleTalk 使用的非分页的内存资源的当前量。
1096 = Packets Routed In/Sec
1097 = 在这个端口上进行路由的数据包数目。
1098 = Packets dropped
1099 = 在这个端口上由于资源限制而放弃的数据包数目。
1100 = ATP Retries Remote
1101 = 在这个端口上重新传输的 ATP 请求的数目。
1102 = Packets Routed Out/Sec
1103 = 在这个端口上进行路由出的数据包数目。
1110 = Network Segment
1111 = 通过网络监督服务为局域网部分提供网络统计。
1112 = Total frames received/second
1113 = 在网络这一段上每秒接收的帧的总数。
1114 = Total bytes received/second
1115 = 在网络这一段上每秒接收的字节的总数。
1116 = Broadcast frames received/second
1117 = 在网络这一段上每秒接收的广播帧的总数。
1118 = Multicast frames received/second
1119 = 在网络这一段上每秒接收的多址广播帧的总数。
1120 = % Network utilization
1121 = 在网络这一段上处于使用的网络带宽的百分比。
1124 = % Broadcast Frames
1125 = 在网络这一段上成为广播流量的网络带宽的百分比。
1126 = % Multicast Frames
1127 = 在网络这一段上成为多址广播流量的网络带宽的百分比。
1150 = Telephony
1151 = 电话服务系统
1152 = Lines
1153 = 由这台计算机提供服务的电话线数量。
1154 = Telephone Devices
1155 = 由这台计算机提供服务的电话设备数量。
1156 = Active Lines
1157 = 目前正处于使用中的由这台计算机提供服务的电话线数量。
1158 = Active Telephones
1159 = 当前正处于监控下的电话设备数目。
1160 = Outgoing Calls/sec
1161 = 这台计算机所做的拨出呼叫速率。
1162 = Incoming Calls/sec
1163 = 这台计算机所接的拨入呼叫速率。
1164 = Client Apps
1165 = 当前正在使用电话服务的应用程序数目。
1166 = Current Outgoing Calls
1167 = 由这台计算机提供服务的当前拨出呼叫。
1168 = Current Incoming Calls
1169 = 由这台计算机提供服务的当前拨入呼叫。
1232 = Packet Burst Read NCP Count/sec
1233 = Packet Burst Read NCP Count/sec 指 NetWare Core Protocol 请求 Packet Burst Read 的速率。Packet Burst 指提 操作的窗口协议。
1234 = Packet Burst Read Timeouts/sec
1235 = Packet Burst Read Timeouts/sec 指由于 NetWare 服务器响应所花时间过长，NetWare 服务需要重新传输 Burst Read Request 的速率。
1236 = Packet Burst Write NCP Count/sec
1237 = Packet Burst Write NCP Count/sec 指 NetWare Core Protocol 请求 Packet Burst Write 的速率。Packet Burst 指提高操作的窗口协议。
1238 = Packet Burst Write Timeouts/sec
1239 = Packet Burst Write Timeouts/sec 指由于 NetWare 服务器响应所花时间过长，NetWare 服务需要重新传输 Burst Write Request 的速率。
1240 = Packet Burst IO/sec
1241 = Packet Burst IO/sec 指 Packet Burst Read NCPs/sec 和 Packet Burst Write NCPs/sec 的总值。
1260 = Logon Total
1261 = Logon Total 包含自上次重新启动机器后所有互交登录、网络登录、服务登录、成功的登录和失败的登录。
1262 = Total Durable Handles
1263 = 持久句柄数，它表示断开 SMB2 会话连接后一直保持活动状态的持久句柄数。
1264 = Reconnected Durable Handles
1265 = 重新连接的持久句柄数，“重新连接的持久句柄数”/“持久句柄总数”的比率表示从重新连接持久句柄中获得多少性能提高。
1266 = SMB BranchCache Hash Header Requests
1267 = 服务器接收的仅针对头的 SMB BranchCache 哈希请求数。它表示为了验证客户端已经缓存的哈希而正在进行的请求数。
1268 = SMB BranchCache Hash Generation Requests
1269 = 由于客户端已请求文件的哈希，但该文件没有哈希内容或者现有哈希已过期，而由 SRV2 发送给 SMB 哈希生成服务的 SMB BranchCache 哈希生成请求数。
1270 = SMB BranchCache Hash Requests Received
1271 = 服务器接收的 SMB BranchCache 哈希请求数。
1272 = SMB BranchCache Hash Responses Sent
1273 = 已经从服务器发送的 SMB BranchCache 哈希响应数。
1274 = SMB BranchCache Hash Bytes Sent
1275 = 从服务器发送的 SMB BranchCache 哈希数据的数量。这包括为哈希头请求和完整的哈希数据请求传输的字节数。
1276 = Total Resilient Handles
1277 = 弹性句柄数，它表示 SMB2 会话断开连接时保持活动状态的弹性句柄数。
1278 = Reconnected Resilient Handles
1279 = 重新连接的弹性句柄数，“重新连接的弹性句柄”/“弹性句柄总数”的比率表示从重新连接弹性句柄提高的性能。
1300 = Server Work Queues
1301 = Server Work Queues performance object 包含监督在列队中的列队长度和对象的计算器。
1302 = Queue Length
1303 = Queue Length 指这台 CPU 当前的服务器作业列队长度。列队长度长时间超过四可能表示处理器堵塞。此值为即时计数，不是一段时间的平均值。
1304 = Active Threads
1305 = Active Threads 指从服务器客户上为这台 CPU 处理一个请求的当前线程数。系统将这个数字保持在最低以便缩小不必要的上下文替换。此值为 CPU 的即时计数，不是一段时间的平均值。
1306 = Available Threads
1307 = Available Threads 指在这台 CPU 上当前不在从一台客户机上处理请求的服务器线程数。服务器动态调整线程数以便最大化服务器的操作。
1308 = Available Work Items
1309 = 来自客户机的每个请求在服务器上用“作业项”表示，并且服务器为每台 CPU 保持一个可用的作业项池以便加速处理。此值是这台 CPU 可用作业项的即时数。长时间近于零的值表示需要为服务器服务增加 MinFreeWorkItems 注册表值。此值在 Blocking Queue 实例中永远是零。
1310 = Borrowed Work Items
1311 = 来自客户机的每个请求在服务器上用“作业项”表示，并且服务器为每台 CPU 保持一个可用的作业项池以便加速处理。当一台 CPU 用完了所有“作业项”，它会向另一台 CPU 借一个闲置作业项。这个运行计算器的值增加可能表示需要为服务器增加 'MaxWorkItems' 或 'MinFreeWorkItems' 注册表值。此值在 Blocking Queue 实例中永远是零。
1312 = Work Item Shortages
1313 = 来自客户机的每个请求在服务器上用“作业项”表示，并且服务器为每台 CPU 保持一个可用的作业项池以便加速处理。长时间大于零的值表示需要为服务器服务增加 'MaxWorkItems' 注册表值。此值在 Blocking Queue 实例中永远是零。
1314 = Current Clients
1315 = Current Clients 指由这台 CPU 提供服务的客户机的即时计数。服务器积极的在系统上的所有 CPU 之间平衡客户负载。此值在 Blocking Queue 实例中永远是零。
1317 = 服务器在这台 CPU 上从网络客户接收字节的速率。这个值用来衡量服务器有多忙。
1319 = 服务器在这台 CPU 上从网络客户发送字节的速率。这个值用来衡量服务器有多忙。
1320 = Bytes Transferred/sec
1321 = 服务器在这台 CPU 上从网络客户发送和接收字节的速率。这个值用来衡量服务器有多忙。
1323 = Read Operations/sec 指服务器在这台 CPU 上为客户机执行文件读取操作的速率。这个值用来衡量服务器有多忙。这个值在 Blocking Queue 实例中永远是零。
1324 = Read Bytes/sec
1325 = Read Bytes/sec 指服务器在这台 CPU 上为客户机从文件中读取数据的速率。这个值用来衡量服务器有多忙。
1327 = Write Operations/sec 指服务器在这台 CPU 上为客户机执行文件写入操作的速率。这个值用来衡量服务器有多忙。这个值在 Blocking Queue 实例中永远是零。
1328 = Write Bytes/sec
1329 = Write Bytes/sec 指服务器在这台 CPU 上为客户机向文件中写入的速率。这个值用来衡量服务器有多忙。
1331 = Total Bytes/sec 指服务器在这台 CPU 上为客户机向文件中读取和写入数据的速率。这个值用来衡量服务器有多忙。
1332 = Total Operations/sec
1333 = Total Operations/sec 指服务器在这台 CPU 上为客户机进行文件读取和文件写入操作的速率。这个值用来衡量服务器有多忙。这个值在 Blocking Queue 实例中永远是零。
1334 = DPCs Queued/sec
1335 = DPCs Queued/sec 指将延迟过程调用(DPC)添加到处理器 DPC 队列的平均速率，单位为每秒事件次数。DPC 是以低于标准中断优先权运行的中断。每个处理器均拥有各自的 DPC 列队。此计数器计算将 DPC 添加到队列的速率，而不是队列中 DPC 的数量。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
1336 = DPC Rate
1337 = DPC Rate 是将延缓进程调用 (DPC) 在每个处理器系统时钟嘀嗒之间添加到本处理器的 DPC 列队中的速率。DPC 是低于标准间隔运行优先级别的间隔。每个处理器拥有各自的 DPC 列队。此计算机衡量将 DPC 添加到列队的速度，而不是列队中 DPC 的数量。这个计数器只显示观察到的最后一个值；它不是一个平均值。
1342 = Total DPCs Queued/sec
1343 = Total DPCs Queued/sec 指将延迟过程调用(DPC)添加到本计算机上所有处理器的 DPC 列队中的综合速率。(DPC 是以低于标准中断优先权运行的中断)。每个处理器均拥有各自的 DPC 列队。此计数器计算将 DPC添加到队列的速率，而不是队列中 DPC 的数量。它是用计算机上的所有处理器的 Processor: DPCs Queued/sec 的总和除以处理器数得出的。此计数器显示上两个采样中观察到的值的差除以采样间隔时间所得的值。
1344 = Total DPC Rate
1345 = Total DPC Rate 指在每个处理器系统时钟计时器周期之间将延迟过程调用(DPC)添加到所有处理器的 DPC 列队中的速率。(DPC 是以低于标准中断优先权运行的中断)。每个处理器均拥有各自的 DPC 列队。此计数器计算将 DPC添加到队列的速率，而不是队列中 DPC 的数量。它是用计算机上的所有处理器的 Processor: DPC Rate 的总和除以处理器的总数得出的。此计数器仅显示上一次观察到的值；它不是平均值。
1350 = % Registry Quota In Use
1351 = % Registry Quota In Use 指系统当前使用的 Total Registry Quota Allowed 的百分比。此计数器仅显示当前百分比值；它不是平均值。
1360 = VL Memory
1361 = 计数器显示本机和系统的大量内存分配的状态。
1362 = VLM % Virtual Size In Use
1363 = VLM % Virtual Size In Use
1364 = VLM Virtual Size
1365 = 当前处理 VLM 虚拟内存空间的大小的字节。
1366 = VLM Virtual Size Peak
1367 = 当前处理 VLM 虚拟内存空间的最大的字节。这个值表示自处理开始后处理 VLM 虚拟内存的最大规格。
1368 = VLM Virtual Size Available
1369 = 当前可以分配的处理 VLM 虚拟内存空间的最大的字节。注意由于内存空间的碎片化所允许的最大分配量可能小于这个值。
1370 = VLM Commit Charge
1371 = 以字节表示的当前处理使用的 VLM 内存空间的大小。
1372 = VLM Commit Charge Peak
1373 = 自从处理开始后，以字节表示的当前处理使用的 VLM 内存空间的大小的最大值。
1374 = System VLM Commit Charge
1375 = 以字节表示的所有当前系统使用的 VLM 内存空间的大小。
1376 = System VLM Commit Charge Peak
1377 = 自从系统开始后，以字节表示的当前系统使用的 VLM 内存空间的大小的最大值。
1378 = System VLM Shared Commit Charge
1379 = 以字节表示的所有当前系统使用的共享 VLM 内存空间的大小。
1380 = Available KBytes
1381 = Available KBytes 是指以 KB 表示的物理内存量，此内存能立刻分配给一个进程或系统使用。它等于分配给待机(缓存的)、空闲和零分页列表内存的总和。要获得内存管理器的详细解释，请参阅 MSDN 和/或 Windows Server 2003 Resource Kit 里的系统性能和疑难解答指南章节。
1382 = Available MBytes
1383 = Available MBytes 是指以 MB 表示的物理内存量，此内存能立刻分配给一个进程或系统使用。它等于分配给待机(缓存的)、空闲和零分页列表内存的总和。要获得内存管理器的详细解释，请参阅 MSDN 和/或 Windows Server 2003 Resource Kit 里的系统性能和疑难解答指南章节。
1400 = Avg. Disk Queue Length
1401 = Avg. Disk Queue Length 指读取和写入请求(为所选磁盘在实例间隔中列队的)的平均数。
1402 = Avg. Disk Read Queue Length
1403 = Avg. Disk Read Queue Length 指读取请求(为所选磁盘在实例间隔中列队的)的平均数。
1404 = Avg. Disk Write Queue Length
1405 = Avg. Disk Write Queue Length 指写入请求(为所选磁盘在实例间隔中列队的)的平均数。
1406 = % Committed Bytes In Use
1407 = % Committed Bytes In Use 是 Memory\\Committed Bytes 与 Memory\\Commit Limit 之间的比值。(Committed memory 指如果需要写入磁盘时已在页面文件中保留空间的处于使用中的物理内存。Commit Limit 是由页面文件的大小而决定的。如果扩大了页面文件，该比例就会减小)。这个计数器只显示当前百分比；它不是一个平均值。
1408 = Full Image
1409 = Full Image performance object 包含监督在计算机上的由处理执行的映像虚拟地址使用的计数器。Full Image counter 与在 Image object 中的计数器相同，只是实例名字不同。在 Full Image object 中，实例名称包含上载模块的文件路径全名，在 Image object 中只显示了文件名。
1410 = Creating Process ID
1411 = Creating Process ID value 指创建的处理的处理 Process ID。创建进程可能已终止，这个值可能已经不在识别一个运行的处理。
1412 = IO Read Operations/sec
1413 = 本处理进行读取 I/O 操作的速率。这个计数器为所有由本处理产生的包括文件、网络和设备 I/O 的活动计数。
1414 = IO Write Operations/sec
1415 = 本处理进行写入 I/O 操作的速率。这个计数器为所有由本处理产生的包括文件、网络和设备 I/O 的活动计数。
1416 = IO Data Operations/sec
1417 = 本处理进行读取/写入 I/O 操作的速率。这个计数器为所有由本处理产生的包括文件、网络和设备 I/O 的活动计数。
1418 = IO Other Operations/sec
1419 = 本处理进行非读取/写入 I/O 操作的速率。例如，控制性能。这个计数器为所有由本处理产生的包括文件、网络和设备 I/O 的活动计数。
1420 = IO Read Bytes/sec
1421 = 处理从 I/O 操作读取字节的速度。这个计数器为所有由本处理产生的包括文件、网络和设备 I/O 的活动计数。
1422 = IO Write Bytes/sec
1423 = 处理从 I/O 操作写入字节的速度。这个计数器为所有由本处理产生的包括文件、网络和设备。
1424 = IO Data Bytes/sec
1425 = 处理从 I/O 操作读取/写入字节的速度。这个计数器为所有由本处理产生的包括文件、网络和设备 I/O 的活动计数。
1426 = IO Other Bytes/sec
1427 = 处理给不包括数据的 I/O 操作(如控制操作)字节的速率。这个计数器为所有由本处理产生的包括文件、网络和设备 I/O 的活动计数。
1450 = Print Queue
1451 = 显示一个打印列队的操作统计。
1452 = Total Jobs Printed
1453 = 自从上次重新启动后，在打印列队上的打印出的作业总数。
1454 = Bytes Printed/sec
1455 = 在打印列队上每秒打印的字节数。
1456 = Total Pages Printed
1457 = 自从上次重新启动后，在打印列队上通过 GDI 打出的总页数。
1458 = Jobs
1459 = 目前在打印队列中的作业数量。
1460 = References
1461 = 在打印列队中当前有多少个参考。
1462 = Max References
1463 = 自从上次重新启动后，在打印列队中的最大参考数。
1464 = Jobs Spooling
1465 = 在打印列队中当前有多少个后台打印作业。
1466 = Max Jobs Spooling
1467 = 自从上次重新启动后，在打印列队中后台打印作业的最大量。
1468 = Out of Paper Errors
1469 = 自从上次重新启动后，在打印列队中出现的缺纸错误总数。
1470 = Not Ready Errors
1471 = 自从上次重新启动后，在打印列队中出现的打印机没有就绪错误总数。
1472 = Job Errors
1473 = 自从上次重新启动后，在打印列队中出现的作业错误总数。
1474 = Enumerate Network Printer Calls
1475 = 自从上次重新启动后，从浏览客户机向这台打印服务器请求的网络浏览列表总次数。
1476 = Add Network Printer Calls
1477 = 自从上次重新启动后，从其他打印服务器向这台服务器要求添加共享网络打印机的调用总数。
1478 = Working Set - Private
1479 = Working Set - 仅用于这个处理并且不共享也不能为其他处理共享的以字节表示的专用显示作业集的大小。
1480 = Working Set - Shared
1481 = Working Set - 可共享的页可被其他处理共享的，但不一定是指其他处理正在使用它的，以字节表示的可共享显示作业集的大小。
1482 = % Idle Time
1483 = % Idle Time 汇报在实例间隔时磁盘闲置时间的百分比。
1484 = Split IO/Sec
1485 = Split IO/Sec 汇报磁盘上的 I/O 分割成多个 I/O 的速率。一个分割的 I/O 可能是由于请求的数据太大不能放进一个单一的 I/O 中或者磁盘碎片化而引起的。
1500 = Job Object
1501 = 由每个活动命名的作业对象收集的帐户和处理器使用数据的报告。
1502 = Current % Processor Time
1503 = Current % Processor Time 显示作业对象处理用于执行代码的实例间隔的百分比。
1504 = Current % User Mode Time
1505 = Current % User mode Time 显示作业对象处理用于执行用户模式的代码的实例间隔的百分比。
1506 = Current % Kernel Mode Time
1507 = Current % Kernel mode Time 显示作业对象处理用于执行内核或特权模式代码的实例间隔的百分比。
1508 = This Period mSec - Processor
1509 = This Period mSec - Processor 显示自上次作业时间限制设置后，以毫秒显示的所有处理使用的在作业对象中的处理器时间，包括那些已经终止的或不再与本作业对象相关。
1510 = This Period mSec - User Mode
1511 = This Period mSec - 显示自上次作业时间限制设置后，在用户模式中以毫秒显示的所有处理使用的在作业对象中的处理器时间，包括那些已经终止的或不再与本作业对象相关。
1512 = This Period mSec - Kernel Mode
1513 = This Period mSec - 内核模式显示自上次作业时间限制设置后，在内核模式中以毫秒显示的所有处理使用的在作业对象中的处理器时间，包括那些已经终止的或不再与本作业对象相关的处理。
1514 = Pages/Sec
1515 = Pages/Sec 显示在作业对象中的所有处理的页错误的比率。
1516 = Process Count - Total
1517 = Process Count - 总值显示与本作业对象相关的处理数(无论是活动的还是已终止的)。
1518 = Process Count - Active
1519 = Process Count - 活动显示当前与本作业对象相关的处理数。
1520 = Process Count - Terminated
1521 = Process Count - 终止显示由于一个限制违规已终止的处理的数目。
1522 = Total mSec - Processor
1523 = Total mSec - 处理器显示以毫秒表示的在本作业对象中使用的处理器时间，包括那些自本作业创建以后已经终止的或不再与本作业对象相关的处理。
1524 = Total mSec - User Mode
1525 = Total mSec - 用户模式显示以毫秒表示的在本作业对象中使用的用户模式处理器时间，包括那些自本作业创建以后已经终止的或业对象不再与本作相关的处理。
1526 = Total mSec - Kernel Mode
1527 = Total mSec - 内核模式显示以毫秒表示的在本作业对象中使用的内核模式处理器时间，包括那些自本作业创建以后已经终止的或业对象不再与本作相关的处理。
1530 = TCPv6
1532 = UDPv6
1534 = ICMPv6
1536 = Received Packet Too Big
1537 = Received Packet Too Big 是指接收到的超过预计的数据包数量。
1538 = Received Membership Query
1539 = Received Membership Query 是指接收到的查询组成员身份的数据包数量。
1540 = Received Membership Report
1541 = Received Membership Report 是指接收到的报告组成员身份的数据包数量。
1542 = Received Membership Reduction
1543 = Received Membership Reduction 是指接收到的取消组成员身份的数据包数量。
1544 = Received Router Solicit
1545 = Received Router Solicit 是指接收到的请求路由器的数据包数量。
1546 = Received Router Advert
1547 = Received Router Advert 是指接收到的公布路由器的数据包数量。
1548 = Job Object Details
1549 = % Job object Detail 显示有关作业对象中的活动处理的详细的操作信息。
1550 = Received Neighbor Solicit
1551 = Received Neighbor Solicit 是指接收到的请求邻居的数据包数量。
1552 = Received Neighbor Advert
1553 = Received Neighbor Advert 是指接收到的公布邻居的数据包数量。
1554 = Sent Packet Too Big
1555 = Sent Packet Too Big 是指接发出的超过预计的数据包数量。
1556 = Sent Membership Query
1557 = Sent Membership Query 是指发出的查询组成员身份的数据包数量。
1558 = Sent Membership Report
1559 = Sent Membership Report 是指发出的报告组成员身份的数据包数量。
1560 = Sent Membership Reduction
1561 = Sent Membership Reduction 是指发出的取消组成员身份的数据包数量。
1562 = Sent Router Solicit
1563 = Sent Router Solicit 是指发出的请求路由器的数据包数量。
1564 = Sent Router Advert
1565 = Sent Router Advert is 是指发出的公布路由器的数据包数量。
1566 = Sent Neighbor Solicit
1567 = Sent Neighbor Solicit 是指发出的请求邻居的数据包数量。
1568 = Sent Neighbor Advert
1569 = Sent Neighbor Advert 是指发出的请求邻居的数据包数量。
1570 = Security System-Wide Statistics
1571 = 这些计数器以每秒为基本时间单位跟踪身份验证性能。
1572 = NTLM Authentications
1573 = 此计数器跟踪每秒针对此 DC 上的 AD 或此成员服务器上的本地帐户处理的 NTLM 身份验证数量。
1574 = Kerberos Authentications
1575 = 此计数器跟踪每秒客户端使用票证向此计算机进行身份验证的次数。
1576 = KDC AS Requests
1577 = 此计数器跟踪每秒由密钥发行中心(KDC)处理的身份验证服务(AS)请求的数量。客户端使用 AS 请求获取票证授予票证。
1578 = KDC TGS Requests
1579 = 此计数器跟踪每秒由密钥发行中心(KDC)处理的票证授予服务(TGS)请求的数量。客户端使用这些 TGS 请求获取服务票证，允许客户端使用此票证访问其他计算机上的资源。
1580 = Schannel Session Cache Entries
1581 = 此计数器跟踪当前存储在安全通道(Schannel)会话缓存内的安全套接字层(SSL)项的数量。Schannel 会话缓存存储有关已成功建立的会话的信息，如 SSL 会话 ID。客户端可使用此信息重新连接到服务器，无需执行完整的 SSL 握手。
1582 = Active Schannel Session Cache Entries
1583 = 此计数器跟踪当前存储在安全通道(Schannel)会话缓存内且当前正在使用的安全套接字层(SSL)项的数量。Schannel 会话缓存存储有关已成功建立的会话的信息，如 SSL 会话 ID。客户端可使用此信息重新连接到服务器，无需执行完整的 SSL 握手。
1584 = SSL Client-Side Full Handshakes
1585 = 此计数器跟踪每秒处理的安全套接字层(SSL)完整客户端握手的数量。在握手期间，交换信号以确认可能发生在计算机或其他设备之间的通信。
1586 = SSL Client-Side Reconnect Handshakes
1587 = 此计数器跟踪每秒处理的安全套接字层(SSL)客户端重新连接握手的数量。重新连接握手允许使用以前 SSL 会话的会话密钥恢复客户端/服务器连接，并且处理重新连接握手比处理完整握手所需要的内存少。
1588 = SSL Server-Side Full Handshakes
1589 = 此计数器跟踪每秒处理的安全套接字层(SSL)完整服务器端握手的数量。在握手期间，交换信号以确认可能发生在计算机或其他设备之间的通信。
1590 = SSL Server-Side Reconnect Handshakes
1591 = 此计数器跟踪每秒处理的安全套接字层(SSL)服务器端重新连接握手的数量。重新连接握手允许使用以前 SSL 会话的会话密钥恢复客户端/服务器连接，并且处理重新连接握手比处理完整握手所需要的内存少。
1592 = Digest Authentications
1593 = 此计数器跟踪每秒处理的摘要式验证的数量。
1594 = Forwarded Kerberos Requests
1595 = 此计数器跟踪只读域控制器(RODC)每秒转发到此集线器的 Kerberos 请求数。此计数器仅在 RODC 上跟踪。
1596 = Offloaded Connections
1597 = “卸载连接数”是当前由具有 TCP 烟囱卸载功能的网络适配器处理的 TCP 连接(通过 IPv4 和 IPv6)数。
1670 = Security Per-Process Statistics
1671 = 这些计数器跟踪每个进程使用的安全资源和句柄的数量。
1672 = Credential Handles
1673 = 此计数器跟踪由提供的进程使用的凭据句柄的数量。凭据句柄是针对与用户相关联并且通过系统登录建立的以前存在的凭据(如密码)的句柄。
1674 = Context Handles
1675 = 此计数器跟踪由提供的进程使用的上下文句柄的数量。上下文句柄与在客户端应用程序和远程对等计算机之间建立的安全上下文相关联。
1676 = Free & Zero Page List Bytes
1677 = Free & Zero Page List Bytes 指以字节表示的分配给空闲和零分页列表的物理内存数量。此内存不包含缓存数据。其立即可分配给进程或用于系统。要获得内存管理器的详细解释，请参阅 MSDN 和/或《Windows Server 2003 Resource Kit》里的“系统性能和疑难解答指南”章节。
1678 = Modified Page List Bytes
1679 = Modified Page List Bytes 指以字节表示的分配给修改的分页列表的物理内存数量。此内存包含缓存数据和进程使用的非活动的代码，以及系统和系统缓存。在此内存分配给进程或用于系统之前，需要写出此内存。要获得内存管理器的详细解释，请参阅 MSDN 和/或《Windows Server 2003 Resource Kit》里的“系统性能和疑难解答指南”章节。
1680 = Standby Cache Reserve Bytes
1681 = Standby Cache Reserve Bytes 指以字节表示的分配给保留备用缓存分页列表的物理内存数量。此内存包含由进程、系统和系统缓存所使用的非活动缓存数据和代码。可立即将其分配给进程或用于系统。如果系统的可用空闲和零分页列表内存不足，则在较高优先级的备用缓存分页列表上的内存之前重新决定低优先级备用缓存分页列表上内存的用途。有关内存管理器的详细解释，请参阅 MSDN 和/或《Windows Server 2003 Resource Kit》里的“系统性能和疑难解答指南”章节。
1682 = Standby Cache Normal Priority Bytes
1683 = Standby Cache Normal Priority Bytes 指以字节表示的分配给标准优先级备用缓存分页列表的物理内存数量。此内存包含由进程、系统和系统缓存所使用的非活动缓存数据和代码。可立即将其分配给进程或用于系统。如果系统的可用空闲和零分页列表内存不足，则在较高优先级的备用缓存分页列表上的内存之前重新决定低优先级备用缓存分页列表上内存的用途。有关内存管理器的详细解释，请参阅 MSDN 和/或《Windows Server 2003 Resource Kit》里的“系统性能和疑难解答指南”章节。
1684 = Standby Cache Core Bytes
1685 = Standby Cache Core Bytes 指以字节表示的分配给核心备用缓存分页列表的物理内存数量。此内存包含由进程、系统和系统缓存所使用的非活动缓存数据和代码。可立即将其分配给进程或用于系统。如果系统的可用空闲和零分页列表内存不足，则在较高优先级的备用缓存分页列表上的内存之前重新决定低优先级备用缓存分页列表上内存的用途。有关内存管理器的详细解释，请参阅 MSDN 和/或《Windows Server 2003 Resource Kit》里的“系统性能和疑难解答指南”章节。
1746 = % Idle Time
1747 = % Idle Time 是处理器在采样期间空闲的时间的百分比
1748 = % C1 Time
1749 = % C1 Time 是处理器处于 C1 低能量空闲状态下的时间百分比。% C1 Time 是处理器空闲总时间的一个子集。C1 低能量空闲状态允许处理器保持其整个环境并快速返回运行状态。不是所有的系统都支持 % C1 状态。
1750 = % C2 Time
1751 = % C2 Time 是处理器处于 C2 低能量空闲状态下的时间百分比。% C2 Time 是处理器空闲总时间的一个子集。C2 低能量空闲状态允许处理器保持系统缓存环境。C2 能量状态比 C1 的能量更低而且退出延迟状态更高。不是所有的系统都支持 C2 状态。
1752 = % C3 Time
1753 = % C3 Time 是处理器处于 C3 低能量空闲状态下的时间百分比。% C3 Time 是处理器空闲总时间的一个子集。处于 C3 低能量空闲状态时，处理器无法其缓存的协调。C3 能量状态比 C3 的能量更低而且退出延迟状态更高。不是所有的系统都支持 C3 状态。
1754 = C1 Transitions/sec
1755 = C1 Transitions/sec 是 CPU 进入 C1 低能量空闲状态的速度。CPU 在足够空闲时进入 C1 状态，并在任何中断下退出这个状态。这个计数器显示上两个范例中观察到的值的差异除以采样间隔的时间。
1756 = C2 Transitions/sec
1757 = C2 Transitions/sec 是 CPU 进入 C2 低能量空闲状态的速度。CPU 在足够空闲时进入 C2 状态，并在任何中断下退出这个状态。这个计数器显示上两个范例中观察到的值的差异除以采样间隔的时间。
1758 = C3 Transitions/sec
1759 = C3 Transitions/sec 是 CPU 进入 C3 低能量空闲状态的速度。CPU 在足够空闲时进入 C3 状态，并在任何中断下退出这个状态。这个计数器显示上两个范例中观察到的值的差异除以采样间隔的时间。
1760 = Heap
1761 = 必须使用的堆栈的堆栈性能计数器
1762 = Committed Bytes
1763 = 这个堆栈使用的内存(FreeBytes + AllocatedBytes)
1764 = Reserved Bytes
1765 = 为这个堆栈保留的虚拟地址空间总数(包括没有提交的范围)
1766 = Virtual Bytes
1767 = ReservedBytes 减每段中最后一个未提交的范围
1768 = Free Bytes
1769 = 这个堆栈上 freelists 上的内存(不包括堆栈缓存中的未提交的范围或区块)
1770 = Free List Length
1771 = 小于 1k 的可用区块列表上区块数量
1772 = Avg. alloc rate
1773 = 1/Average time per allocation (不包括来自堆栈缓存的 allocs)
1774 = Avg. free rate
1775 = 1/Average time per free (不包括到堆栈缓存的 frees)
1776 = Uncommitted Ranges Length
1777 = 保留虚拟地址中的未提交范围的数量
1778 = Allocs - Frees
1779 = allocations 和 frees 的数量差异(用于遗漏检测)
1780 = Cached Allocs/sec
1781 = 堆栈缓存的 Allocations/sec
1782 = Cached Frees/sec
1783 = 堆栈缓存的 Frees/sec
1784 = Allocs <1K/sec
1785 = 小于 1k 字节的 Allocations/sec 值(包括堆栈缓存)
1786 = Frees <1K/sec
1787 = 小于 1k 字节的 Frees/sec 值(包括堆栈缓存)
1788 = Allocs 1-8K/sec
1789 = 大小为 1-8k 字节的 Allocations/sec 值
1790 = Frees 1-8K/sec
1791 = 大小为 1-8k 字节的 Frees/sec 值
1792 = Allocs over 8K/sec
1793 = 大小超过 8k 字节的 Allocations/sec 值
1794 = Frees over 8K/sec
1795 = 大小超过 8k 字节的 Frees/sec 值
1796 = Total Allocs/sec
1797 = Allocations/sec (包括来自堆栈缓存的)
1798 = Total Frees/sec
1799 = Frees/sec (包括到堆栈缓存的)
1800 = Blocks in Heap Cache
1801 = 堆栈缓存中的区块总数
1802 = Largest Cache Depth
1803 = 堆栈缓存中区块的最大数量
1804 = % Fragmentation
1805 = (FreeBytes / CommittedBytes) *100
1806 = % VAFragmentation
1807 = (VirtualBytes / ReservedBytes) * 100
1808 = Heap Lock contention
1809 = 堆栈锁定上的 Collisions/sec 值
1810 = Dirty Pages
1811 = 系统缓存上的损坏页总数
1812 = Dirty Page Threshold
1813 = 系统缓存上的损坏页数阈值
1846 = End Marker
1847 = 结尾标记
2156 = BITS Net Utilization
2157 = BITS 每作业网络使用百分比
2158 = Remote Server Speed (Bits/Sec)
2159 = 远程服务器速度估计(位/秒)
2160 = Netcard Speed (Bits/Sec)
2161 = 本地网卡的速度估计(位/秒)
2162 = Percent Netcard Free
2163 = 最近的网络接口使用百分比估计
2164 = IGD Speed (Bits/Sec)
2165 = IGD 的 Internet 连接速度估计(位/秒)
2166 = Percent IGD Free
2167 = 最近的 IGD Internet 连接使用百分比估计
2168 = BITS Download BlockSize (Bytes)
2169 = 下一个 BITS 下载块的大小
2170 = BITS Download Response Interval (msec)
2171 = BITS 下载响应间隔(毫秒)
2172 = Estimated bandwidth available to the remote system (Bits/sec)
2173 = 远程系统可用的估计带宽(位/秒)
2186 = Telephony
2187 = 电话系统
2188 = Number of Lines
2189 = 由这台计算机提供服务的电话线数量。
2190 = Number of Telephone devices
2191 = 由这台计算机提供服务的电话设备数量。
2192 = Number of Active Lines
2193 = 目前正处于使用中的由这台计算机提供服务的电话线数量。
2194 = Number of Active Telephones
2195 = 当前正处于监控下的电话设备数目。
2196 = Outgoing Calls/sec
2197 = 这台计算机所做的拨出呼叫速率。
2198 = Incoming Calls/sec
2199 = 这台计算机所接的拨入呼叫速率。
2200 = Number of Client Apps
2201 = 当前正在使用电话服务的应用程序数目。
2202 = Current Outgoing Calls
2203 = 由这台计算机提供服务的当前拨出呼叫。
2204 = Current Incoming Calls
2205 = 由这台计算机提供服务的当前拨入呼叫。
2206 = RAS Port
2207 = RAS Object Type 处理您的系统上的 RAS 设备的个别端口。
2208 = Bytes Transmitted
2209 = 这次连接传输的字节总数。
2210 = Bytes Received
2211 = 这次连接接收的字节总数。
2212 = Frames Transmitted
2213 = 这次连接传输的数据帧总数。
2214 = Frames Received
2215 = 这次连接接收的数据帧总数。
2216 = Percent Compression Out
2217 = 传输的字节的压缩率。
2218 = Percent Compression In
2219 = 接收的字节的压缩率。
2220 = CRC Errors
2221 = 这次连接的 CRC 错误总数。当接收的帧包含错误数据时出现 CRC 错误。
2222 = Timeout Errors
2223 = 这次连接的超时错误总数。当在预期的时间内没有按时接到数据时出现超时错误。
2224 = Serial Overrun Errors
2225 = 这次连接的串连溢出错误总数。当硬件无法处理接收数据的速率时出现串连溢出错误。
2226 = Alignment Errors
2227 = 这次连接的校准错误总数。当接收的字节和预料接收的字节不同时出现校准错误。
2228 = Buffer Overrun Errors
2229 = 这次连接的缓冲区溢出错误总数。当软件无法无法处理接收数据的速率时出现缓冲区溢出错误。
2230 = Total Errors
2231 = 这次连接的 CRC、超时、串连溢出、校准和缓冲区溢出的错误总数。
2232 = Bytes Transmitted/Sec
2233 = 每秒传输的字节数。
2234 = Bytes Received/Sec
2235 = 每秒接收的字节数。
2236 = Frames Transmitted/Sec
2237 = 每秒传输的帧数。
2238 = Frames Received/Sec
2239 = 每秒接收的帧数。
2240 = Total Errors/Sec
2241 = 每秒的 CRC、超时、串连溢出、校准和缓冲区溢出的错误总数。
2242 = RAS Total
2243 = RAS Object Type 处理您的系统上的 RAS 设备的混合的端口
2244 = Total Connections
2245 = 远程访问服务连接的总数。
3206 = Database
3207 = 数据库通过使用 ESE 高性能嵌入数据库管理系统，为每个进程提供了性能统计数据。
3208 = Pages Converted/sec
3209 = Pages Converted/sec 是数据库页面每秒从原有数据库格式转换的次数
3210 = Pages Converted
3211 = Pages Converted 是已从原有格式转换的数据库页面数
3212 = Records Converted/sec
3213 = Records Converted/sec 是数据库记录每秒从原有数据库格式转换的次数
3214 = Records Converted
3215 = Records Converted 是已从原有格式转换的数据库记录数
3216 = Defragmentation Tasks
3217 = Defragmentation Tasks 是当前正在执行的后台数据库碎片整理任务数。
3218 = Defragmentation Tasks Pending
3219 = Defragmentation Tasks Pending 是当前处于暂停状态的后台数据库碎片整理任务数。
3220 = Defragmentation Tasks Discarded
3221 = Defragmentation Tasks Discarded 是无法注册的后台数据库碎片整理任务数。[仅适用于开发人员]
3222 = Defragmentation Tasks Scheduled/sec
3223 = Defragmentation Tasks Scheduled/sec 是计划每秒执行的后台数据库碎片整理任务数。[仅适用于开发人员]
3224 = Defragmentation Tasks Completed/sec
3225 = Defragmentation Tasks Completed/sec 是每秒完成执行的后台数据库碎片整理任务数。[仅适用于开发人员]
3226 = Heap Allocs/sec
3227 = Heap Allocs/sec is the number of memory allocations from the MP Heaps per second.  [Dev Only]
3228 = Heap Frees/sec
3229 = Heap Frees/sec is the number of memory frees to the MP Heaps per second.  [Dev Only]
3230 = Heap Allocations
3231 = Heap Allocations is the current number of memory allocations in the MP Heaps.  [Dev Only]
3232 = Heap Bytes Allocated
3233 = Heap Bytes Allocated is the size of all memory allocations in the MP Heaps discounting heap managemnt overhead.  [Dev Only]
3234 = Page Bytes Reserved
3235 = Page Bytes Reserved is the size of all explicitly reserved virtual address space.  [Dev Only]
3236 = Page Bytes Committed
3237 = Page Bytes Committed is the size of all explicitly committed virtual memory backing store (page file and physical memory).  [Dev Only]
3238 = FCB Asynchronous Scan/sec
3239 = FCB Asynchronous Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup. These records are scanned to age out older schema definitions. [Dev Only]
3240 = FCB Asynchronous Purge/sec
3241 = FCB Asynchronous Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup. These records are purged to age out older schema definitions. [Dev Only]
3242 = FCB Asynchronous Threshold-Scan/sec
3243 = FCB Asynchronous Threshold-Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively scanned to age out older schema definitions.  [Dev Only]
3244 = FCB Asynchronous Threshold-Purge/sec
3245 = FCB Asynchronous Threshold-Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively purged to age out older schema definitions.  [Dev Only]
3246 = FCB Asynchronous Purge Conflicts/sec
3247 = FCB Asynchronous Purge Conflicts/sec is the number of failed purge attempts on cached schema records (FCBs) during asynchronous schema record cleanup.  The purge operation failed because exclusive ownership of the schema record could not be obtained.  [Dev Only]
3248 = FCB Synchronous Purge/sec
3249 = FCB Synchronous Purge/sec is the number of cached schema records (FCBs) being synchronously purged each second.  [Dev Only]
3250 = FCB Synchronous Purge Stalls/sec
3251 = FCB Synchronous Purge Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to synchronously purge them.  [Dev Only]
3252 = FCB Allocations Wait For Version Cleanup/sec
3253 = FCB Allocations Wait For Version Cleanup/sec is the number FCB allocations that must first wait for version cleanup in an attempt to free used FCBs for re-use. [Dev Only]
3254 = FCB Purge On Cursor Close/sec
3255 = FCB Purge On Cursor Close/sec is the number of cached schema records (FCBs) being synchronously purged when the cursor is closed (instead of leaving the schema record cached) each second.  [Dev Only]
3256 = FCB Cache % Hit
3257 = FCB Cache % Hit is the percentage of schema records (FCBs) opened directly from the schema record cache.  No file operations were required.  [Dev Only]
3258 = No name
3259 = No text
3260 = FCB Cache Stalls/sec
3261 = FCB Cache Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to update their reference count.  [Dev Only]
3262 = FCB Cache Maximum
3263 = FCB Cache Maximum is the absolute maximum number of the schema records (FCBs) that can exist in the cache.  [Dev Only]
3264 = FCB Cache Preferred
3265 = FCB Cache Preferred is the preferred maximum number of the schema records (FCBs) that should exist in the cache.  [Dev Only]
3266 = FCB Cache Allocated
3267 = FCB Cache Allocated is the number of cached schema records (FCBs) currently allocated and in use.  [Dev Only]
3268 = FCB Cache Available
3269 = FCB Cache Available is the number of cached schema records (FCBs) currently allocated but not in use.  These records will be used and/or purged as required.  [Dev Only]
3270 = Sessions In Use
3271 = Sessions In Use is the number of database sessions currently open for use by client threads.
3272 = Sessions % Used
3273 = Sessions % Used is the percentage of database sessions currently open for use by client threads.
3274 = No name
3275 = No text
3276 = Table Open Cache % Hit
3277 = Table Open Cache % Hit 是使用缓存架构信息打开的数据库表的百分比。如果此百分比过低，则说明表缓存可能太小。
3278 = No name
3279 = No text
3280 = Table Open Cache Hits/sec
3281 = Table Open Cache Hits/sec 是每秒钟使用缓存架构信息打开的数据库表数。如果此值过低，则说明表缓存可能太小。
3282 = Table Open Cache Misses/sec
3283 = Table Open Cache Misses/sec 是在不使用缓存架构信息的情况下每秒钟打开的数据库表数。如果此值过高，则说明表缓存可能太小。
3284 = Table Opens/sec
3285 = Table Opens/sec 是每秒钟打开的数据库表数。
3286 = Log Bytes Write/sec
3287 = Log Bytes Write per second is the rate bytes are written to the log.
3288 = Log Bytes Generated/sec
3289 = Log Bytes Generated per second 是向日志中添加数据的速率。与每个字节只生成一次而可以多次写入的 Log Bytes Write per second 不同。
3290 = Log Buffer Bytes Used
3291 = Log Buffer Bytes Used is the amount of bytes in the log buffers that have not yet been flushed to the logs.  [Dev Only]
3292 = Log Buffer Bytes Free
3293 = Log Buffer Bytes Free is the amount of free space available in the log buffers.  [Dev Only]
3294 = Log Threads Waiting
3295 = Log Threads Waiting 是等待其数据写入日志以完成数据库更新的线程数。如果此值过高，则说明日志可能是一个瓶颈。
3296 = Log Checkpoint Depth
3297 = Log Checkpoint Depth represents the amount of work, in bytes, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
3298 = Log Generation Checkpoint Depth
3299 = Log Generation Checkpoint Depth represents the amount of work, in count of log files, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
3300 = User Read Only Transaction Commits to Level 0/sec
3301 = User Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3302 = User Read/Write Transaction Commits to Level 0/sec
3303 = User Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3304 = User Transaction Commits to Level 0/sec
3305 = User Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3306 = User Read Only Transaction Rollbacks to Level 0/sec
3307 = User Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3308 = User Read/Write Transaction Rollbacks to Level 0/sec
3309 = User Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3310 = User Transaction Rollbacks to Level 0/sec
3311 = User Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3312 = System Read Only Transaction Commits to Level 0/sec
3313 = System Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3314 = System Read/Write Transaction Commits to Level 0/sec
3315 = System Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that modify data stored in the database engine.  [Dev Only]
3316 = System Transaction Commits to Level 0/sec
3317 = System Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that access data stored in the database engine.  [Dev Only]
3318 = System Read Only Transaction Rollbacks to Level 0/sec
3319 = System Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3320 = System Read/Write Transaction Rollbacks to Level 0/sec
3321 = System Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that modify data stored in the database engine.  [Dev Only]
3322 = System Transaction Rollbacks to Level 0/sec
3323 = System Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that access data stored in the database engine.  [Dev Only]
3324 = Database Page Allocation File Extension Async Consumed/sec
3325 = Database Page Allocation File Extension Async Consumed/sec is the rate of page allocations from a database file that must be serviced by extending the database file, but which do not stall when doing doing so.  [Dev Only]
3326 = Database Page Allocation File Extension Stalls/sec
3327 = Database Page Allocation File Extension Stalls/sec is the rate of page allocations from a database file that must be serviced by extending the database file and which stall when doing so.  [Dev Only]
3328 = Log Records/sec
3329 = Log Records/sec is the count of records written to the database log buffers per second.  [Dev Only]
3330 = Log Buffer Capacity Flushes/sec
3331 = Log Buffer Capacity Flushes/sec is the count of times the database log buffers must be flushed per second because they are full.  [Dev Only]
3332 = Log Buffer Commit Flushes/sec
3333 = Log Buffer Commit Flushes/sec is the count of times the database log buffers must be flushed per second because a transaction is fully committing its changes.  [Dev Only]
3334 = Log Buffer Flushes/sec
3335 = Log Buffer Flushes/sec 是每秒必须刷新数据库日志缓冲区的次数。[仅适用于开发人员]
3336 = Log Writes/sec
3337 = Log Writes/sec 是每秒钟将日志缓冲区写入日志文件的次数。如果此数字接近保存日志文件的媒体最大写入速率，则说明日志可能是一个瓶颈。
3338 = Log Record Stalls/sec
3339 = Log Record Stalls/sec 是由于日志缓冲区已满，每秒钟无法添加到其中的日志记录数。如果此计数器在大多数时间为非零值，则说明日志缓冲区大小可能是一个瓶颈。
3340 = Version buckets allocated
3341 = Total number of version buckets allocated
3342 = Version buckets allocated for deletes
3343 = Total number of version buckets allocated for FlagDelete RCEs  [Dev Only]
3344 = VER Bucket Allocations Wait For Version Cleanup/sec
3345 = VER Bucket Allocations Wait For Version Cleanup/sec is the number of version bucket allocations that must first wait for version cleanup in an attempt to free used version buckets  for re-use. [Dev Only]
3346 = Version store average RCE bookmark length
3347 = Average length of bookmark in RCE  [Dev Only]
3348 = Version store unnecessary calls/sec
3349 = Number of times per second we look in the version store for a node whose version bit is set but which has no versions  [Dev Only]
3350 = Version store cleanup tasks asynchronously dispatched/sec
3351 = Number of times per second a version store clean task is dispatched asynchronously to be performed  [Dev Only]
3352 = Version store cleanup tasks synchronously dispatched/sec
3353 = Number of times per second a version store clean task is performed synchronously  [Dev Only]
3354 = Version store cleanup tasks discarded/sec
3355 = Number of times per second a version store clean task was discarded due to load concerns  [Dev Only]
3356 = Version store cleanup tasks failures/sec
3357 = Number of times per second a dispatched version store cleanup task fails  [Dev Only]
3358 = Record Inserts/sec
3359 = Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
3360 = Record Deletes/sec
3361 = Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
3362 = Record Replaces/sec
3363 = Record Deletes/sec is the rate at which records in database tables are being updated.  [Dev Only]
3364 = Record Unnecessary Replaces/sec
3365 = Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
3366 = Record Redundant Replaces/sec
3367 = Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
3368 = Record Escrow-Updates/sec
3369 = Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
3370 = Secondary Index Inserts/sec
3371 = Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
3372 = Secondary Index Deletes/sec
3373 = Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
3374 = False Index Column Updates/sec
3375 = False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
3376 = False Tuple Index Column Updates/sec
3377 = False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
3378 = Record Intrinsic Long-Values Updated/sec
3379 = Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
3380 = Record Separated Long-Values Added/sec
3381 = Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
3382 = Record Separated Long-Values Forced/sec
3383 = Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
3384 = Record Separated Long-Values All Forced/sec
3385 = Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
3386 = Record Separated Long-Values Reference All/sec
3387 = Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
3388 = Record Separated Long-Values Dereference All/sec
3389 = Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
3390 = Separated Long-Value Seeks/sec
3391 = Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
3392 = Separated Long-Value Retrieves/sec
3393 = Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
3394 = Separated Long-Value Creates/sec
3395 = Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
3396 = Separated Long-Value Updates/sec
3397 = Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
3398 = Separated Long-Value Deletes/sec
3399 = Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
3400 = Separated Long-Value Copies/sec
3401 = Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
3402 = Separated Long-Value Chunk Seeks/sec
3403 = Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
3404 = Separated Long-Value Chunk Retrieves/sec
3405 = Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
3406 = Separated Long-Value Chunk Appends/sec
3407 = Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
3408 = Separated Long-Value Chunk Replaces/sec
3409 = Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
3410 = Separated Long-Value Chunk Deletes/sec
3411 = Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
3412 = Separated Long-Value Chunk Copies/sec
3413 = Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
3414 = B+ Tree Append Splits/sec
3415 = B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
3416 = B+ Tree Right Splits/sec
3417 = B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
3418 = B+ Tree Right Hotpoint Splits/sec
3419 = B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
3420 = B+ Tree Vertical Splits/sec
3421 = B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
3422 = B+ Tree Splits/sec
3423 = B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
3424 = B+ Tree Empty Page Merges/sec
3425 = B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
3426 = B+ Tree Right Merges/sec
3427 = Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
3428 = B+ Tree Partial Merges/sec
3429 = B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
3430 = B+ Tree Left Merges/sec
3431 = B+ Tree Left Merges/sec 是每秒通过将所有记录移动到上一页左侧而从数据库 B+ 树中删除的页数。[仅适用于开发人员]
3432 = B+ Tree Partial Left Merges/sec
3433 = B+ Tree Partial Left Merges/sec 是每秒将某些记录移动到数据库 B+ 树中某页左侧的页数。[仅适用于开发人员]
3434 = B+ Tree Page Moves/sec
3435 = B+ Tree Page Moves/sec 是每秒将所有记录移动到新页的 B+ 树的页数。[仅适用于开发人员]
3436 = B+ Tree Merges/sec
3437 = B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
3438 = B+ Tree Failed Simple Page Cleanup Attempts/sec
3439 = B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
3440 = B+ Tree Seek Short Circuits/sec
3441 = B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
3442 = B+ Tree Opportune Prereads/sec
3443 = B+ Tree Opportune Prereads/sec 是每秒由于与查找操作读取的某个页相邻而预先读取的页数。[仅适用于开发人员]
3444 = B+ Tree Unnecessary Sibling Latches/sec
3445 = B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
3446 = B+ Tree Move Nexts/sec
3447 = B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
3448 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec
3449 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
3450 = B+ Tree Move Prevs/sec
3451 = B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
3452 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec
3453 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
3454 = B+ Tree Seeks/sec
3455 = B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
3456 = B+ Tree Inserts/sec
3457 = B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
3458 = B+ Tree Replaces/sec
3459 = B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
3460 = B+ Tree Flag Deletes/sec
3461 = B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
3462 = B+ Tree Deletes/sec
3463 = B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
3464 = B+ Tree Appends/sec
3465 = B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
3466 = B+ Tree Creates/sec
3467 = B+ Tree Creates/sec is the number of B+ Trees and their corresponding space trees (if any) created per second.  This can also be viewed as the number of FDP creates per second.  [Dev Only]
3468 = B+ Tree Creates (Total)
3469 = B+ Tree Creates (Total) is the total number of B+ Trees and their corresponding space trees (if any) created.  This can also be viewed as the total number of FDP creates.  [Dev Only]
3470 = B+ Tree Destroys/sec
3471 = B+ Tree Destroys/sec is the number of B+ Trees and their corresponding space trees (if any) destroyed per second.  This can also be viewed as the number of FDP destroys per second.  [Dev Only]
3472 = B+ Tree Destroys (Total)
3473 = B+ Tree Destroys (Total) is the total number of B+ Trees and their corresponding space trees (if any) destroyed.  This can also be viewed as the total number of FDP destroys.  [Dev Only]
3474 = Database Cache Misses/sec
3475 = Database Cache Misses per second 是由数据库缓存通过导致文件操作而完成数据库文件页请求的速率。如果此速率较高，则说明数据库缓存可能太小。
3476 = Database Cache % Hit
3477 = Database Cache % Hit 是在不导致文件操作的情况下由数据库缓存完成的数据库文件页面请求百分比。如果此百分比太低，则说明数据库缓存可能太小。
3478 = No name
3479 = No text
3480 = Database Cache Requests/sec
3481 = Database Cache Requests/sec 是从数据库缓存请求页的速率。
3482 = Database Cache % Pinned
3483 = Database Cache % Pinned 是固定在内存中的数据库缓存百分比。[仅适用于开发人员]
3484 = No name
3485 = No text
3486 = Database Cache % Clean
3487 = Database Cache % Clean is the percentage of the database cache that does not contain modified data.  [Dev Only]
3488 = No name
3489 = No text
3490 = Database Pages Read Async/sec
3491 = Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
3492 = Database Pages Read Sync/sec
3493 = Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
3494 = Database Pages Written/sec
3495 = Database Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
3496 = Database Clean Pages Written/sec
3497 = Database Clean Pages Written/sec 是将页从数据库缓存写入数据库文件的速率。[仅适用于开发人员]
3498 = Database Opportune Write Issued (Total)
3499 = Database Opportune Write Issued (Total)是为了及时写入而发出的 IO 操作数。[仅适用于开发人员]
3500 = Database Pages Transferred/sec
3501 = Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
3502 = Database Page Latches/sec
3503 = Database Page Latches/sec is the rate that database pages are latched for access to their data.  [Dev Only]
3504 = Database Page Fast Latches/sec
3505 = Database Page Fast Latches/sec is the rate that database pages are latched for access to their data using a hint to tell the cache manager where that page might be in memory.  [Dev Only]
3506 = Database Page Bad Latch Hints/sec
3507 = Database Page Bad Latch Hints/sec is the rate that incorrect hints to the location of a given page in the cache are given to the cache manager.  These hints are used to perform fast latches.  [Dev Only]
3508 = Database Cache % Fast Latch
3509 = Database Cache % Fast Latch is the percentage of database pages latched for access to their data using a hint to tell the cache manager where that page might be in memory.  Ideally, this percentage should match Database Cache % Hit.  [Dev Only]
3510 = No name
3511 = No text
3512 = Database Page Latch Conflicts/sec
3513 = Database Page Latch Conflicts/sec is the rate that users latching a database page for access to its data fail due to a conflicting latch owned on that same page by another user.  [Dev Only]
3514 = Database Page Latch Stalls/sec
3515 = Database Page Latch Stalls/sec is the rate that users latching a database page for access to its data must wait for another user to release a latch on that same page.  [Dev Only]
3516 = Database Cache % Available
3517 = Database Cache % Available is the percentage of the database cache that can be allocated to cache database pages that are newly created or read in from the database file(s).  [Dev Only]
3518 = No name
3519 = No text
3520 = Database Page Faults/sec
3521 = Database Page Faults/sec 是数据库文件页面请求要求数据库缓存管理器从数据库缓存中分配新页面的速率。
3522 = Database Page Evictions/sec
3523 = Database Page Evictions/sec 是要求数据库缓存管理器从数据库缓存中分配新页面的数据库文件页面请求强制另一个数据库页面退出缓存的速率。此页面被分配时，逐出数增加，而当该页面的前一个所有者从缓存中逐出时，逐出数并不会发生变化。如果此速率过高，则说明数据库缓存可能太小。
3524 = Database Page Fault Stalls/sec
3525 = Database Page Fault Stalls/sec 是由于没有页面可用于从数据库缓存进行分配，而无法服务的页面故障速率。如果此计数器在大多数时间为非零值，则说明清除阈值可能太低。
3526 = Database Cache Size (MB)
3527 = 数据库缓存大小(MB)是数据库缓存管理器用于保存来自数据库文件的常用信息以阻止文件操作的系统内存量。如果数据库缓存大小过小而无法优化性能，且系统上的可用内存过少(参见“内存/可用字节数”)，则给系统增加更多内存可能会提高性能。如果系统中有大量可用内存，且数据库缓存大小始终无法越过某点，则数据库缓存大小可能被人为限制在较低的限制值。增加此限制值可以提高性能。
3528 = Database Cache Size
3529 = Database Cache Size 是数据库缓存管理器用来保存来自数据库文件的常用信息，以阻止文件操作的系统内存量。如果数据库缓存看起来过小而无法优化性能，而且系统上的可用内存太少(参见“内存/可用字节”)，则给系统增加更多内存可能会提高性能。如果系统中有大量可用内存，但数据库缓存大小的增加没有越过某点，则数据库缓存大小可能被人为限制在了较低的范围。增加此限制值可能会提高性能。
3530 = Database Cache Size Min
3531 = Database Cache Size Min is the minimum amount of system memory configured for use by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  [Dev Only]
3532 = Database Cache Size Max
3533 = Database Cache Size Max is the maximum amount of system memory configured for use by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  [Dev Only]
3534 = Database Cache Size Resident
3535 = Database Cache Size Resident 是由当前属于进程工作集一部分的数据库缓存使用的系统内存数量。如果 Database Cache Size Resident 曾明显小于 Database Cache Size，则表明操作系统已选择回收该系统内存以便供系统的其他部分使用。数据库缓存将从该事件恢复，但如果经常出现这种情况，则可能会导致重大性能问题。
3536 = Database Cache Size Resident (MB)
3537 = Database Cache Size Resident (MB)是由当前属于进程工作集一部分的数据库缓存使用的系统内存数量(以 MB 为单位)。如果 Database Cache Size Resident (MB)曾明显小于 Database Cache Size (MB)，则表明操作系统已选择回收该系统内存以便供系统的其他部分使用。数据库缓存将从该事件恢复，但如果经常出现这种情况，则可能会导致重大性能问题。
3538 = Database Cache % Available Min
3539 = Database Cache % Available Min is the minimum percentage of the database cache that is kept to be allocated to cache database pages that are newly created or read in from the database file(s).  If the percentage of available pages drops below this minimum, pages are thrown out of the database cache until the maximum percentage of available pages is reached.  This percentage should be set as low as possible without causing the actual percentage to drop to zero, causing cache fault stalls.  [Dev Only]
3540 = No name
3541 = No text
3542 = Database Cache % Available Max
3543 = Database Cache % Available Max is the maximum percentage of the database cache that is kept to be allocated to cache database pages that are newly created or read in from the database file(s).  This percentage should be set as low as possible but far enough above the minimum percentage so that efficient production of availible pages is possible.  [Dev Only]
3544 = No name
3545 = No text
3546 = Database Pages Preread/sec
3547 = Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
3548 = Database Cached Pages Preread/sec
3549 = Database Cached Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that are already cached.  This is non-ideal behavior that represents a waste of processing time.  [Dev Only]
3550 = Database Pages Preread Untouched/sec
3551 = Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time.  [Dev Only]
3552 = Database Pages Versioned/sec
3553 = Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
3554 = Database Pages Version Copied/sec
3555 = Database Pages Version Copied/sec 是将数据库缓存中的页复制到缓存中的新页(为了在数据库文件中该页的当前版本仍在被修改时被异步写入)的速率。此功能主要用于避免刷新顺序依存关系出现循环、分支或长链，而不需要将相关页同步写入磁盘。[仅适用于开发人员]
3556 = Database Cache % Versioned
3557 = Database Cache % Versioned is the percentage of the database cache that contains older versions of currently cached pages that have not yet been written to disk and thrown out of the cache.  [Dev Only]
3558 = No name
3559 = No text
3560 = Database Pages Ordinarily Written/sec
3561 = Database Pages Ordinarily Written/sec is the rate that pages are written to the database file (s) from the database cache in preparation for evicting them from the cache to make room for other data.  [Dev Only]
3562 = Database Pages Anomalously Written/sec
3563 = Database Pages Anomalously Written/sec is the rate that pages are written to the database file (s) from the database cache before they would ordinarily be written.  [Dev Only]
3564 = Database Pages Opportunely Written/sec
3565 = Database Pages Opportunely Written/sec is the rate that pages are written to the database file (s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of seeks required to write all the pages is reduced.  [Dev Only]
3566 = Database Pages Repeatedly Written/sec
3567 = Database Pages Repeatedly Written/sec is the rate that pages are written to the database file (s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
3568 = Database Pages Idly Written/sec
3569 = Database Pages Idly Written/sec is the rate that pages are written to the database file (s) from the database cache because there is low disk activity.  [Dev Only]
3570 = Database Pages Coalesced Written/sec
3571 = Database Pages Coalesced Written/sec is the rate that pages are written to the database file (s) from the database cache coalesced with another page. [Dev Only]
3572 = Database Pages Coalesced Read/sec
3573 = Database Pages Coalesced Read/sec is the rate that pages are read from the database file (s) to the database cache coalesced with another page. [Dev Only]
3574 = Database Page History Records
3575 = Database Page History Records is the current number of database page access history records retained for supporting the LRU-K page replacment algorithm.  [Dev Only]
3576 = Database Page History % Hit
3577 = Database Page History % Hit is the percentage of database page access history record lookups that were successful.  [Dev Only]
3578 = No name
3579 = No text
3580 = Database Page Scans/sec
3581 = Database Page Scans/sec is the rate at which database pages are considered for eviction from the database page cache.  [Dev Only]
3582 = Database Page Scans Out-of-order/sec
3583 = Database Page Scans Out-of-order/sec is the rate at which database pages are considered for eviction from the database page cache in a priority counter to the page replacement algorithm.  [Dev Only]
3584 = No name
3585 = No text
3586 = Database Cache % Resident
3587 = Database Cache % Resident 是当前位于进程工作集中的数据库缓存百分比。[仅适用于开发人员]
3588 = No name
3589 = No text
3590 = Streaming Backup Pages Read/sec
3591 = Streaming Backup Pages Read/sec is the rate of database read operations performed for the purpose of streaming backups.  [Dev Only]
3592 = Online Defrag Pages Referenced/sec
3593 = Online Defrag Pages Referenced/sec is the rate at which online defragmentation is touching database pages.  [Dev Only]
3594 = Online Defrag Pages Read/sec
3595 = Online Defrag Pages Read/sec is the rate of database read operations being performed by online defragmentation. [Dev Only]
3596 = Online Defrag Pages Preread/sec
3597 = Online Defrag Pages Preread/sec is the rate at which database pages are read in anticipation of future use by online defragmentation.  [Dev Only]
3598 = Online Defrag Pages Dirtied/sec
3599 = Online Defrag Pages Dirtied/sec is the rate at which online defragmentation is modifying clean database pages. [Dev Only]
3600 = Online Defrag Pages Re-Dirtied/sec
3601 = Online Defrag Pages Re-Dirtied/sec is the rate at which online defragmentation is modifying database pages that already contained modifications.  [Dev Only]
3602 = Online Defrag Pages Freed/sec
3603 = Pages Freed/sec 是每秒联机碎片整理进程从数据库释放的页数[仅适用于开发人员]
3604 = Online Defrag Data Moves/sec
3605 = Data Moves/sec 是每秒联机碎片整理进程将数据从一页移动到另一页的次数[仅适用于开发人员]
3606 = Online Defrag Page Moves/sec
3607 = Page Moves/sec 是每秒联机碎片整理进程将数据从一页移动到新页的次数[仅适用于开发人员]
3608 = Online Defrag Log Records/sec
3609 = Online Defrag Log Records/sec is the rate at which online defragmentation is generating log records.  [Dev Only]
3610 = Online Defrag Average Log Bytes
3611 = Online Defrag Average Log Bytes is the average size of the log records being generated by online defragmentation.  [Dev Only]
3612 = No name
3613 = No text
3614 = Online Maintenance (DB Scan) Pages Read/sec
3615 = Pages Read/sec 是每秒扫描进程从数据库读取的页数[仅适用于开发人员]
3616 = Online Maintenance (DB Scan) Pages Read
3617 = Pages Read 是扫描进程已从数据库读取的页数[仅适用于开发人员]
3618 = Online Maintenance (DB Scan) Pages Zeroed/sec
3619 = Pages Read/sec 是每秒扫描进程在数据库中清零的页数[仅适用于开发人员]
3620 = Online Maintenance (DB Scan) Pages Zeroed
3621 = Pages Read 是扫描进程已在数据库中清零的页数[仅适用于开发人员]
3622 = Database Tasks Pages Referenced/sec
3623 = Database Tasks Pages Referenced/sec is the rate at which background database tasks are touching database pages. [Dev Only]
3624 = Database Tasks Pages Read/sec
3625 = Database Tasks Pages Read/sec is the rate of database read operations being performed by background database tasks. [Dev Only]
3626 = Database Tasks Pages Preread/sec
3627 = Database Tasks Pages Preread/sec is the rate at which database pages are read in anticipation of future use by background database tasks.  [Dev Only]
3628 = Database Tasks Pages Dirtied/sec
3629 = Database Tasks Pages Dirtied/sec is the rate at which background database tasks are modifying clean database pages. [Dev Only]
3630 = Database Tasks Pages Re-Dirtied/sec
3631 = Database Tasks Pages Re-Dirtied/sec is the rate at which background databases tasks are modifying database pages that already contained modifications.  [Dev Only]
3632 = Database Tasks Log Records/sec
3633 = Database Tasks Log Records/sec is the rate at which background database tasks are generating log records.  [Dev Only]
3634 = Database Tasks Average Log Bytes
3635 = Database Tasks Average Log Bytes is the average size of the log records being generated by background database tasks.  [Dev Only]
3636 = No name
3637 = No text
3638 = I/O Database Reads/sec
3639 = I/O Database Reads/sec 是数据库读取操作完成的速率。
3640 = I/O Database Reads Average Latency
3641 = I/O Database Reads Average Latency 是每个数据库读取操作的平均时间长度(以毫秒为单位)。
3642 = No name
3643 = No text
3644 = I/O Database Reads Average Bytes
3645 = I/O Database Reads Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
3646 = No name
3647 = No text
3648 = I/O Database Reads In Heap
3649 = I/O Database Reads In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3650 = I/O Database Reads Async Pending
3651 = I/O Database Reads Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
3652 = I/O Database Reads Abnormal Latency/sec
3653 = I/O Database Reads Abnormal Latency/sec is the rate of database read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3654 = I/O Log Reads/sec
3655 = I/O Log Reads/sec 是数据库读取操作完成的速率。
3656 = I/O Log Reads Average Latency
3657 = I/O Log Reads Average Latency is the average length of time, in milliseconds, per logfile read operation.  [Dev Only]
3658 = No name
3659 = No text
3660 = I/O Log Reads Average Bytes
3661 = I/O Log Reads Average Bytes is the average number of bytes transferred per logfile read operation.  [Dev Only]
3662 = No name
3663 = No text
3664 = I/O Log Reads In Heap
3665 = I/O Log Reads In Heap is the number of logfile read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3666 = I/O Log Reads Async Pending
3667 = I/O Log Reads Async Pending is the number of logfile read operations asynchronously pending completion.  [Dev Only]
3668 = I/O Log Reads Abnormal Latency/sec
3669 = I/O Log Reads Abnormal Latency/sec is the rate of logfile read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3670 = I/O Database Writes/sec
3671 = I/O Database Writes/sec 是数据库写入操作完成的速率。
3672 = I/O Database Writes Average Latency
3673 = I/O Database Writes Average Latency 是每个数据库写入操作的平均时间长度(以毫秒为单位)。
3674 = No name
3675 = No text
3676 = I/O Database Writes Average Bytes
3677 = I/O Database Writes Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
3678 = No name
3679 = No text
3680 = I/O Database Writes In Heap
3681 = I/O Database Writes In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3682 = I/O Database Writes Async Pending
3683 = I/O Database Writes Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
3684 = I/O Database Writes Abnormal Latency/sec
3685 = I/O Database Writes Abnormal Latency/sec is the rate of database write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3686 = I/O Log Writes/sec
3687 = I/O Log Writes/sec 是日志文件写入操作完成的速率。
3688 = I/O Log Writes Average Latency
3689 = I/O Log Writes Average Latency 是每个日志文件写入操作的平均时间长度(以毫秒为单位)。
3690 = No name
3691 = No text
3692 = I/O Log Writes Average Bytes
3693 = I/O Log Writes Average Bytes is the average number of bytes transferred per logfile write operation.  [Dev Only]
3694 = No name
3695 = No text
3696 = I/O Log Writes In Heap
3697 = I/O Log Writes In Heap is the number of logfile write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
3698 = I/O Log Writes Async Pending
3699 = I/O Log Writes Async Pending is the number of logfile write operations asynchronously pending completion.  [Dev Only]
3700 = I/O Log Writes Abnormal Latency/sec
3701 = I/O Log Writes Abnormal Latency/sec is the rate of logfile write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
3702 = Threads Blocked/sec
3703 = Threads Blocked/sec is the rate at which the execution of threads are suspended to wait for a specific event to occur or for the acquisition of a resource currently owned by another thread. [Dev Only]
3704 = Threads Blocked
3705 = Threads Blocked is the current number of threads whose execution has been suspended to wait for a specific event to occur or for the acquisition of a resource currently owned by another thread. [Dev Only]
3706 = Record Failed Compression Bytes/sec
3707 = Record Failed Compression Bytes/sec 是 Xpress 压缩失败或未显著减小插入/替换大小(10% 或更低)时记录字节的速率。结果较高表示浪费了 CPU 资源。[仅适用于开发人员]
3708 = Database ==> TableClasses
3709 = 按表类进行的 ESE 高性能嵌入式数据库管理系统的统计
3710 = Record Inserts/sec
3711 = Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
3712 = Record Deletes/sec
3713 = Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
3714 = Record Replaces/sec
3715 = Record Deletes/sec is the rate at which records in database tables are being updated.  [Dev Only]
3716 = Record Unnecessary Replaces/sec
3717 = Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
3718 = Record Redundant Replaces/sec
3719 = Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
3720 = Record Escrow-Updates/sec
3721 = Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
3722 = Secondary Index Inserts/sec
3723 = Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
3724 = Secondary Index Deletes/sec
3725 = Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
3726 = False Index Column Updates/sec
3727 = False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
3728 = False Tuple Index Column Updates/sec
3729 = False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
3730 = Record Intrinsic Long-Values Updated/sec
3731 = Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
3732 = Record Separated Long-Values Added/sec
3733 = Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
3734 = Record Separated Long-Values Forced/sec
3735 = Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
3736 = Record Separated Long-Values All Forced/sec
3737 = Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
3738 = Record Separated Long-Values Reference All/sec
3739 = Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
3740 = Record Separated Long-Values Dereference All/sec
3741 = Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
3742 = Separated Long-Value Seeks/sec
3743 = Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
3744 = Separated Long-Value Retrieves/sec
3745 = Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
3746 = Separated Long-Value Creates/sec
3747 = Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
3748 = Separated Long-Value Updates/sec
3749 = Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
3750 = Separated Long-Value Deletes/sec
3751 = Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
3752 = Separated Long-Value Copies/sec
3753 = Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
3754 = Separated Long-Value Chunk Seeks/sec
3755 = Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
3756 = Separated Long-Value Chunk Retrieves/sec
3757 = Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
3758 = Separated Long-Value Chunk Appends/sec
3759 = Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
3760 = Separated Long-Value Chunk Replaces/sec
3761 = Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
3762 = Separated Long-Value Chunk Deletes/sec
3763 = Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
3764 = Separated Long-Value Chunk Copies/sec
3765 = Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
3766 = B+ Tree Append Splits/sec
3767 = B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
3768 = B+ Tree Right Splits/sec
3769 = B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
3770 = B+ Tree Right Hotpoint Splits/sec
3771 = B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
3772 = B+ Tree Vertical Splits/sec
3773 = B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
3774 = B+ Tree Splits/sec
3775 = B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
3776 = B+ Tree Empty Page Merges/sec
3777 = B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
3778 = B+ Tree Right Merges/sec
3779 = Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
3780 = B+ Tree Partial Merges/sec
3781 = B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
3782 = B+ Tree Left Merges/sec
3783 = B+ Tree Left Merges/sec 是每秒通过将所有记录移动到上一页左侧而从数据库 B+ 树中删除的页数。[仅适用于开发人员]
3784 = B+ Tree Partial Left Merges/sec
3785 = B+ Tree Partial Left Merges/sec 是每秒将某些记录移动到数据库 B+ 树中某页左侧的页数。[仅适用于开发人员]
3786 = B+ Tree Page Moves/sec
3787 = B+ Tree Page Moves/sec 是每秒将所有记录移动到新页的 B+ 树的页数。[仅适用于开发人员]
3788 = B+ Tree Merges/sec
3789 = B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
3790 = B+ Tree Failed Simple Page Cleanup Attempts/sec
3791 = B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
3792 = B+ Tree Seek Short Circuits/sec
3793 = B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
3794 = B+ Tree Opportune Prereads/sec
3795 = B+ Tree Opportune Prereads/sec 是每秒由于与查找操作读取的某个页相邻而预先读取的页数。[仅适用于开发人员]
3796 = B+ Tree Unnecessary Sibling Latches/sec
3797 = B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
3798 = B+ Tree Move Nexts/sec
3799 = B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
3800 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec
3801 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
3802 = B+ Tree Move Prevs/sec
3803 = B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
3804 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec
3805 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
3806 = B+ Tree Seeks/sec
3807 = B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
3808 = B+ Tree Inserts/sec
3809 = B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
3810 = B+ Tree Replaces/sec
3811 = B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
3812 = B+ Tree Flag Deletes/sec
3813 = B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
3814 = B+ Tree Deletes/sec
3815 = B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
3816 = B+ Tree Appends/sec
3817 = B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
3818 = B+ Tree Creates/sec
3819 = B+ Tree Creates/sec is the number of B+ Trees and their corresponding space trees (if any) created per second.  This can also be viewed as the number of FDP creates per second.  [Dev Only]
3820 = B+ Tree Creates (Total)
3821 = B+ Tree Creates (Total) is the total number of B+ Trees and their corresponding space trees (if any) created.  This can also be viewed as the total number of FDP creates.  [Dev Only]
3822 = B+ Tree Destroys/sec
3823 = B+ Tree Destroys/sec is the number of B+ Trees and their corresponding space trees (if any) destroyed per second.  This can also be viewed as the number of FDP destroys per second.  [Dev Only]
3824 = B+ Tree Destroys (Total)
3825 = B+ Tree Destroys (Total) is the total number of B+ Trees and their corresponding space trees (if any) destroyed.  This can also be viewed as the total number of FDP destroys.  [Dev Only]
3826 = Database Cache Size (MB)
3827 = 数据库缓存大小(MB)是数据库缓存管理器用于保存来自数据库文件的常用信息以阻止文件操作的系统内存量。如果数据库缓存大小过小而无法优化性能，且系统上的可用内存过少(参见“内存/可用字节数”)，则给系统增加更多内存可能会提高性能。如果系统中有大量可用内存，且数据库缓存大小始终无法越过某点，则数据库缓存大小可能被人为限制在较低的限制值。增加此限制值可以提高性能。
3828 = Database Cache Misses/sec
3829 = Database Cache Misses per second 是由数据库缓存通过导致文件操作而完成数据库文件页请求的速率。如果此速率较高，则说明数据库缓存可能太小。
3830 = Database Cache % Hit
3831 = Database Cache % Hit 是由数据库缓存完成而未导致文件操作的数据库文件页请求的百分比。如果此百分比太低，则说明数据库缓存可能太小。
3832 = No name
3833 = 无文本
3834 = Database Cache Requests/sec
3835 = Database Cache Requests/sec 是从数据库缓存请求页的速率。
3836 = Database Pages Read Async/sec
3837 = Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
3838 = Database Pages Read Sync/sec
3839 = Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
3840 = Database Pages Written/sec
3841 = Database Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
3842 = Database Clean Pages Written/sec
3843 = Database Clean Pages Written/sec 是将页从数据库缓存写入数据库文件的速率。[仅适用于开发人员]
3844 = Database Pages Transferred/sec
3845 = Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
3846 = Database Pages Preread/sec
3847 = Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
3848 = Database Cached Pages Preread/sec
3849 = Database Cached Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that are already cached.  This is non-ideal behavior that represents a waste of processing time.  [Dev Only]
3850 = Database Pages Preread Untouched/sec
3851 = Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time .  [Dev Only]
3852 = Database Pages Versioned/sec
3853 = Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
3854 = Database Pages Version Copied/sec
3855 = Database Pages Version Copied/sec 是将数据库缓存中的页复制到缓存中的新页(为了在数据库文件中该页的当前版本仍在被修改时被异步写入)的速率。此功能主要用于避免刷新顺序依存关系出现循环、分支或长链，而不需要将相关页同步写入磁盘。[仅适用于开发人员]
3856 = Database Pages Ordinarily Written/sec
3857 = Database Pages Ordinarily Written/sec is the rate that pages are written to the database file (s) from the database cache in preparation for evicting them from the cache to make room for other data.  [Dev Only]
3858 = Database Pages Anomalously Written/sec
3859 = Database Pages Anomalously Written/sec is the rate that pages are written to the database file (s) from the database cache before they would ordinarily be written.  [Dev Only]
3860 = Database Pages Opportunely Written/sec
3861 = Database Pages Opportunely Written/sec is the rate that pages are written to the database file (s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of seeks required to write all the pages is reduced.  [Dev Only]
3862 = Database Pages Repeatedly Written/sec
3863 = Database Pages Repeatedly Written/sec is the rate that pages are written to the database file (s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
3864 = Database Pages Idly Written/sec
3865 = Database Pages Idly Written/sec is the rate that pages are written to the database file (s) from the database cache because there is low disk activity.  [Dev Only]
3866 = Database Pages Coalesced Written/sec
3867 = Database Pages Coalesced Written/sec is the rate that pages are written to the database file (s) from the database cache coalesced with another page. [Dev Only]
3868 = Database Pages Coalesced Read/sec
3869 = Database Pages Coalesced Read/sec is the rate that pages are read from the database file (s) to the database cache coalesced with another page. [Dev Only]
3870 = Database ==> Instances
3871 = 此进程中的实例
3872 = Pages Converted/sec
3873 = Pages Converted/sec 是数据库页面每秒从原有数据库格式转换的次数
3874 = Pages Converted
3875 = Pages Converted 是已从原有格式转换的数据库页面数
3876 = Records Converted/sec
3877 = Records Converted/sec 是数据库记录每秒从原有数据库格式转换的次数
3878 = Records Converted
3879 = Records Converted 是已从原有格式转换的数据库记录数
3880 = Defragmentation Tasks
3881 = Defragmentation Tasks 是当前正在执行的后台数据库碎片整理任务数。
3882 = Defragmentation Tasks Pending
3883 = Defragmentation Tasks Pending 是当前处于暂停状态的后台数据库碎片整理任务数。
3884 = Defragmentation Tasks Discarded
3885 = Defragmentation Tasks Discarded 是无法注册的后台数据库碎片整理任务数。[仅适用于开发人员]
3886 = Defragmentation Tasks Scheduled/sec
3887 = Defragmentation Tasks Scheduled/sec 是计划每秒执行的后台数据库碎片整理任务数。[仅适用于开发人员]
3888 = Defragmentation Tasks Completed/sec
3889 = Defragmentation Tasks Completed/sec 是每秒完成执行的后台数据库碎片整理任务数。[仅适用于开发人员]
3890 = FCB Asynchronous Scan/sec
3891 = FCB Asynchronous Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup. These records are scanned to age out older schema definitions. [Dev Only]
3892 = FCB Asynchronous Purge/sec
3893 = FCB Asynchronous Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup. These records are purged to age out older schema definitions. [Dev Only]
3894 = FCB Asynchronous Threshold-Scan/sec
3895 = FCB Asynchronous Threshold-Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively scanned to age out older schema definitions.  [Dev Only]
3896 = FCB Asynchronous Threshold-Purge/sec
3897 = FCB Asynchronous Threshold-Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup.  Cleanup was triggered by a large number of schema records above the preferred limit.  These records are aggressively purged to age out older schema definitions.  [Dev Only]
3898 = FCB Asynchronous Purge Conflicts/sec
3899 = FCB Asynchronous Purge Conflicts/sec is the number of failed purge attempts on cached schema records (FCBs) during asynchronous schema record cleanup.  The purge operation failed because exclusive ownership of the schema record could not be obtained.  [Dev Only]
3900 = FCB Synchronous Purge/sec
3901 = FCB Synchronous Purge/sec is the number of cached schema records (FCBs) being synchronously purged each second.  [Dev Only]
3902 = FCB Synchronous Purge Stalls/sec
3903 = FCB Synchronous Purge Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to synchronously purge them.  [Dev Only]
3904 = FCB Allocations Wait For Version Cleanup/sec
3905 = FCB Allocations Wait For Version Cleanup/sec is the number of FCB allocations that must first wait for version cleanup in an attempt to free used FCBs for re-use. [Dev Only]
3906 = FCB Purge On Cursor Close/sec
3907 = FCB Purge On Cursor Close/sec is the number of cached schema records (FCBs) being synchronously purged when the cursor is closed (instead of leaving the schema record cached) each second.  [Dev Only]
3908 = FCB Cache % Hit
3909 = FCB Cache % Hit is the percentage of schema records (FCBs) opened directly from the schema record cache.  No file operations were required.  [Dev Only]
3910 = No name
3911 = No text
3912 = FCB Cache Stalls/sec
3913 = FCB Cache Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to update their reference count.  [Dev Only]
3914 = FCB Cache Maximum
3915 = FCB Cache Maximum is the absolute maximum number of the schema records (FCBs) that can exist in the cache.  [Dev Only]
3916 = FCB Cache Preferred
3917 = FCB Cache Preferred is the preferred maximum number of the schema records (FCBs) that should exist in the cache.  [Dev Only]
3918 = FCB Cache Allocated
3919 = FCB Cache Allocated is the number of cached schema records (FCBs) currently allocated and in use.  [Dev Only]
3920 = FCB Cache Available
3921 = FCB Cache Available is the number of cached schema records (FCBs) currently allocated but not in use.  These records will be used and/or purged as required.  [Dev Only]
3922 = Sessions In Use
3923 = Sessions In Use is the number of database sessions currently open for use by client threads.
3924 = Sessions % Used
3925 = Sessions % Used is the percentage of database sessions currently open for use by client threads.
3926 = No name
3927 = No text
3928 = Table Open Cache % Hit
3929 = Table Open Cache % Hit 是使用缓存架构信息打开的数据库表的百分比。如果此百分比过低，则说明表缓存可能太小。
3930 = No name
3931 = No text
3932 = Table Open Cache Hits/sec
3933 = Table Open Cache Hits/sec 是每秒钟使用缓存架构信息打开的数据库表数。如果此值过低，则说明表缓存可能太小。
3934 = Table Open Cache Misses/sec
3935 = Table Open Cache Misses/sec 是在不使用缓存架构信息的情况下每秒钟打开的数据库表数。如果此值过高，则说明表缓存可能太小。
3936 = Table Opens/sec
3937 = Table Opens/sec 是每秒钟打开的数据库表数。
3938 = Log Bytes Write/sec
3939 = Log Bytes Write per second is the rate bytes are written to the log.
3940 = Log Bytes Generated/sec
3941 = Log Bytes Generated per second 是向日志中添加数据的速率。与每个字节只生成一次而可以多次写入的 Log Bytes Write per second 不同。
3942 = Log Buffer Size
3943 = Log Buffer Size is the amount of memory, in bytes, allocated for the database log buffers.  [Dev Only]
3944 = Log Buffer Bytes Used
3945 = Log Buffer Bytes Used is the amount of bytes in the log buffers that have not yet been flushed to the logs.  [Dev Only]
3946 = Log Buffer Bytes Free
3947 = Log Buffer Bytes Free is the amount of free space available in the log buffers.  [Dev Only]
3948 = Log Threads Waiting
3949 = Log Threads Waiting is the number of threads waiting for their data to be written to the log in order to complete an update of the database.  If this number is too high, the log may be a bottleneck.
3950 = Log File Size
3951 = Log File Size is the size, in bytes, of the database log files.  [Dev Only]
3952 = Log Checkpoint Depth
3953 = Log Checkpoint Depth represents the amount of work, in bytes, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
3954 = Log Generation Checkpoint Depth
3955 = 日志生成检查点深度表示在进程崩溃的情况下需要对数据库文件重做或撤消的工作量(以日志文件数计)。
3956 = Log Generation Checkpoint Depth Target
3957 = Log Generation Checkpoint Depth Target 表示进程崩溃时需要对数据库文件重做或撤消的工作量理想目标(日志文件数)。
3958 = Log Checkpoint Depth as a % of Target
3959 = Log Checkpoint Depth as a % of Target 是一个以检查点深度目标百分比表示的当前检查点深度的表达式。例如，如果当前检查点深度为 5 次生成，检查点深度目标为 4 次生成，则将这种情况报告为目标的 125%。
3960 = No name
3961 = 无文本
3962 = Log Generation Checkpoint Depth Max
3963 = Log Generation Checkpoint Depth Max 表示进程崩溃时需要对数据库文件重做或撤消的最大允许工作量(日志文件数)。
3964 = Log Generation Loss Resiliency Depth
3965 = Log Generation Loss Resiliency Depth 表示用日志文件来计数的工作量，即在进程崩溃的情况下可能丢失但仍允许对数据库文件执行恢复操作(数据丢失)的工作量。
3966 = Log Files Generated
3967 = Log Files Generated 表示自上次初始化实例以来由该实例生成的日志文件总数。
3968 = Log Files Generated Prematurely
3969 = Log Files Generated Prematurely 表示自上次初始化实例以来由该实例生成，且尚未完全被有用数据填满的日志文件总数。在某些情况下，数据库引擎将在日志文件完全被有用数据填满之前选择切换到新的日志文件。
3970 = Log File Current Generation
3971 = Log File Current Generation 提供实例的当前日志文件的生成编号。
3972 = User Read Only Transaction Commits to Level 0/sec
3973 = User Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3974 = User Read/Write Transaction Commits to Level 0/sec
3975 = User Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3976 = User Transaction Commits to Level 0/sec
3977 = User Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3978 = User Read Only Transaction Rollbacks to Level 0/sec
3979 = User Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
3980 = User Read/Write Transaction Rollbacks to Level 0/sec
3981 = User Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
3982 = User Transaction Rollbacks to Level 0/sec
3983 = User Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that access data stored in the database engine.  [Dev Only]
3984 = System Read Only Transaction Commits to Level 0/sec
3985 = System Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3986 = System Read/Write Transaction Commits to Level 0/sec
3987 = System Read/Write Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that modify data stored in the database engine.  [Dev Only]
3988 = System Transaction Commits to Level 0/sec
3989 = System Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that access data stored in the database engine.  [Dev Only]
3990 = System Read Only Transaction Rollbacks to Level 0/sec
3991 = System Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
3992 = System Read/Write Transaction Rollbacks to Level 0/sec
3993 = System Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that modify data stored in the database engine.  [Dev Only]
3994 = System Transaction Rollbacks to Level 0/sec
3995 = System Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that access data stored in the database engine.  [Dev Only]
3996 = Database Page Allocation File Extension Async Consumed/sec
3997 = Database Page Allocation File Extension Async Consumed/sec is the rate of page allocations from a database file that must be serviced by extending the database file, but which do not stall when doing doing so.  [Dev Only]
3998 = Database Page Allocation File Extension Stalls/sec
3999 = Database Page Allocation File Extension Stalls/sec is the rate of page allocations from a database file that must be serviced by extending the database file and which stall when doing so.  [Dev Only]
4000 = Log Records/sec
4001 = Log Records/sec is the count of records written to the database log buffers per second.  [Dev Only]
4002 = Log Buffer Capacity Flushes/sec
4003 = Log Buffer Capacity Flushes/sec is the count of times the database log buffers must be flushed per second because they are full.  [Dev Only]
4004 = Log Buffer Commit Flushes/sec
4005 = Log Buffer Commit Flushes/sec is the count of times the database log buffers must be flushed per second because a transaction is fully committing its changes.  [Dev Only]
4006 = Log Buffer Flushes/sec
4007 = Log Buffer Flushes/sec 是每秒必须刷新数据库日志缓冲区的次数。[仅适用于开发人员]
4008 = Log Writes/sec
4009 = Log Writes/sec 是每秒钟将日志缓冲区写入日志文件的次数。如果此数字接近保存日志文件的媒体最大写入速率，则说明日志可能是一个瓶颈。
4010 = Log Record Stalls/sec
4011 = Log Record Stalls/sec 是由于日志缓冲区已满，每秒钟无法添加到其中的日志记录数。如果此计数器在大多数时间为非零值，则说明日志缓冲区大小可能是一个瓶颈。
4012 = Version buckets allocated
4013 = Total number of version buckets allocated
4014 = Version buckets allocated for deletes
4015 = Total number of version buckets allocated for FlagDelete RCEs  [Dev Only]
4016 = VER Bucket Allocations Wait For Version Cleanup/sec
4017 = VER Bucket Allocations Wait For Version Cleanup/sec is the number of version bucket allocations that must first wait for version cleanup in an attempt to free used version buckets  for re-use. [Dev Only]
4018 = Version store average RCE bookmark length
4019 = Average length of bookmark in RCE  [Dev Only]
4020 = Version store unnecessary calls/sec
4021 = Number of times per second we look in the version store for a node whose version bit is set but which has no versions  [Dev Only]
4022 = Version store cleanup tasks asynchronously dispatched/sec
4023 = Number of times per second a version store clean task is dispatched asynchronously to be performed  [Dev Only]
4024 = Version store cleanup tasks synchronously dispatched/sec
4025 = Number of times per second a version store clean task is performed synchronously  [Dev Only]
4026 = Version store cleanup tasks discarded/sec
4027 = Number of times per second a version store clean task was discarded due to load concerns  [Dev Only]
4028 = Version store cleanup tasks failures/sec
4029 = Number of times per second a dispatched version store cleanup task fails  [Dev Only]
4030 = Record Inserts/sec
4031 = Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
4032 = Record Deletes/sec
4033 = Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
4034 = Record Replaces/sec
4035 = Record Deletes/sec is the rate at which records in database tables are being updated.  [Dev Only]
4036 = Record Unnecessary Replaces/sec
4037 = Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
4038 = Record Redundant Replaces/sec
4039 = Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
4040 = Record Escrow-Updates/sec
4041 = Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
4042 = Secondary Index Inserts/sec
4043 = Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
4044 = Secondary Index Deletes/sec
4045 = Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
4046 = False Index Column Updates/sec
4047 = False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
4048 = False Tuple Index Column Updates/sec
4049 = False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
4050 = Record Intrinsic Long-Values Updated/sec
4051 = Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
4052 = Record Separated Long-Values Added/sec
4053 = Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
4054 = Record Separated Long-Values Forced/sec
4055 = Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
4056 = Record Separated Long-Values All Forced/sec
4057 = Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
4058 = Record Separated Long-Values Reference All/sec
4059 = Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
4060 = Record Separated Long-Values Dereference All/sec
4061 = Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
4062 = Separated Long-Value Seeks/sec
4063 = Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
4064 = Separated Long-Value Retrieves/sec
4065 = Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
4066 = Separated Long-Value Creates/sec
4067 = Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
4068 = Separated Long-Value Updates/sec
4069 = Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
4070 = Separated Long-Value Deletes/sec
4071 = Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
4072 = Separated Long-Value Copies/sec
4073 = Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
4074 = Separated Long-Value Chunk Seeks/sec
4075 = Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
4076 = Separated Long-Value Chunk Retrieves/sec
4077 = Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
4078 = Separated Long-Value Chunk Appends/sec
4079 = Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
4080 = Separated Long-Value Chunk Replaces/sec
4081 = Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
4082 = Separated Long-Value Chunk Deletes/sec
4083 = Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
4084 = Separated Long-Value Chunk Copies/sec
4085 = Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
4086 = B+ Tree Append Splits/sec
4087 = B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
4088 = B+ Tree Right Splits/sec
4089 = B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
4090 = B+ Tree Right Hotpoint Splits/sec
4091 = B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
4092 = B+ Tree Vertical Splits/sec
4093 = B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
4094 = B+ Tree Splits/sec
4095 = B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
4096 = B+ Tree Empty Page Merges/sec
4097 = B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
4098 = B+ Tree Right Merges/sec
4099 = Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
4100 = B+ Tree Partial Merges/sec
4101 = B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
4102 = B+ Tree Left Merges/sec
4103 = B+ Tree Left Merges/sec 是每秒通过将所有记录移动到上一页左侧而从数据库 B+ 树中删除的页数。[仅适用于开发人员]
4104 = B+ Tree Partial Left Merges/sec
4105 = B+ Tree Partial Left Merges/sec 是每秒将某些记录移动到数据库 B+ 树中某页左侧的页数。[仅适用于开发人员]
4106 = B+ Tree Page Moves/sec
4107 = B+ Tree Page Moves/sec 是每秒将所有记录移动到新页的 B+ 树的页数。[仅适用于开发人员]
4108 = B+ Tree Merges/sec
4109 = B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
4110 = B+ Tree Failed Simple Page Cleanup Attempts/sec
4111 = B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
4112 = B+ Tree Seek Short Circuits/sec
4113 = B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
4114 = B+ Tree Opportune Prereads/sec
4115 = B+ Tree Opportune Prereads/sec 是每秒由于与查找操作读取的某个页相邻而预先读取的页数。[仅适用于开发人员]
4116 = B+ Tree Unnecessary Sibling Latches/sec
4117 = B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
4118 = B+ Tree Move Nexts/sec
4119 = B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
4120 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec
4121 = B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
4122 = B+ Tree Move Prevs/sec
4123 = B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
4124 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec
4125 = B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
4126 = B+ Tree Seeks/sec
4127 = B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
4128 = B+ Tree Inserts/sec
4129 = B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
4130 = B+ Tree Replaces/sec
4131 = B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
4132 = B+ Tree Flag Deletes/sec
4133 = B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
4134 = B+ Tree Deletes/sec
4135 = B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
4136 = B+ Tree Appends/sec
4137 = B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
4138 = B+ Tree Creates/sec
4139 = B+ Tree Creates/sec is the number of B+ Trees and their corresponding space trees (if any) created per second.  This can also be viewed as the number of FDP creates per second.  [Dev Only]
4140 = B+ Tree Creates (Total)
4141 = B+ Tree Creates (Total) is the total number of B+ Trees and their corresponding space trees (if any) created.  This can also be viewed as the total number of FDP creates.  [Dev Only]
4142 = B+ Tree Destroys/sec
4143 = B+ Tree Destroys/sec is the number of B+ Trees and their corresponding space trees (if any) destroyed per second.  This can also be viewed as the number of FDP destroys per second.  [Dev Only]
4144 = B+ Tree Destroys (Total)
4145 = B+ Tree Destroys (Total) is the total number of B+ Trees and their corresponding space trees (if any) destroyed.  This can also be viewed as the total number of FDP destroys.  [Dev Only]
4146 = Database Cache Size (MB)
4147 = Database Cache Size (MB) 是数据库缓存管理器用于保存数据库文件中的常用信息以防止文件操作的系统内存数量(以 MB 为单位)。如果数据库缓存太小而无法优化性能以及系统的可用内存太少(请参阅 Memory/Available Bytes)，则添加系统内存可以提高性能。如果系统具有大量可用内存，并且数据库缓存大小未超过特定值，则数据库缓存大小可能被限制在一个较低的值。提高该限制值可以提高性能。
4148 = Database Cache Misses/sec
4149 = Database Cache Misses per second 是由数据库缓存通过导致文件操作而完成数据库文件页请求的速率。如果此速率较高，则说明数据库缓存可能太小。
4150 = Database Cache % Hit
4151 = Database Cache % Hit 是由数据库缓存完成而未导致文件操作的数据库文件页请求的百分比。如果此百分比太低，则说明数据库缓存可能太小。
4152 = No name
4153 = 无文本
4154 = Database Cache Requests/sec
4155 = Database Cache Requests/sec 是从数据库缓存请求页的速率。
4156 = Database Pages Read Async/sec
4157 = Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
4158 = Database Pages Read Sync/sec
4159 = Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
4160 = Database Pages Written/sec
4161 = Database Pages Written/sec is the rate that pages are written to the database file (s) from the database cache.  [Dev Only]
4162 = Database Clean Pages Written/sec
4163 = Database Clean Pages Written/sec 是将页从数据库缓存写入数据库文件的速率。[仅适用于开发人员]
4164 = Database Pages Transferred/sec
4165 = Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
4166 = Database Pages Preread/sec
4167 = Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
4168 = Database Cached Pages Preread/sec
4169 = Database Cached Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that are already cached.  This is non-ideal behavior that represents a waste of processing time.  [Dev Only]
4170 = Database Pages Preread Untouched/sec
4171 = Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time.  [Dev Only]
4172 = Database Pages Versioned/sec
4173 = Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
4174 = Database Pages Version Copied/sec
4175 = Database Pages Version Copied/sec 是将数据库缓存中的页复制到缓存中的新页(为了在数据库文件中该页的当前版本仍在被修改时被异步写入)的速率。此功能主要用于避免刷新顺序依存关系出现循环、分支或长链，而不需要将相关页同步写入磁盘。[仅适用于开发人员]
4176 = Database Pages Ordinarily Written/sec
4177 = Database Pages Ordinarily Written/sec is the rate that pages are written to the database file (s) from the database cache in preparation for evicting them from the cache to make room for other data.  [Dev Only]
4178 = Database Pages Anomalously Written/sec
4179 = Database Pages Anomalously Written/sec is the rate that pages are written to the database file (s) from the database cache before they would ordinarily be written.  [Dev Only]
4180 = Database Pages Opportunely Written/sec
4181 = Database Pages Opportunely Written/sec is the rate that pages are written to the database file (s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of seeks required to write all the pages is reduced.  [Dev Only]
4182 = Database Pages Repeatedly Written/sec
4183 = Database Pages Repeatedly Written/sec is the rate that pages are written to the database file (s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
4184 = Database Pages Idly Written/sec
4185 = Database Pages Idly Written/sec is the rate that pages are written to the database file (s) from the database cache because there is low disk activity.  [Dev Only]
4186 = Database Pages Coalesced Written/sec
4187 = Database Pages Coalesced Written/sec is the rate that pages are written to the database file (s) from the database cache coalesced with another page. [Dev Only]
4188 = Database Pages Coalesced Read/sec
4189 = Database Pages Coalesced Read/sec is the rate that pages are read from the database file (s) to the database cache coalesced with another page. [Dev Only]
4190 = Streaming Backup Pages Read/sec
4191 = Streaming Backup Pages Read/sec 是为了进行流式备份而执行的数据库读取操作的速率。
4192 = Online Defrag Pages Referenced/sec
4193 = Online Defrag Pages Referenced/sec is the rate at which online defragmentation is touching database pages.  [Dev Only]
4194 = Online Defrag Pages Read/sec
4195 = Online Defrag Pages Read/sec is the rate of database read operations being performed by online defragmentation. [Dev Only]
4196 = Online Defrag Pages Preread/sec
4197 = Online Defrag Pages Preread/sec is the rate at which database pages are read in anticipation of future use by online defragmentation.  [Dev Only]
4198 = Online Defrag Pages Dirtied/sec
4199 = Online Defrag Pages Dirtied/sec is the rate at which online defragmentation is modifying clean database pages. [Dev Only]
4200 = Online Defrag Pages Re-Dirtied/sec
4201 = Online Defrag Pages Re-Dirtied/sec is the rate at which online defragmentation is modifying database pages that already contained modifications.  [Dev Only]
4202 = Online Defrag Pages Freed/sec
4203 = Pages Freed/sec 是每秒联机碎片整理进程从数据库释放的页数[仅适用于开发人员]
4204 = Online Defrag Data Moves/sec
4205 = Data Moves/sec 是每秒联机碎片整理进程将数据从一页移动到另一页的次数[仅适用于开发人员]
4206 = Online Defrag Page Moves/sec
4207 = Page Moves/sec 是每秒联机碎片整理进程将数据从一页移动到新页的次数[仅适用于开发人员]
4208 = Online Defrag Log Records/sec
4209 = Online Defrag Log Records/sec is the rate at which online defragmentation is generating log records.  [Dev Only]
4210 = Online Defrag Average Log Bytes
4211 = Online Defrag Average Log Bytes is the average size of the log records being generated by online defragmentation.  [Dev Only]
4212 = No name
4213 = 无文本
4214 = Online Maintenance (DB Scan) Pages Read/sec
4215 = Pages Read/sec 是每秒扫描进程从数据库读取的页数[仅适用于开发人员]
4216 = Online Maintenance (DB Scan) Pages Read
4217 = Pages Read 是扫描进程已从数据库读取的页数[仅适用于开发人员]
4218 = Online Maintenance (DB Scan) Pages Zeroed/sec
4219 = Pages Read/sec 是每秒扫描进程在数据库中清零的页数[仅适用于开发人员]
4220 = Online Maintenance (DB Scan) Pages Zeroed
4221 = Pages Read 是扫描进程已在数据库中清零的页数[仅适用于开发人员]
4222 = Database Tasks Pages Referenced/sec
4223 = Database Tasks Pages Referenced/sec is the rate at which background database tasks are touching database pages. [Dev Only]
4224 = Database Tasks Pages Read/sec
4225 = Database Tasks Pages Read/sec is the rate of database read operations being performed by background database tasks. [Dev Only]
4226 = Database Tasks Pages Preread/sec
4227 = Database Tasks Pages Preread/sec is the rate at which database pages are read in anticipation of future use by background database tasks.  [Dev Only]
4228 = Database Tasks Pages Dirtied/sec
4229 = Database Tasks Pages Dirtied/sec is the rate at which background database tasks are modifying clean database pages. [Dev Only]
4230 = Database Tasks Pages Re-Dirtied/sec
4231 = Database Tasks Pages Re-Dirtied/sec is the rate at which background databases tasks are modifying database pages that already contained modifications.  [Dev Only]
4232 = Database Tasks Log Records/sec
4233 = Database Tasks Log Records/sec is the rate at which background database tasks are generating log records.  [Dev Only]
4234 = Database Tasks Average Log Bytes
4235 = Database Tasks Average Log Bytes is the average size of the log records being generated by background database tasks.  [Dev Only]
4236 = No name
4237 = 无文本
4238 = I/O Database Reads/sec
4239 = I/O Database Reads/sec 是数据库读取操作完成的速率。
4240 = I/O Database Reads Average Latency
4241 = I/O Database Reads Average Latency 是每个数据库读取操作的平均时间长度(以毫秒为单位)。
4242 = No name
4243 = 无文本
4244 = I/O Database Reads Average Bytes
4245 = I/O Database Reads Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
4246 = No name
4247 = 无文本
4248 = I/O Database Reads In Heap
4249 = I/O Database Reads In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4250 = I/O Database Reads Async Pending
4251 = I/O Database Reads Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
4252 = I/O Database Reads Abnormal Latency/sec
4253 = I/O Database Reads Abnormal Latency/sec is the rate of database read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4254 = I/O Log Reads/sec
4255 = I/O Log Reads/sec 是数据库读取操作完成的速率。
4256 = I/O Log Reads Average Latency
4257 = I/O Log Reads Average Latency is the average length of time, in milliseconds, per logfile read operation.  [Dev Only]
4258 = No name
4259 = 无文本
4260 = I/O Log Reads Average Bytes
4261 = I/O Log Reads Average Bytes is the average number of bytes transferred per logfile read operation.  [Dev Only]
4262 = No name
4263 = 无文本
4264 = I/O Log Reads In Heap
4265 = I/O Log Reads In Heap is the number of logfile read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4266 = I/O Log Reads Async Pending
4267 = I/O Log Reads Async Pending is the number of logfile read operations asynchronously pending completion.  [Dev Only]
4268 = I/O Log Reads Abnormal Latency/sec
4269 = I/O Log Reads Abnormal Latency/sec is the rate of logfile read operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4270 = I/O Database Writes/sec
4271 = I/O Database Writes/sec 是数据库写入操作完成的速率。
4272 = I/O Database Writes Average Latency
4273 = I/O Database Writes Average Latency 是每个数据库写入操作的平均时间长度(以毫秒为单位)。
4274 = No name
4275 = 无文本
4276 = I/O Database Writes Average Bytes
4277 = I/O Database Writes Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
4278 = No name
4279 = 无文本
4280 = I/O Database Writes In Heap
4281 = I/O Database Writes In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4282 = I/O Database Writes Async Pending
4283 = I/O Database Writes Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
4284 = I/O Database Writes Abnormal Latency/sec
4285 = I/O Database Writes Abnormal Latency/sec is the rate of database write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4286 = I/O Log Writes/sec
4287 = I/O Log Writes/sec 是日志文件写入操作完成的速率。
4288 = I/O Log Writes Average Latency
4289 = I/O Log Writes Average Latency 是每个日志文件写入操作的平均时间长度(以毫秒为单位)。
4290 = No name
4291 = 无文本
4292 = I/O Log Writes Average Bytes
4293 = I/O Log Writes Average Bytes is the average number of bytes transferred per logfile write operation.  [Dev Only]
4294 = No name
4295 = 无文本
4296 = I/O Log Writes In Heap
4297 = I/O Log Writes In Heap is the number of logfile write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
4298 = I/O Log Writes Async Pending
4299 = I/O Log Writes Async Pending is the number of logfile write operations asynchronously pending completion.  [Dev Only]
4300 = I/O Log Writes Abnormal Latency/sec
4301 = I/O Log Writes Abnormal Latency/sec is the rate of logfile write operations that take an abnormally long length of time (default is 1 minute) to be serviced by the OS.  [Dev Only]
4302 = Record Failed Compression Bytes/sec
4303 = Record Failed Compression Bytes/sec 是 Xpress 压缩失败或未显著减小插入/替换大小(10% 或更低)时记录字节的速率。结果较高表示浪费了 CPU 资源。[仅适用于开发人员]
4304 = 分布式事务处理协调器
4305 = Microsoft 分布式事务协调器性能计数器
4306 = 活动事务
4307 = 当前活动的事务数
4308 = 提交的事务
4309 = 提交的事务数
4310 = 中止的事务
4311 = 中止的事务数
4312 = 不确定的事务
4313 = 不确定的事务数
4314 = 活动事务最大数量
4315 = 同时处于活动状态的事务数的最大值
4316 = 强制提交的事务
4317 = 由系统管理员提交的事务数
4318 = 强制中止的事务
4319 = 由系统管理员中止的事务数
4320 = 响应时间 -- 最短
4321 = 事务开始和提交的时间差的最小值
4322 = 响应时间 -- 中等
4323 = 事务开始和提交的时间差的平均值
4324 = 响应时间 -- 最长
4325 = 事务开始和提交的时间差的最大值
4326 = 事务数/秒
4327 = 每秒执行的事务
4328 = 提交的事务数/秒
4329 = 每秒提交的事务
4330 = 中止的事务数/秒
4331 = 每秒中止的事务
4332 = Terminal Services Session
4333 = 每次终端服务会话资源监督。
4334 = 输入 WdByte
4335 = 在删除了所有协议支付之后在这个会话上的字节输入数目。
4336 = 输入 WdFrame
4337 = 在删除了任何额外的协议添加帧之后的帧输入数目。
4338 = 输入 WaitForOutBuf
4339 = 由协议从客户机方面所做的等候可用发送缓冲器的次数。
4340 = 输入帧
4341 = 在这次会话中输入的帧(数据包)的数目。
4342 = 输入字节
4343 = 在这个会话上包括的所有协议支出的输入字节数。
4344 = 输入压缩字节
4345 = 在压缩后输入的字节数。这个数字与所有输入字符的比为压缩比率。
4346 = 输入压缩刷新
4347 = 输入压缩字典数的闪存。当数据不能压缩时，压缩字典闪存以便新的数据可以有更好的机会被压缩。某些造成数据不能压缩的原因包括通过客户驱动器映射传送压缩的文件。
4348 = 输入错误
4349 = 所有类型的输入错误。某些实例输入错误为丢失 ACK、格式错误的数据包等。
4350 = 输入超时
4351 = 从客户连接方面看到的在通讯线上的超时总数。造成这些的常见原因是线路杂音。在某些高超时的网络上这可能是由于协议超时太短而造成的。在这类线上增加协议超时可减少不需要的再传输将改善操作。
4352 = 输入异步帧错误
4353 = 输入异步帧错误数目。传输线路杂音可以造成这些错误。在某些情况下使用规格小一点的数据包会好些。
4354 = 输入异步溢出
4355 = 输入异步溢出数目。如果波特率快于计算机可以处理的速度，或使用了一个不是16550的串行线就会引起这类错误。如果在同一时间有太多的高速串行线同时活动，超过处理器的能力也会出现超限现象。
4356 = 输入异步溢出
4357 = 输入异步溢出的数字。主机上的缓冲器空间不足会引起这些错误。
4358 = 输入异步奇偶校验错误
4359 = 输入异步效验错误数目。有杂音的传输线路会造成这些错误。
4360 = 输入传输错误
4361 = 输入时终端服务传输层的错误数目。
4362 = 输出 WdByte 数
4363 = 删除了所有协议支付之后在这个会话上的字节输出数目。
4364 = 输出 WdFrame 数
4365 = 在删除了任何额外的协议添加帧之后的帧输出数目。
4366 = 输出 WaitForOutBuf
4367 = 由协议从客户机方面的连接所做的等候可用发送缓冲器的次数。
4368 = 输出帧数
4369 = 在这次会话中输出的帧(数据包)的数目。
4370 = 输出字节数
4371 = 在这个会话上包括的所有协议支出的输出字节数。
4372 = 输出压缩字节数
4373 = 在压缩后输出的字节数。这个数字与所有输入字符的比为压缩比率。
4374 = 输出压缩刷新
4375 = 输出压缩字典数的闪存。当数据不能压缩时，压缩字典闪存以便新的数据可以有更好的机会被压缩。某些造成数据不能压缩的原因包括通过客户驱动器映射传送压缩的文件。
4376 = 输出错误
4377 = 所有类型的输出错误。某些实例输出错误为丢失 ACK、格式错误的数据包等。
4378 = 输出超时
4379 = 从客户连接方面看到的在通讯线上的超时总数。造成这些的常见原因是线路杂音。在某些等候率高的网络上这可能是由于协议超时太短而造成的。在这类线上增加协议超时可减少不需要的再传输将改善操作。
4380 = 输出异步帧错误
4381 = 输出异步帧错误数目。传输线路杂音可以造成这些错误。在某些情况下使用规格小一点的数据包会好些。
4382 = 输出异步溢出
4383 = 输出异步超限错误数目。
4384 = 输出异步溢出
4385 = 输出异步溢出错误数目。
4386 = 输出异步奇偶校验错误
4387 = 输出异步效验错误数目。硬件和线路问题可能造成这些错误。
4388 = 输出传输错误
4389 = 输出时终端服务传输层的错误数目。
4390 = 总计 WdByte 数
4391 = 删除了所有协议支付之后在这个会话上的总字节数。
4392 = 总计 WdFrame 数
4393 = 删除了任何额外的协议添加帧之后的帧输入总数。
4394 = 总计 WaitForOutBuf
4395 = 由协议从客户机和服务器双方所做的等候可用发送缓冲器的次数。
4396 = 总计帧数
4397 = 在这次会话中输入的帧(数据包)的总数。
4398 = 字节总数
4399 = 在这个会话上包括的所有协议支出的字节总数。
4400 = 总计压缩字节数
4401 = 在压缩后字节的总数。这个数字与所有字符总数的比为压缩比率。
4402 = 总计压缩刷新数
4403 = 压缩字典数的闪存总数。当数据不能压缩时，压缩字典闪存以便新的数据可以有更好的机会被压缩。某些造成数据不能压缩的原因包括通过客户驱动器映射传送压缩的文件。
4404 = 错误总数
4405 = 所有类型的错误总数。某些实例错误为丢失 ACK、格式错误的数据包等。
4406 = 总计超时数
4407 = 从客户机和主机双方连接方面看到的在通讯线上的超时总数。造成这些的常见原因是线路杂音。在某些等候率高的网络上这可能是由于协议超时太短而造成的。在这类线上增加协议超时可减少不需要的再传输将改善操作。
4408 = 总计异步帧错误
4409 = 异步帧错误总数。传输线路杂音可以造成这些错误。在某些情况下使用规格小一点的数据包会好些。
4410 = 总计异步溢出
4411 = 异步超限错误总数。如果波特率快于计算机可以处理的速度，或使用了一个不是 16550 的串行线就会引起这类错误。如果在同一时间有太多的高速串行线同时活动，超过处理器的能力也会出现超限现象。
4412 = 总计异步溢出
4413 = 异步溢出的总数。主机上的缓冲器空间不足会引起这些错误。
4414 = 总计异步奇偶校验错误
4415 = 异步效验错误总数。有杂音的传输线路会造成这些错误。
4416 = 总计传输错误数
4417 = 终端服务传输层的错误总数。
4418 = 总计协议缓存读数
4419 = 对所有协议缓存的参照总数。
4420 = 总计协议缓存命中数
4421 = 协议缓存命中总数。可能被重新使用以便避免在传输线路上重新发送的协议缓存 Windows 对象。对象的实例为 Windows 图标和刷子。在缓存中的命中次数代表不需要重新发送的对象。
4422 = 总计协议缓存命中比率
4423 = 所有协议缓存的总体命中比率。
4424 = 协议位图缓存读数
4425 = 对协议位图缓存的参照数。
4426 = 协议位图缓存命中数
4427 = 在协议位图缓存中的命中数目。
4428 = 协议位图缓存命中比率
4429 = 在协议位图缓存中的命中比率。由于数据传输下降，命中比率高表示操作好。命中比率低是由于屏幕进行不能重新使用的或从客户缓存中转储的消息更新而造成的。
4430 = 协议字形缓存读数
4431 = 对协议 Glyph 缓存读取的参照数。
4432 = 协议字形缓存命中数
4433 = 在协议 Glyph 缓存中的命中数目。
4434 = 协议字形缓存命中比率
4435 = 在协议 Glyph 缓存中的命中比率。由于数据传输下降，命中比率高表示操作好。命中比率低是由于屏幕进行不能重新使用的或从客户缓存中转储的消息更新而造成的。
4436 = 协议刷子缓存读数
4437 = 对协议刷子缓存读取的参照数。
4438 = 协议刷子缓存命中数
4439 = 在协议刷子缓存中的命中数目。
4440 = 协议刷子缓存命中比率
4441 = 在协议刷子缓存中的命中比率。由于数据传输下降，命中比率高表示操作好。命中比率低是由于屏幕进行不能重新使用的或从客户缓存中转储的消息更新而造成的。
4442 = 协议保存屏幕位图缓存读数
4443 = 对协议保存屏幕位图缓存读取的参照数。
4444 = 协议保存屏幕图位缓存命中数
4445 = 在协议保存屏幕位图缓存中的命中数目。
4446 = 协议保存屏幕位图缓存命中比率
4447 = 在协议保存屏幕位图缓存中的命中比率。由于数据传输下降，命中比率高表示操作好。命中比率低是由于屏幕进行不能重新使用的或从客户缓存中转储的消息更新而造成的。
4448 = 输入压缩比率
4449 = 服务器输入数据流的压缩比率。
4450 = 输出压缩比率
4451 = 服务器输出数据流的压缩比率。
4452 = 总计压缩比率
4453 = 服务器数据流的总压缩比率。
4950 = Bulk Bytes/Sec
4951 = 显示当前批量传输速率(字节/秒)。
4952 = Isochronous Bytes/Sec
4953 = 显示当前常时等量传输速率(字节/秒)。
4954 = Interrupt Bytes/Sec
4955 = 显示当前中断传输速率(字节/秒)。
4956 = Control Data Bytes/Sec
4957 = 显示当前控制传输速率(字节/秒)。
4958 = Controller PCI Interrupts/Sec
4959 = 显示 USB 控制器生成 PCI 中断的速率。仅限于控制器实例。
4960 = Controller WorkSignals/Sec
4961 = 显示 usbport 驱动程序每秒生成的当前速率工作信号。仅限于控制器实例。
4962 = % Total Bandwidth Used for Interrupt
4963 = 显示中断传输保留的 BW 的百分比
4964 = % Total Bandwidth Used for Iso
4965 = 显示 ISO 传输保留的 BW 的百分比
4966 = USB
4967 = USB I/O 计数器
4968 = Avg. Bytes/Transfer
4969 = 显示所有传输 URB 的平均大小。仅限于设备实例。
4970 = Iso Packet Errors/Sec
4971 = 时间不晚但以错误状态完成的 ISO 数据包数。仅限于设备实例。
4972 = Avg ms latency for ISO transfers
4973 = 计划时，ISO 传输的开始帧和当前帧之间的平均毫秒数。仅限于设备实例。
4974 = Transfer Errors/Sec
4975 = 以错误状态完成的传输 URB 数。仅限于设备实例。
4976 = Host Controller Idle
4977 = 如果主机控制器未运行(空闲)，则为非零值。
4978 = Host Controller Async Idle
4979 = 如果主机控制器异步计划未运行(空闲)，则为非零值。
4980 = Host Controller Async Cache Flush Count
4981 = 每次刷新控制器异步缓存时，就会递增。
4982 = Host Controller Periodic Idle
4983 = 如果周期计划未运行(空闲)，则为非零。
4984 = Host Controller Periodic Cache Flush Count
4985 = 每次刷新控制器定期缓存时，就会递增。
4986 = .NET CLR Networking
4987 = Help not available.
4988 = Connections Established
4989 = The cumulative total number of socket connections established for this process since the process was started.
4990 = Bytes Received
4991 = The cumulative total number of bytes received over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
4992 = Bytes Sent
4993 = The cumulative total number of bytes sent over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
4994 = Datagrams Received
4995 = The cumulative total number of datagram packets received since the process was started.
4996 = Datagrams Sent
4997 = The cumulative total number of datagram packets sent since the process was started.
4998 = .NET Data Provider for SqlServer
4999 = 用于 System.Data.SqlClient 的计数器
5000 = HardConnectsPerSecond
5001 = 每秒钟连接到服务器的实际连接数
5002 = HardDisconnectsPerSecond
5003 = 每秒钟与服务器断开连接的实际连接数
5004 = SoftConnectsPerSecond
5005 = 每秒钟从缓冲池中获取的连接数
5006 = SoftDisconnectsPerSecond
5007 = 每秒钟返回缓冲池的连接数
5008 = NumberOfNonPooledConnections
5009 = 当前未使用连接池的连接数
5010 = NumberOfPooledConnections
5011 = 由连接池程序管理的连接数
5012 = NumberOfActiveConnectionPoolGroups
5013 = 唯一连接字符串数
5014 = NumberOfInactiveConnectionPoolGroups
5015 = 等待剪切的唯一连接字符串数
5016 = NumberOfActiveConnectionPools
5017 = 活动连接池数
5018 = NumberOfInactiveConnectionPools
5019 = 非活动连接池数
5020 = NumberOfActiveConnections
5021 = 当前正在使用的连接数
5022 = NumberOfFreeConnections
5023 = 当前可使用的连接数
5024 = NumberOfStasisConnections
5025 = 当前尚未准备就绪的连接数
5026 = NumberOfReclaimedConnections
5027 = 从 GCed 外部连接中回收的连接数
5028 = .NET CLR Data
5029 = .Net CLR 数据
5030 = SqlClient: Current # pooled and nonpooled connections
5031 = 当前已进入或未进入缓冲池的连接数。
5032 = SqlClient: Current # pooled connections
5033 = 当前与进程关联的所有缓冲池中的连接数。
5034 = SqlClient: Current # connection pools
5035 = 当前与进程关联的缓冲池数。
5036 = SqlClient: Peak # pooled connections
5037 = 自进程开始以来，所有缓冲池中的最大连接数。
5038 = SqlClient: Total # failed connects
5039 = 由于任何原因而失败的打开连接尝试总数。
5040 = SqlClient: Total # failed commands
5041 = 由于任何原因而失败的命令执行总数。
5042 = .NET CLR Memory
5043 = Counters for CLR Garbage Collected heap.
5044 = # Gen 0 Collections
5045 = This counter displays the number of times the generation 0 objects (youngest; most recently allocated) are garbage collected (Gen 0 GC) since the start of the application. Gen 0 GC occurs when the available memory in generation 0 is not sufficient to satisfy an allocation request. This counter is incremented at the end of a Gen 0 GC. Higher generation GCs include all lower generation GCs. This counter is explicitly incremented when a higher generation (Gen 1 or Gen 2) GC occurs. _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
5046 = # Gen 1 Collections
5047 = This counter displays the number of times the generation 1 objects are garbage collected since the start of the application. The counter is incremented at the end of a Gen 1 GC. Higher generation GCs include all lower generation GCs. This counter is explicitly incremented when a higher generation (Gen 2) GC occurs. _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
5048 = # Gen 2 Collections
5049 = This counter displays the number of times the generation 2 objects (older) are garbage collected since the start of the application. The counter is incremented at the end of a Gen 2 GC (also called full GC). _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
5050 = Promoted Memory from Gen 0
5051 = This counter displays the bytes of memory that survive garbage collection (GC) and are promoted from generation 0 to generation 1; objects that are promoted just because they are waiting to be finalized are not included in this counter. This counter displays the value observed at the end of the last GC; its not a cumulative counter.
5052 = Promoted Memory from Gen 1
5053 = This counter displays the bytes of memory that survive garbage collection (GC) and are promoted from generation 1 to generation 2; objects that are promoted just because they are waiting to be finalized are not included in this counter. This counter displays the value observed at the end of the last GC; its not a cumulative counter. This counter is reset to 0 if the last GC was a Gen 0 GC only.
5054 = Gen 0 Promoted Bytes/Sec
5055 = This counter displays the bytes per second that are promoted from generation 0 (youngest) to generation 1; objects that are promoted just because they are waiting to be finalized are not included in this counter. Memory is promoted when it survives a garbage collection. This counter was designed as an indicator of relatively long-lived objects being created per sec. This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5056 = Gen 1 Promoted Bytes/Sec
5057 = This counter displays the bytes per second that are promoted from generation 1 to generation 2 (oldest); objects that are promoted just because they are waiting to be finalized are not included in this counter. Memory is promoted when it survives a garbage collection. Nothing is promoted from generation 2 since it is the oldest. This counter was designed as an indicator of very long-lived objects being created per sec. This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5058 = Promoted Finalization-Memory from Gen 0
5059 = This counter displays the bytes of memory that are promoted from generation 0 to generation 1 just because they are waiting to be finalized. This counter displays the value observed at the end of the last GC; its not a cumulative counter.
5060 = Process ID
5061 = This counter displays the process ID of the CLR process instance being monitored.
5062 = Gen 0 heap size
5063 = This counter displays the maximum bytes that can be allocated in generation 0 (Gen 0); its does not indicate the current number of bytes allocated in Gen 0. A Gen 0 GC is triggered when the allocations since the last GC exceed this size. The Gen 0 size is tuned by the Garbage Collector and can change during the execution of the application. At the end of a Gen 0 collection the size of the Gen 0 heap is infact 0 bytes; this counter displays the size (in bytes) of allocations that would trigger the next Gen 0 GC. This counter is updated at the end of a GC; its not updated on every allocation.
5064 = Gen 1 heap size
5065 = This counter displays the current number of bytes in generation 1 (Gen 1); this counter does not display the maximum size of Gen 1. Objects are not directly allocated in this generation; they are promoted from previous Gen 0 GCs. This counter is updated at the end of a GC; its not updated on every allocation.
5066 = Gen 2 heap size
5067 = This counter displays the current number of bytes in generation 2 (Gen 2). Objects are not directly allocated in this generation; they are promoted from Gen 1 during previous Gen 1 GCs. This counter is updated at the end of a GC; its not updated on every allocation.
5068 = Large Object Heap size
5069 = This counter displays the current size of the Large Object Heap in bytes. Objects greater than 20 KBytes are treated as large objects by the Garbage Collector and are directly allocated in a special heap; they are not promoted through the generations. This counter is updated at the end of a GC; its not updated on every allocation.
5070 = Finalization Survivors
5071 = This counter displays the number of garbage collected objects that survive a collection because they are waiting to be finalized. If these objects hold references to other objects then those objects also survive but are not counted by this counter; the "Promoted Finalization-Memory from Gen 0" and "Promoted Finalization-Memory from Gen 1" counters represent all the memory that survived due to finalization. This counter is not a cumulative counter; its updated at the end of every GC with count of the survivors during that particular GC only. This counter was designed to indicate the extra overhead that the application might incur because of finalization.
5072 = # GC Handles
5073 = This counter displays the current number of GC Handles in use. GCHandles are handles to resources external to the CLR and the managed environment. Handles occupy small amounts of memory in the GCHeap but potentially expensive unmanaged resources.
5074 = Allocated Bytes/sec
5075 = This counter displays the rate of bytes per second allocated on the GC Heap. This counter is updated at the end of every GC; not at each allocation. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5076 = # Induced GC
5077 = This counter displays the peak number of times a garbage collection was performed because of an explicit call to GC.Collect. Its a good practice to let the GC tune the frequency of its collections.
5078 = % Time in GC
5079 = % Time in GC is the percentage of elapsed time that was spent in performing a garbage collection (GC) since the last GC cycle. This counter is usually an indicator of the work done by the Garbage Collector on behalf of the application to collect and compact memory. This counter is updated only at the end of every GC and the counter value reflects the last observed value; its not an average.
5080 = Not Displayed
5081 = Not Displayed.
5082 = # Bytes in all Heaps
5083 = This counter is the sum of four other counters; Gen 0 Heap Size; Gen 1 Heap Size; Gen 2 Heap Size and the Large Object Heap Size. This counter indicates the current memory allocated in bytes on the GC Heaps.
5084 = # Total committed Bytes
5085 = This counter displays the amount of virtual memory (in bytes) currently committed by the Garbage Collector. (Committed memory is the physical memory for which space has been reserved on the disk paging file).
5086 = # Total reserved Bytes
5087 = This counter displays the amount of virtual memory (in bytes) currently reserved by the Garbage Collector. (Reserved memory is the virtual memory space reserved for the application but no disk or main memory pages have been used.)
5088 = # of Pinned Objects
5089 = This counter displays the number of pinned objects encountered in the last GC. This counter tracks the pinned objects only in the heaps that were garbage collected e.g. a Gen 0 GC would cause enumeration of pinned objects in the generation 0 heap only. A pinned object is one that the Garbage Collector cannot move in memory.
5090 = # of Sink Blocks in use
5091 = This counter displays the current number of sync blocks in use. Sync blocks are per-object data structures allocated for storing synchronization information. Sync blocks hold weak references to managed objects and need to be scanned by the Garbage Collector. Sync blocks are not limited to storing synchronization information and can also store COM interop metadata. This counter was designed to indicate performance problems with heavy use of synchronization primitives.
5092 = .NET CLR Loading
5093 = Statistics for CLR Class Loader.
5094 = Total Classes Loaded
5095 = This counter displays the cumulative number of classes loaded in all Assemblies since the start of this application.
5096 = % Time Loading
5097 = Reserved for future use.
5098 = Assembly Search Length
5099 = Reserved for future use.
5100 = Total # of Load Failures
5101 = This counter displays the peak number of classes that have failed to load since the start of the application. These load failures could be due to many reasons like inadequate security or illegal format. Full details can be found in the profiling services help.
5102 = Rate of Load Failures
5103 = This counter displays the number of classes that failed to load per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval. These load failures could be due to many reasons like inadequate security or illegal format. Full details can be found in the profiling services help.
5104 = Bytes in Loader Heap
5105 = This counter displays the current size (in bytes) of the memory committed by the class loader across all AppDomains. (Committed memory is the physical memory for which space has been reserved on the disk paging file.)
5106 = Total appdomains unloaded
5107 = This counter displays the total number of AppDomains unloaded since the start of the application. If an AppDomain is loaded and unloaded multiple times this counter would count each of those unloads as separate.
5108 = Rate of appdomains unloaded
5109 = This counter displays the number of AppDomains unloaded per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5110 = Current Classes Loaded
5111 = This counter displays the current number of classes loaded in all Assemblies.
5112 = Rate of Classes Loaded
5113 = This counter displays the number of classes loaded per second in all Assemblies. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5114 = Current appdomains
5115 = This counter displays the current number of AppDomains loaded in this application. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process.
5116 = Total Appdomains
5117 = This counter displays the peak number of AppDomains loaded since the start of this application. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process.
5118 = Rate of appdomains
5119 = This counter displays the number of AppDomains loaded per second. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5120 = Current Assemblies
5121 = This counter displays the current number of Assemblies loaded across all AppDomains in this application. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain.
5122 = Total Assemblies
5123 = This counter displays the total number of Assemblies loaded since the start of this application. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain.
5124 = Rate of Assemblies
5125 = This counter displays the number of Assemblies loaded across all AppDomains per second. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5126 = .NET CLR Jit
5127 = Stats for CLR Jit.
5128 = # of Methods Jitted
5129 = This counter displays the total number of methods compiled Just-In-Time (JIT) by the CLR JIT compiler since the start of the application. This counter does not include the pre-jitted methods.
5130 = # of IL Bytes Jitted
5131 = This counter displays the total IL bytes jitted since the start of the application. This counter is exactly equivalent to the "Total # of IL Bytes Jitted" counter.
5132 = Total # of IL Bytes Jitted
5133 = This counter displays the total IL bytes jitted since the start of the application. This counter is exactly equivalent to the "# of IL Bytes Jitted" counter.
5134 = IL Bytes Jitted / sec
5135 = This counter displays the rate at which IL bytes are jitted per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5136 = Standard Jit Failures
5137 = This counter displays the peak number of methods the JIT compiler has failed to JIT since the start of the application. This failure can occur if the IL cannot be verified or if there was an internal error in the JIT compiler.
5138 = % Time in Jit
5139 = This counter displays the percentage of elapsed time spent in JIT compilation since the last JIT compilation phase. This counter is updated at the end of every JIT compilation phase. A JIT compilation phase is the phase when a method and its dependencies are being compiled.
5140 = Not Displayed
5141 = Not Displayed.
5142 = .NET CLR Interop
5143 = Stats for CLR interop.
5144 = # of CCWs
5145 = This counter displays the current number of Com-Callable-Wrappers (CCWs). A CCW is a proxy for the .NET managed object being referenced from unmanaged COM client(s). This counter was designed to indicate the number of managed objects being referenced by unmanaged COM code.
5146 = # of Stubs
5147 = This counter displays the current number of stubs created by the CLR. Stubs are responsible for marshalling arguments and return values from managed to unmanaged code and vice versa; during a COM Interop call or PInvoke call.
5148 = # of marshalling
5149 = This counter displays the total number of times arguments and return values have been marshaled from managed to unmanaged code and vice versa since the start of the application. This counter is not incremented if the stubs are inlined. (Stubs are responsible for marshalling arguments and return values). Stubs usually get inlined if the marshalling overhead is small.
5150 = # of TLB imports / sec
5151 = Reserved for future use.
5152 = # of TLB exports / sec
5153 = Reserved for future use.
5154 = .NET CLR LocksAndThreads
5155 = Stats for CLR Locks and Threads.
5156 = Total # of Contentions
5157 = This counter displays the total number of times threads in the CLR have attempted to acquire a managed lock unsuccessfully. Managed locks can be acquired in many ways; by the "lock" statement in C# or by calling System.Monitor.Enter or by using MethodImplOptions.Synchronized custom attribute.
5158 = Contention Rate / sec
5159 = Rate at which threads in the runtime attempt to acquire a managed lock unsuccessfully. Managed locks can be acquired in many ways; by the "lock" statement in C# or by calling System.Monitor.Enter or by using MethodImplOptions.Synchronized custom attribute.
5160 = Current Queue Length
5161 = This counter displays the total number of threads currently waiting to acquire some managed lock in the application. This counter is not an average over time; it displays the last observed value.
5162 = Queue Length Peak
5163 = This counter displays the total number of threads that waited to acquire some managed lock since the start of the application.
5164 = Queue Length / sec
5165 = This counter displays the number of threads per second waiting to acquire some lock in the application. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5166 = # of current logical Threads
5167 = This counter displays the number of current .NET thread objects in the application. A .NET thread object is created either by new System.Threading.Thread or when an unmanaged thread enters the managed environment. This counters maintains the count of both running and stopped threads. This counter is not an average over time; it just displays the last observed value.
5168 = # of current physical Threads
5169 = This counter displays the number of native OS threads created and owned by the CLR to act as underlying threads for .NET thread objects. This counters value does not include the threads used by the CLR in its internal operations; it is a subset of the threads in the OS process.
5170 = # of current recognized threads
5171 = This counter displays the number of threads that are currently recognized by the CLR; they have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice.
5172 = # of total recognized threads
5173 = This counter displays the total number of threads that have been recognized by the CLR since the start of this application; these threads have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice.
5174 = rate of recognized threads / sec
5175 = This counter displays the number of threads per second that have been recognized by the CLR; these threads have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5176 = .NET CLR Security
5177 = Stats for CLR Security.
5178 = Total Runtime Checks
5179 = This counter displays the total number of runtime Code Access Security (CAS) checks performed since the start of the application. Runtime CAS checks are performed when a caller makes a call to a callee demanding a particular permission; the runtime check is made on every call by the caller; the check is done by examining the current thread stack of the caller. This counter used together with "Stack Walk Depth" is indicative of performance penalty for security checks.
5180 = % Time Sig. Authenticating
5181 = Reserved for future use.
5182 = # Link Time Checks
5183 = This counter displays the total number of linktime Code Access Security (CAS) checks since the start of the application. Linktime CAS checks are performed when a caller makes a call to a callee demanding a particular permission at JIT compile time; linktime check is performed once per caller. This count is not indicative of serious performance issues; its indicative of the security system activity.
5184 = % Time in RT checks
5185 = This counter displays the percentage of elapsed time spent in performing runtime Code Access Security (CAS) checks since the last such check. CAS allows code to be trusted to varying degrees and enforces these varying levels of trust depending on code identity. This counter is updated at the end of a runtime security check; it represents the last observed value; its not an average.
5186 = Not Displayed
5187 = Not Displayed.
5188 = Stack Walk Depth
5189 = This counter displays the depth of the stack during that last runtime Code Access Security check. Runtime Code Access Security check is performed by crawling the stack. This counter is not an average; it just displays the last observed value.
5190 = .NET CLR Remoting
5191 = Stats for CLR Remoting.
5192 = Remote Calls/sec
5193 = This counter displays the number of remote procedure calls invoked per second. A remote procedure call is a call on any object outside the caller;s AppDomain. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5194 = Channels
5195 = This counter displays the total number of remoting channels registered across all AppDomains since the start of the application. Channels are used to transport messages to and from remote objects.
5196 = Context Proxies
5197 = This counter displays the total number of remoting proxy objects created in this process since the start of the process. Proxy object acts as a representative of the remote objects and ensures that all calls made on the proxy are forwarded to the correct remote object instance.
5198 = Context-Bound Classes Loaded
5199 = This counter displays the current number of context-bound classes loaded. Classes that can be bound to a context are called context-bound classes; context-bound classes are marked with Context Attributes which provide usage rules for synchronization; thread affinity; transactions etc.
5200 = Context-Bound Objects Alloc / sec
5201 = This counter displays the number of context-bound objects allocated per second. Instances of classes that can be bound to a context are called context-bound objects; context-bound classes are marked with Context Attributes which provide usage rules for synchronization; thread affinity; transactions etc. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5202 = Contexts
5203 = This counter displays the current number of remoting contexts in the application. A context is a boundary containing a collection of objects with the same usage rules like synchronization; thread affinity; transactions etc.
5204 = Total Remote Calls
5205 = This counter displays the total number of remote procedure calls invoked since the start of this application. A remote procedure call is a call on any object outside the caller;s AppDomain.
5206 = .NET CLR Exceptions
5207 = Runtime statistics on CLR exception handling.
5208 = # of Exceps Thrown
5209 = This counter displays the total number of exceptions thrown since the start of the application. These include both .NET exceptions and unmanaged exceptions that get converted into .NET exceptions e.g. null pointer reference exception in unmanaged code would get re-thrown in managed code as a .NET System.NullReferenceException; this counter includes both handled and unhandled exceptions. Exceptions that are re-thrown would get counted again. Exceptions should only occur in rare situations and not in the normal control flow of the program.
5210 = # of Exceps Thrown / sec
5211 = This counter displays the number of exceptions thrown per second. These include both .NET exceptions and unmanaged exceptions that get converted into .NET exceptions e.g. null pointer reference exception in unmanaged code would get re-thrown in managed code as a .NET System.NullReferenceException; this counter includes both handled and unhandled exceptions. Exceptions should only occur in rare situations and not in the normal control flow of the program; this counter was designed as an indicator of potential performance problems due to large (>100s) rate of exceptions thrown. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5212 = # of Filters / sec
5213 = This counter displays the number of .NET exception filters executed per second. An exception filter evaluates whether an exception should be handled or not. This counter tracks the rate of exception filters evaluated; irrespective of whether the exception was handled or not. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5214 = # of Finallys / sec
5215 = This counter displays the number of finally blocks executed per second. A finally block is guaranteed to be executed regardless of how the try block was exited. Only the finally blocks that are executed for an exception are counted; finally blocks on normal code paths are not counted by this counter. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5216 = Throw To Catch Depth / sec
5217 = This counter displays the number of stack frames traversed from the frame that threw the .NET exception to the frame that handled the exception per second. This counter resets to 0 when an exception handler is entered; so nested exceptions would show the handler to handler stack depth. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
5218 = .NET Data Provider for Oracle
5219 = 用于 System.Data.OracleClient 的计数器
5220 = HardConnectsPerSecond
5221 = 每秒钟连接到服务器的实际连接数
5222 = HardDisconnectsPerSecond
5223 = 每秒钟与服务器断开连接的实际连接数
5224 = SoftConnectsPerSecond
5225 = 每秒钟从缓冲池中获取的连接数
5226 = SoftDisconnectsPerSecond
5227 = 每秒钟返回缓冲池的连接数
5228 = NumberOfNonPooledConnections
5229 = 当前未使用连接池的连接数
5230 = NumberOfPooledConnections
5231 = 由连接池程序管理的连接数
5232 = NumberOfActiveConnectionPoolGroups
5233 = 唯一连接字符串数
5234 = NumberOfInactiveConnectionPoolGroups
5235 = 等待剪切的唯一连接字符串数
5236 = NumberOfActiveConnectionPools
5237 = 活动连接池数
5238 = NumberOfInactiveConnectionPools
5239 = 非活动连接池数
5240 = NumberOfActiveConnections
5241 = 当前正在使用的连接数
5242 = NumberOfFreeConnections
5243 = 当前可使用的连接数
5244 = NumberOfStasisConnections
5245 = 当前尚未准备就绪的连接数
5246 = NumberOfReclaimedConnections
5247 = 从 GCed 外部连接中回收的连接数
5354 = Search Gatherer Projects
5355 = Windows Search Service Gatherer Project 对象计数器
5356 = Document Additions
5357 = 添加的通知数。
5358 = Document Add Rate
5359 = 每秒钟文档增加的个数。
5360 = Document Deletes
5361 = 删除的通知数。
5362 = Document Delete Rate
5363 = 每秒钟文档删除的个数。
5364 = Document Modifies
5365 = 修改的通知数。
5366 = Document Modifies Rate
5367 = 每秒钟文档修改的个数。
5368 = Waiting Documents
5369 = 等待处理的文档数。当该数目达到 0 时，编录为空闲。该数目表示 gatherer 中未处理文档的队列总大小。
5370 = Documents In Progress
5371 = 正在处理的文档数。
5372 = Documents On Hold
5373 = 由于与当前正在处理的文档有相同 URL 而被停住的文档数。
5374 = Delayed Documents
5375 = 由于网站点击频率规则而延迟的文档数。
5376 = URLs in History
5377 = 历史列表中的文件(URLs)数。这表示您的已编制索引的文档集的总大小。
5378 = Processed Documents
5379 = 自从历史被重置后处理的文档数。
5380 = Processed Documents Rate
5381 = 每秒钟处理的文档数。
5382 = Status Success
5383 = 成功筛选的文档数。
5384 = Success Rate
5385 = 每秒钟成功筛选的文档数。
5386 = Status Error
5387 = 返回错误的被筛选的文档数。
5388 = Error Rate
5389 = 每秒钟返回错误的被筛选的文档数。
5394 = File Errors
5395 = 获取文档时接收到的文件协议错误数。
5396 = File Errors Rate
5397 = 每秒钟获取文档时接收到的文件协议错误数。
5402 = Accessed Files
5403 = 通过文件系统访问的文档数。
5404 = Accessed File Rate
5405 = 每秒钟通过文件系统访问的文档数。
5410 = Filtered Office
5411 = 筛选的 Office 文档数。
5412 = Filtered Office Rate
5413 = 每秒钟筛选的 Office 文档数。
5414 = Filtered Text
5415 = 筛选的文本文档数。
5416 = Filtered Text Rate
5417 = 每秒钟筛选的文本文档数。
5418 = Crawls in progress
5419 = 正在处理的爬网数。
5420 = Gatherer Paused Flag
5421 = Gatherer 暂停标记表示 Gatherer 是否被暂停。
5422 = Recovery In Progress Flag
5423 = 正在进行的恢复标记表示恢复当前是否正在进行。直到该标记关闭，索引编制才被恢复。
5424 = Not Modified
5425 = 由于没有检测到自从上次爬网后的通知没有被筛选的文档数。
5426 = Iterating History In Progress Flag
5427 = 正在进行的重述历史标记表示 Gatherer 当前是否在重述 URL 历史。
5428 = Incremental Crawls
5429 = 正在处理的增量爬网数。
5430 = Filtering Documents
5431 = 当前正在被筛选的文档数。
5432 = Started Documents
5433 = 初始化进入 Gatherer 服务的文档数。这包括停住的、在活动队列中的和当前被筛选的文档。爬网中当该数字变成 0，它表示爬网会很快结束。
5434 = Retries
5435 = 文档访问重试的总次数。该数高可能表示访问数据有问题。
5436 = Retries Rate
5437 = 每秒钟重试验的次数。
5444 = Adaptive Crawl Errors
5445 = 自适应爬网不正确拒绝的文档
5450 = Changed Documents
5451 = 自上次爬网后更改的文档
5452 = Document Moves/Renames
5453 = 移动/重命名通知的个数。
5454 = Document Move and Rename Rate
5455 = 每秒钟移动/重命名通知的个数。
5456 = Unique Documents
5457 = 系统中唯一文档的个数。如果文档内容相同，它们被认为不是唯一的。
5458 = History Recovery Progress
5459 = 历史恢复完成的百分比
5460 = Search Gatherer
5461 = Windows Search Service Gathering 服务对象计数器
5462 = Notification Sources
5463 = 当前已连接的外部通知源。
5464 = Ext. Notifications Received
5465 = 从所有通知源(不包括文件系统)收到的通知总数。
5466 = Ext. Notifications Rate
5467 = 每秒钟接收外部通知的速度。
5468 = Admin Clients
5469 = 当前连接的管理客户端数。
5470 = Heartbeats
5471 = 启动后开始计数的心跳总数。服务运行时每 10 秒钟发生一次心跳。如果服务不在运行，将没有心跳并且记号数不会增加。
5472 = Heartbeats Rate
5473 = 每 10 秒钟显示一次心跳。
5474 = Filtering Threads
5475 = 系统钟筛选线程的总数。该数基于您的系统资源计数。
5476 = Idle Threads
5477 = 等待文档的线程数。
5478 = Document Entries
5479 = 当前内存中文档数。0 表示没有索引活动。
5480 = Performance Level
5481 = 表示 Gatherer 服务允许使用的系统资源数量的级别。
5482 = Active Queue Length
5483 = 等待机器人线程的文档数。如果不是 0， 所有线程必须被筛选。
5484 = Filter Processes
5485 = 系统中筛选进程数。
5486 = Filter Processes Max
5487 = 启动后系统中存在的筛选进程的最大数。
5488 = Filter Process Created
5489 = 筛选进程创建或重新启动的总次数。太多的筛选进程说明筛选处理文档中的数据有问题。
5490 = Delayed Documents
5491 = 由于网站点击频率规则而延迟的文档数。
5492 = Server Objects
5493 = 最近系统访问的服务器数。
5494 = Server Objects Created
5495 = 新的服务器对象被创建的次数。
5496 = Filter Objects
5497 = 系统中的筛选对象数。每个筛选对象与当前被筛选的 URL 相关。
5498 = Documents Filtered
5499 = 筛选对象创建的次数。它与启动后系统筛选的文档总数相关。
5500 = Documents Filtered Rate
5501 = 每秒钟筛选的文档数。
5502 = Time Outs
5503 = 启动后系统检测到的超时总数。
5504 = Servers Currently Unavailable
5505 = 当对服务器的请求超时到达一定数量时，该服务器不可用。
5506 = Servers Unavailable
5507 = 当对服务器的请求超时到达一定数量时，该服务器不可用。
5508 = Threads Accessing Network
5509 = 等待筛选进程响应的线程数。如果没有活动并且该数等于筛选线程数，这可能表示网络问题或正在爬网的服务器不可用。
5510 = Threads In Plug-ins
5511 = 等待插件完成操作的线程数。
5512 = Documents Successfully Filtered
5513 = 成功筛选的文档数。
5514 = Documents Successfully Filtered Rate
5515 = 每秒钟成功筛选的文档数。
5516 = Documents Delayed Retry
5517 = 超时后将重试的文档数。如果为非 0，这表示正在爬网的本地服务器已关闭。
5518 = Word Breakers Cached
5519 = 可用的缓存分词系统实例数。
5520 = Stemmers Cached
5521 = 可用的缓存 stemmer 实例数。太多实例可能说明资源使用问题。
5522 = All Notifications Received
5523 = 从所有通知源(包括文件系统)收到的通知总数。
5524 = Notifications Rate
5525 = 每秒钟接收外部通知的速度。
5526 = System IO traffic rate
5527 = 后退逻辑检测到的系统 IO(磁盘)流速(以 KB/s 为单位)
5528 = Reason to back off
5529 = 代码描述 Gatherer 服务进入后退状态的原因。0 - 启动并在运行 1 - 高系统 IO 流量 2 - 高通知速度 3 - 正在进行的延迟的恢复(未实现) 4 - 由于用户活动而后退 5 - 电池低 6 - 内存低 99 - 由于内部原因而后退(由于 Search 本身) 当后退时，不执行索引。要恢复索引，您必须消除后退的原因。如果 Gatherer 服务在后退状态，搜索服务将暂停，并且事件日志中显示消息。
5530 = Threads blocked due to back off
5531 = 由于后退事件阻止的线程数。
5532 = Search Indexer
5533 = 索引器插件统计信息
5534 = Master Index Level.
5535 = 主索引的级别。
5536 = Master Merges to Date
5537 = 迄今为止的主合并的数目
5538 = 主合并进度
5539 = 主合并进度
5540 = Shadow Merge Levels
5541 = 阴影合并级别
5542 = 阴影合并级别阈值
5543 = 阴影合并级别阈值
5544 = Persistent Indexes
5545 = 永久索引的数目
5546 = Index Size
5547 = 索引大小
5548 = Unique Keys
5549 = 唯一键的数目
5550 = Documents Filtered
5551 = 已筛选文档的数目
5552 = Work Items Created
5553 = 已创建的无效工作项数目
5554 = Work Items Deleted
5555 = 已删除的无效工作项数目
5556 = Clean WidSets
5557 = 有效 WidSet 的数目
5558 = Dirty WidSets
5559 = 无效 WidSet 的数目
5560 = Master Merges Now.
5561 = 指示主合并是否正在进行。
5562 = Active Connections
5563 = 活动连接
5564 = Queries
5565 = 查询数
5566 = Queries Failed
5567 = 查询失败的次数
5568 = Queries Succeeded
5569 = 查询成功的次数
5570 = L0 Indexes (Wordlists)
5571 = L0 索引(单词表)的数目
5572 = L0 Merges (flushes) Now.
5573 = 任意时刻正在进行的 L0 合并(刷新)的数目。
5574 = L0 Merge (Flush) Speed - Average
5575 = 自编录加载以来计算的 L0 合并(刷新)速度的平均值 [每小时文档数]
5576 = L0 Merge (Flush) - Count
5577 = 自编录加载以来 L0 合并(刷新)的数目
5578 = L0 Merge (Flush) Speed - Last
5579 = 计算出的 L0 合并(刷新)速度的终值 [每小时文档数]。
5580 = Persistent Indexes L1
5581 = L1 索引的数目
5582 = L1 Merges Now.
5583 = 任意时刻正在进行的 L1 合并的数目。
5584 = L1 Merge Speed - average
5585 = 自编录加载以来计算出的 L1 合并速度的平均值 [每小时文档数]
5586 = L1 Merge - Count
5587 = 自编录加载以来 L1 合并的数目
5588 = L1 Merge Speed - last
5589 = 计算的 L1 合并速度的终值 [每小时文档数]。
5590 = Persistent Indexes L2
5591 = L2 索引的数目
5592 = L2 Merges Now.
5593 = 任意时刻正在进行的 L2 合并的数目。
5594 = L2 Merge Speed - average
5595 = 自编录加载以来计算的 L2 合并速度的平均值 [每小时文档数]
5596 = L2 Merge - Count
5597 = 自编录加载以来 L2 合并的数目
5598 = L2 Merge Speed - last
5599 = 计算的 L2 合并速度的终值 [每小时文档数]。
5600 = Persistent Indexes L3
5601 = L3 索引的数目
5602 = L3 Merges Now.
5603 = 任意时刻正在进行的 L3 合并的数目。
5604 = L3 Merge Speed - average
5605 = 自编录加载以来计算的 L3 合并速度的平均值 [每小时文档数]
5606 = L3 Merge - Count
5607 = 自编录加载以来 L3 合并的数目
5608 = L3 Merge Speed - last
5609 = 计算的 L3 合并速度的终值 [每小时文档数]。
5610 = Persistent Indexes L4
5611 = L4 索引的数目
5612 = L4 Merges Now.
5613 = 任意时刻正在进行的 L4 合并数目。
5614 = L4 Merge Speed - average
5615 = 自编录加载以来计算的 L4 合并速度的平均值 [每小时文档数]
5616 = L4 Merge - Count
5617 = 自编录加载以来 L4 合并的数目
5618 = L4 Merge Speed - last
5619 = 计算的 L4 合并速度的终值 [每小时文档数]。
5620 = Persistent Indexes L5
5621 = L5 索引的数目
5622 = L5 Merges Now.
5623 = 任意时刻正在进行的 L5 合并数目。
5624 = L5 Merge Speed - average
5625 = 自编录加载以来计算的 L5 合并速度的平均值 [每小时文档数]
5626 = L5 Merge - Count
5627 = 自编录加载以来 L5 合并的数目
5628 = L5 Merge Speed - last
5629 = 计算的 L5 合并速度的终值 [每小时文档数]。
5630 = Persistent Indexes L6
5631 = L6 索引的数目
5632 = L6 Merges Now.
5633 = 任意时刻正在进行的 L6 合并的数目。
5634 = L6 Merge Speed - average
5635 = 自编录加载以来计算的 L6 合并速度的平均值 [每小时文档数]
5636 = L6 Merge - Count
5637 = 自编录加载以来 L6 合并的数目
5638 = L6 Merge Speed - last
5639 = 计算的 L6 合并速度的终值 [每小时文档数]。
5640 = Persistent Indexes L7
5641 = L7 索引的数目
5642 = L7 Merges Now.
5643 = 任意时刻正在进行的 L7 合并的数目。
5644 = L7 Merge Speed - average
5645 = 自编录加载以来计算的 L7 合并速度的平均值 [每小时文档数]
5646 = L7 Merge - Count
5647 = 自编录加载以来 L7 合并的数目
5648 = L7 Merge Speed - last
5649 = 计算的 L7 合并速度的终值 [每小时文档数]。
5650 = Persistent Indexes L8
5651 = L8 索引的数目
5652 = L8 Merges Now.
5653 = 任意时刻正在进行的 L8 合并的数目。
5654 = L8 Merge Speed - average
5655 = 自编录加载以来计算的 L8 合并速度的平均值 [每小时文档数]
5656 = L8 Merge - Count
5657 = 自编录加载以来 L8 合并的数目
5658 = L8 Merge Speed - last
5659 = 计算的 L8 合并速度终值 [每小时文档数]。
5660 = ReadyBoost Cache
5661 = 显示关于 ReadyBoost 缓存的性能统计信息。
5662 = Bytes cached
5663 = 当前存储在 ReadyBoost 缓存中的总数据量(未压缩)。
5664 = Cache space used
5665 = 在 ReadyBoost 缓存中缓存的数据占用的空间量(以字节为单位)。
5666 = Compression Ratio
5667 = (使用的缓存空间) / (缓存的字节)
5668 = Total cache size bytes
5669 = 总的缓存大小(以字节为单位)，而不管所包含的数据量。
5670 = Cache reads/sec
5671 = 每秒从 ReadyBoost 缓存中得到满意的 I/O 数。
5672 = Cache read bytes/sec
5673 = 每秒 ReadyBoost 缓存所满足的 I/O 的字节数。
5674 = Skipped reads/sec
5675 = 由于策略原因而被 ReadyBoost 忽略的读 I/O 数。
5676 = Skipped read bytes/sec
5677 = 由于策略原因而被 ReadyBoost 忽略的读 I/O 字节数。
5678 = Total reads/sec
5679 = 由 ReadyBoost 接收到的读 I/O 数。此计数器包含所有读操作数，无论 ReadyBoost 缓存是否满足这些读操作。
5680 = Total read bytes/sec
5681 = 由 ReadyBoost 接收到的读 I/O 字节数。此计数器包含所有读操作数，无论 ReadyBoost 缓存是否满足这些读操作。
5908 = Windows Workflow Foundation
5909 = Windows Workflow Foundation 性能计数器
5910 = Workflows Created
5911 = 已创建的工作流总数。
5912 = Workflows Created/sec
5913 = 每秒创建工作流的速率。
5914 = Workflows Unloaded
5915 = 已卸载的工作流总数。
5916 = Workflows Unloaded/sec
5917 = 每秒卸载工作流的速率。
5918 = Workflows Loaded
5919 = 已加载的工作流总数。
5920 = Workflows Loaded/sec
5921 = 每秒加载工作流的速率。
5922 = Workflows Completed
5923 = 已完成的工作流总数。
5924 = Workflows Completed/sec
5925 = 每秒完成工作流的速率。
5926 = Workflows Suspended
5927 = 已挂起的工作流总数。
5928 = Workflows Suspended/sec
5929 = 每秒挂起工作流的速率。
5930 = Workflows Terminated
5931 = 已终止的工作流总数。
5932 = Workflows Terminated/sec
5933 = 每秒终止工作流的速率。
5934 = Workflows In Memory
5935 = 内存中的工作流总数。
5936 = Workflows Aborted
5937 = 已中止的工作流总数。
5938 = Workflows Aborted/sec
5939 = 每秒中止工作流的速率。
5940 = Workflows Persisted
5941 = 持久化的工作流总数。
5942 = Workflows Persisted/sec
5943 = 每秒持久化工作流的速率。
5944 = Workflows Executing
5945 = 主动执行的工作流实例的总数。
5946 = Workflows Idle/sec
5947 = 每秒变为空闲工作流的速率。
5948 = Workflows Runnable
5949 = 准备执行的工作流总数。
5950 = Workflows Pending
5951 = 正在等待线程的工作流总数。
5952 = ServiceModelEndpoint 3.0.0.0
5953 = ServiceModelEndpoint 3.0.0.0 性能计数器
5954 = Calls
5955 = 对该终结点的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.Calls.aspx
5956 = Calls Per Second
5957 = 每秒钟对该终结点的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsPerSecond.aspx
5958 = Calls Outstanding
5959 = 正在调用该终结点的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsOutstanding.aspx
5960 = Calls Failed
5961 = 该终结点上出现未处理异常的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFailed.aspx
5962 = Calls Failed Per Second
5963 = 该终结点上每秒钟出现未处理异常的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFailedPerSecond.aspx
5964 = Calls Faulted
5965 = 对该终结点返回错误的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFaulted.aspx
5966 = Calls Faulted Per Second
5967 = 每秒钟对该终结点返回错误的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFaultedPerSecond.aspx
5968 = Calls Duration
5969 = 调用该终结点的平均持续时间。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallDuration.aspx
5970 = Calls Duration Base
5971 = "Calls Duration" 计数器的基本计数器。
5972 = Transactions Flowed
5973 = 流向该终结点上操作的事务数。只要发送到终结点的消息中出现事务 ID，该计数器就会增加。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.TxFlowed.aspx
5974 = Transactions Flowed Per Second
5975 = 每秒钟流向该终结点上操作的事务数。只要发送到终结点的消息中出现事务 ID，该计数器就会增加。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.TxFlowedPerSecond.aspx
5976 = Security Validation and Authentication Failures
5977 = 对该终结点进行的验证或身份验证失败的调用次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityValidationAuthenticationFailures.aspx
5978 = Security Validation and Authentication Failures Per Second
5979 = 每秒钟对该终结点进行的验证或身份验证失败的调用次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityValidationAuthenticationFailuresPerSecond.aspx
5980 = Security Calls Not Authorized
5981 = 身份验证失败的调用该终结点的次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityCallsNotAuthorized.aspx
5982 = Security Calls Not Authorized Per Second
5983 = 每秒钟身份验证失败的调用该终结点的次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityCallsNotAuthorizedPerSecond.aspx
5984 = Reliable Messaging Sessions Faulted
5985 = 该终结点上出错的可靠消息会话数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMSessionsFaulted.aspx
5986 = Reliable Messaging Sessions Faulted Per Second
5987 = 该终结点上每秒钟出错的可靠消息会话数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMSessionsFaultedPerSecond.aspx
5988 = Reliable Messaging Messages Dropped
5989 = 该终结点上丢弃的可靠传送消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMMessagesDropped.aspx
5990 = Reliable Messaging Messages Dropped Per Second
5991 = 该终结点上每秒钟丢弃的可靠传送消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMMessagesDroppedPerSecond.aspx
6046 = ServiceModelService 3.0.0.0
6047 = ServiceModelService 3.0.0.0 性能计数器
6048 = Calls
6049 = 对该服务的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.Calls.aspx
6050 = Calls Per Second
6051 = 每秒钟对该服务的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsPerSecond.aspx
6052 = Calls Outstanding
6053 = 正在调用该服务的调用次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsOutstanding.aspx
6054 = Calls Failed
6055 = 该服务上出现未处理异常的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFailed.aspx
6056 = Calls Failed Per Second
6057 = 该服务上每秒钟出现未处理异常的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFailedPerSecond.aspx
6058 = Calls Faulted
6059 = 对该服务返回错误的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFaulted.aspx
6060 = Calls Faulted Per Second
6061 = 每秒钟对该服务返回错误的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFaultedPerSecond.aspx
6062 = Calls Duration
6063 = 调用该服务的平均持续时间。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallDuration.aspx
6064 = Calls Duration Base
6065 = "Calls Duration" 计数器的基本计数器。
6066 = Transactions Flowed
6067 = 流向该服务上操作的事务数量。只要发送到服务的消息中出现事务 ID，该计数器就会增加。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxFlowed.aspx
6068 = Transactions Flowed Per Second
6069 = 每秒钟流向该服务上操作的事务数量。只要发送到服务的消息中出现事务 ID，该计数器就会增加。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxFlowedPerSecond.aspx
6070 = Transacted Operations Committed
6071 = 该服务上已执行事务处理且提交结果的操作数量。依照操作中执行的工作更新资源。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxCommitted.aspx
6072 = Transacted Operations Committed Per Second
6073 = 该服务上每秒钟已执行事务处理且提交结果的操作数量。依照操作中执行的工作更新资源。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxCommittedPerSecond.aspx
6074 = Transacted Operations Aborted
6075 = 该服务上已执行事务处理且中止结果的操作数量。在该操作下执行的工作全部还原。将资源还原到它们的前一状态。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxAborted.aspx
6076 = Transacted Operations Aborted Per Second
6077 = 该服务上每秒钟已执行事务处理且中断结果的操作数量。在该操作下执行的工作全部还原。将资源还原到它们的前一状态。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxAbortedPerSecond.aspx
6078 = Transacted Operations In Doubt
6079 = 该服务上已执行事务处理且结果不确定的操作数量。在此情况下执行的工作处于不确定状态。将资源保留在挂起的结果中。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxInDoubt.aspx
6080 = Transacted Operations In Doubt Per Second
6081 = 该服务上每秒钟已执行事务处理且结果不确定的操作数量。在此种情况下执行的工作处于不确定状态。将资源保留在挂起的结果中。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxInDoubtPerSecond.aspx
6082 = Security Validation and Authentication Failures
6083 = 对该服务进行的验证或身份验证失败的调用次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityValidationAuthenticationFailures.aspx
6084 = Security Validation and Authentication Failures Per Second
6085 = 每秒钟对该服务进行的验证或身份验证失败的调用次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityValidationAuthenticationFailuresPerSecond.aspx
6086 = Security Calls Not Authorized
6087 = 身份验证失败的调用该服务的次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityCallsNotAuthorized.aspx
6088 = Security Calls Not Authorized Per Second
6089 = 每秒钟身份验证失败的调用该服务的次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityCallsNotAuthorizedPerSecond.aspx
6090 = Instances
6091 = 该服务的实例总数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.Instances.aspx
6092 = Instances Created Per Second
6093 = 每秒钟服务实例创建率。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.InstancesPerSecond.aspx
6094 = Reliable Messaging Sessions Faulted
6095 = 该服务上出错的可靠传送会话数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMSessionsFaulted.aspx
6096 = Reliable Messaging Sessions Faulted Per Second
6097 = 该服务上每秒钟出错的可靠传递会话数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMSessionsFaultedPerSecond.aspx
6098 = Reliable Messaging Messages Dropped
6099 = 该服务上丢弃的可靠传送消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMMessagesDropped.aspx
6100 = Reliable Messaging Messages Dropped Per Second
6101 = 该服务上每秒钟丢弃的可靠传送消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMMessagesDroppedPerSecond.aspx
6102 = Queued Poison Messages
6103 = 该服务上由排队传输标记为中毒的消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqPoisonMessages.aspx
6104 = Queued Poison Messages Per Second
6105 = 该终结点上每秒钟由排队传输标记为中毒的消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqPoisonMessagesPerSecond.aspx
6106 = Queued Messages Rejected
6107 = 该服务上由排队传输拒绝的消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqRejectedMessages.aspx
6108 = Queued Messages Rejected Per Second
6109 = 该服务上每秒钟由排队传输拒绝的消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqRejectedMessagesPerSecond.aspx
6110 = Queued Messages Dropped
6111 = 该服务上由排队传输丢弃的消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqDroppedMessages.aspx
6112 = Queued Messages Dropped Per Second
6113 = 该服务上每秒钟由排队传输丢弃的消息数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqDroppedMessagesPerSecond.aspx
6114 = ServiceModelOperation 3.0.0.0
6115 = ServiceModelOperation 3.0.0.0 性能计数器
6116 = Calls
6117 = 对该操作的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.Calls.aspx
6118 = Calls Per Second
6119 = 每秒钟对该操作的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsPerSecond.aspx
6120 = Calls Outstanding
6121 = 正在调用该操作的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsOutstanding.aspx
6122 = Calls Failed
6123 = 该操作上出现未处理异常的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFailed.aspx
6124 = Call Failed Per Second
6125 = 该操作上每秒钟出现未处理异常的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFailedPerSecond.aspx
6126 = Calls Faulted
6127 = 对该操作返回错误的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFaulted.aspx
6128 = Calls Faulted Per Second
6129 = 每秒钟对该操作返回错误的调用数量。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFaultedPerSecond.aspx
6130 = Calls Duration
6131 = 调用该操作的平均持续时间。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallDuration.aspx
6132 = Calls Duration Base
6133 = "Calls Duration" 计数器的基本计数器。
6134 = Transactions Flowed
6135 = 流向该操作的事务数量。只要发送到操作的消息中出现事务 ID，该计数器就会增加。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.TxFlowed.aspx
6136 = Transactions Flowed Per Second
6137 = 每秒钟流向该操作的事务数量。只要发送到操作的消息中出现事务 ID，该计数器就会增加。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.TxFlowedPerSecond.aspx
6138 = Security Validation and Authentication Failures
6139 = 对该操作进行的验证或身份验证失败的调用次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityValidationAuthenticationFailures.aspx
6140 = Security Validation and Authentication Failures Per Second
6141 = 每秒钟对该操作进行的验证或身份验证失败的调用次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityValidationAuthenticationFailuresPerSecond.aspx
6142 = Security Calls Not Authorized
6143 = 身份验证失败的调用该操作的次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityCallsNotAuthorized.aspx
6144 = Security Calls Not Authorized Per Second
6145 = 每秒钟身份验证失败的调用该操作的次数。http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityCallsNotAuthorizedPerSecond.aspx
6146 = SMSvcHost 3.0.0.0
6147 = SMSvcHost 3.0.0.0 性能计数器
6148 = Protocol Failures over net.tcp
6149 = net.tcp 协议层上的失败总次数。
6150 = Protocol Failures over net.pipe
6151 = net.pipe 协议层上的失败总次数。
6152 = Dispatch Failures over net.tcp
6153 = 调度通过 net.tcp 接收的消息失败的总次数。
6154 = Dispatch Failures over net.pipe
6155 = 调度通过 net.pipe 接收的消息失败的总次数。
6156 = Connections Dispatched over net.tcp
6157 = 通过 net.tcp 调度的连接总数。
6158 = Connections Dispatched over net.pipe
6159 = 通过 net.pipe 调度的连接总数。
6160 = Connections Accepted over net.tcp
6161 = 通过 net.tcp 接受的 TCP 连接总数。
6162 = Connections Accepted over net.pipe
6163 = 通过 net.pipe 接受的命名管道连接总数。
6164 = Registrations Active for net.tcp
6165 = 当前可用于 net.tcp 的 URI 注册数量。
6166 = Registrations Active for net.pipe
6167 = 当前可用于 net.pipe 的 URI 注册数量。
6168 = Uris Registered for net.tcp
6169 = 为 net.tcp 成功注册的 URI 总数。
6170 = Uris Registered for net.pipe
6171 = 为 net.pipe 成功注册的 URI 总数。
6172 = Uris Unregistered for net.tcp
6173 = 为 net.tcp 成功取消注册的 URI 总数。
6174 = Uris Unregistered for net.pipe
6175 = 为 net.pipe 成功取消注册的 URI 总数。
6176 = MSDTC Bridge 3.0.0.0
6177 = MSDTC Bridge 3.0.0.0 性能计数器
6178 = Message send failures/sec
6179 = WS-AT 服务每秒钟发送 WS-AT 协议消息失败的数量。
6180 = Prepare retry count/sec
6181 = WS-AT 服务每秒钟已发送的准备重试消息的数量。
6182 = Commit retry count/sec
6183 = WS-AT 服务每秒钟已发送的提交重试消息的数量。
6184 = Prepared retry count/sec
6185 = WS-AT 服务每秒钟已发送已准备重试消息的数量。
6186 = Replay retry count/sec
6187 = WS-AT 服务每秒钟已发送重播重试消息的数量。
6188 = Faults received count/sec
6189 = WS-AT 服务每秒钟已接收到错误消息的数量。
6190 = Faults sent count/sec
6191 = WS-AT 服务每秒钟已发送错误消息的数量。
6192 = Average participant prepare response time
6193 = WS-AT 服务接收参与者准备消息响应的平均时间(以毫秒为单位)。
6194 = Average participant prepare response time Base
6195 = "Average participant prepare response time" 计数器的基本计数器。
6196 = Average participant commit response time
6197 = WS-AT 服务接收参与者提交消息响应的平均时间(以毫秒为单位)。
6198 = Average participant commit response time Base
6199 = "Average participant commit response time" 计数器的基本计数器。
7002 = .NET CLR Networking 4.0.0.0
7003 = Counters for classes in the System.Net namespace.
7004 = Connections Established
7005 = The cumulative total number of socket connections established for this process since the process was started.
7006 = Bytes Received
7007 = The cumulative total number of bytes received over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
7008 = Bytes Sent
7009 = The cumulative total number of bytes sent over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
7010 = Datagrams Received
7011 = The cumulative total number of datagram packets received since the process was started.
7012 = Datagrams Sent
7013 = The cumulative total number of datagram packets sent since the process was started.
7014 = HttpWebRequests Created/Sec
7015 = The number of HttpWebRequest objects created during the last sample interval (typically 1 sec).
7016 = HttpWebRequests Average Lifetime
7017 = The average lifetime of all web requests completed during the last sample interval. The lifetime is defined as the time between the creation of the HttpWebRequest object and the closing of either the HttpWebResponse object or the response stream object. Values are shown in milliseconds.
7018 = HttpWebRequests Average Lifetime Base
7019 = HttpWebRequests Average Lifetime Base
7020 = HttpWebRequests Queued/Sec
7021 = The number of HttpWebRequest objects added to a waiting queue during the last sample interval (typically 1 sec). A request is added to a waiting queue if all connections to the server are already in use when the request is submitted.
7022 = HttpWebRequests Average Queue Time
7023 = The average time HttpWebRequest objects spent in a waiting queue. A request is added to a waiting queue if all connections to the server are already in use when the request is submitted, and remains there until a connection becomes available. Values are shown in milliseconds.
7024 = HttpWebRequests Average Queue Time Base
7025 = HttpWebRequests Average Queue Time Base
7026 = HttpWebRequests Aborted/Sec
7027 = The number of HttpWebRequest objects aborted during the last sample interval (typically 1 sec). Typically requests are aborted either by calling HttpWebRequest.Abort() or if the request times out.
7028 = HttpWebRequests Failed/Sec
7029 = The number of HttpWebRequest objects failed during the last sample interval (typically 1 sec). A request is considered failed, if after starting the request processing one of the following methods throw an exception: HttpWebRequest.EndGetRequestStream(), HttpWebRequest.GetRequestStream(), HttpWebRequest.EndGetResponse(), HttpWebRequest.GetResponse()
7030 = .NET Memory Cache 4.0
7031 = System.Runtime.Caching.MemoryCache Performance Counters
7032 = Cache Hits
7033 = The number of cache hits.
7034 = Cache Misses
7035 = The number of cache misses.
7036 = Cache Hit Ratio
7037 = The percentage of cache hits in the total number of cache requests.
7038 = Cache Hit Ratio Base
7039 = Cache Hit Ratio Base
7040 = Cache Trims
7041 = Total number of entries removed from the cache due to memory pressure or Trim invocations.
7042 = Cache Entries
7043 = The number of entries within the cache.
7044 = Cache Turnover Rate
7045 = The number of entries added to the cache or removed from the cache per second.
10254 = SMSvcHost 4.0.0.0
10255 = SMSvcHost 4.0.0.0 性能计数器
10256 = Protocol Failures over net.tcp
10257 = net.tcp 协议层上的失败总次数。
10258 = Protocol Failures over net.pipe
10259 = net.pipe 协议层上的失败总次数。
10260 = Dispatch Failures over net.tcp
10261 = 调度通过 net.tcp 接收的消息失败的总次数。
10262 = Dispatch Failures over net.pipe
10263 = 调度通过 net.pipe 接收的消息失败的总次数。
10264 = Connections Dispatched over net.tcp
10265 = 通过 net.tcp 调度的连接总数。
10266 = Connections Dispatched over net.pipe
10267 = 通过 net.pipe 调度的连接总数。
10268 = Connections Accepted over net.tcp
10269 = 通过 net.tcp 接受的 TCP 连接总数。
10270 = Connections Accepted over net.pipe
10271 = 通过 net.pipe 接受的命名管道连接总数。
10272 = Registrations Active for net.tcp
10273 = 当前可用于 net.tcp 的 URI 注册数量。
10274 = Registrations Active for net.pipe
10275 = 当前可用于 net.pipe 的 URI 注册数量。
10276 = Uris Registered for net.tcp
10277 = 为 net.tcp 成功注册的 URI 总数。
10278 = Uris Registered for net.pipe
10279 = 为 net.pipe 成功注册的 URI 总数。
10280 = Uris Unregistered for net.tcp
10281 = 为 net.tcp 成功取消注册的 URI 总数。
10282 = Uris Unregistered for net.pipe
10283 = 为 net.pipe 成功取消注册的 URI 总数。
10284 = MSDTC Bridge 4.0.0.0
10285 = MSDTC Bridge 4.0.0.0 性能计数器
10286 = Message send failures/sec
10287 = WS-AT 服务每秒钟发送 WS-AT 协议消息失败的数量。
10288 = Prepare retry count/sec
10289 = WS-AT 服务每秒钟已发送的准备重试消息的数量。
10290 = Commit retry count/sec
10291 = WS-AT 服务每秒钟已发送的提交重试消息的数量。
10292 = Prepared retry count/sec
10293 = WS-AT 服务每秒钟已发送已准备重试消息的数量。
10294 = Replay retry count/sec
10295 = WS-AT 服务每秒钟已发送重播重试消息的数量。
10296 = Faults received count/sec
10297 = WS-AT 服务每秒钟已接收到错误消息的数量。
10298 = Faults sent count/sec
10299 = WS-AT 服务每秒钟已发送错误消息的数量。
10300 = Average participant prepare response time
10301 = WS-AT 服务接收参与者准备消息响应的平均时间(以毫秒为单位)。
10302 = Average participant prepare response time Base
10303 = “Average participant prepare response time”计数器的基准计数器。
10304 = Average participant commit response time
10305 = WS-AT 服务接收参与者提交消息响应的平均时间(以毫秒为单位)。
10306 = Average participant commit response time Base
10307 = “Average participant commit response time”计数器的基准计数器。
10308 = WF (System.Workflow) 4.0.0.0
10309 = Windows Workflow Foundation 性能计数器
10310 = Workflows Created
10311 = 已创建的工作流总数。
10312 = Workflows Created/sec
10313 = 每秒创建工作流的速率。
10314 = Workflows Unloaded
10315 = 已卸载的工作流总数。
10316 = Workflows Unloaded/sec
10317 = 每秒卸载工作流的速率。
10318 = Workflows Loaded
10319 = 已加载的工作流总数。
10320 = Workflows Loaded/sec
10321 = 每秒加载工作流的速率。
10322 = Workflows Completed
10323 = 已完成的工作流总数。
10324 = Workflows Completed/sec
10325 = 每秒完成工作流的速率。
10326 = Workflows Suspended
10327 = 已挂起的工作流总数。
10328 = Workflows Suspended/sec
10329 = 每秒挂起工作流的速率。
10330 = Workflows Terminated
10331 = 已终止的工作流总数。
10332 = Workflows Terminated/sec
10333 = 每秒终止工作流的速率。
10334 = Workflows In Memory
10335 = 内存中的工作流总数。
10336 = Workflows Aborted
10337 = 已中止的工作流总数。
10338 = Workflows Aborted/sec
10339 = 每秒中止工作流的速率。
10340 = Workflows Persisted
10341 = 持久化的工作流总数。
10342 = Workflows Persisted/sec
10343 = 每秒持久化工作流的速率。
10344 = Workflows Executing
10345 = 主动执行的工作流实例的总数。
10346 = Workflows Idle/sec
10347 = 每秒变为空闲工作流的速率。
10348 = Workflows Runnable
10349 = 准备执行的工作流总数。
10350 = Workflows Pending
10351 = 正在等待线程的工作流总数。
11214 = ASP.NET v4.0.30319
11215 = ASP.NET 全局性能计数器
11216 = ASP.NET Apps v4.0.30319
11217 = ASP.NET 应用程序性能计数器
11218 = Application Restarts
11219 = 应用程序在 Web 服务器的生存期内重新启动的次数。
11220 = Applications Running
11221 = 当前正在运行的 Web 应用程序的数目。
11222 = Requests Disconnected
11223 = 由于通信错误或用户终止而断开连接的请求数。
11224 = Request Execution Time
11225 = 执行最近的请求所用的毫秒数。
11226 = Requests Rejected
11227 = 由于请求队列已满而被拒绝的请求数。
11228 = Requests Queued
11229 = 等候处理的请求数。
11230 = Worker Processes Running
11231 = 在计算机上运行的辅助进程数。
11232 = Worker Process Restarts
11233 = 辅助进程在计算机上重新启动的次数。
11234 = Request Wait Time
11235 = 最近的请求在队列中等待的毫秒数。
11236 = State Server Sessions Active
11237 = 当前活动的会话数。
11238 = State Server Sessions Abandoned
11239 = 已明确放弃的会话数。
11240 = State Server Sessions Timed Out
11241 = 超时的会话数。
11242 = State Server Sessions Total
11243 = 会话总数。
11244 = Requests Current
11245 = 当前的请求数目，包括在队列中的、正在执行或等待写入客户端的请求。在 ASP.NET 进程模型中，当该计数器超过定义在进程模型配置部分的 requestQueueLimit 时，ASP.NET 将开始拒绝请求。
11246 = Audit Success Events Raised
11247 = 自应用程序启动以来在其中审计成功的次数。
11248 = Audit Failure Events Raised
11249 = 自应用程序启动以来在其中审计失败的次数。
11250 = Error Events Raised
11251 = 自应用程序启动以来引发的错误事件数。
11252 = Request Error Events Raised
11253 = 自应用程序启动以来引发的运行时错误事件数。
11254 = Infrastructure Error Events Raised
11255 = 自应用程序启动以来引发的 HTTP 错误事件数。
11256 = 本机队列中的请求
11257 = 请求已排入队列，因为已超出并行请求的限制。
11258 = Anonymous Requests
11259 = 使用匿名身份验证的请求数。
11260 = Anonymous Requests/Sec
11261 = 每秒的身份验证匿名请求数
11262 = Cache Total Entries
11263 = 缓存中的总项数，包括内部的项和用户添加的项
11264 = Cache Total Turnover Rate
11265 = 每秒对总缓存的添加数和移除数。
11266 = Cache Total Hits
11267 = 缓存的命中总数。
11268 = Cache Total Misses
11269 = 缓存未命中总数。
11270 = Cache Total Hit Ratio
11271 = 所有缓存调用的命中率。
11272 = Cache Total Hit Ratio Base
11273 = 缓存总命中率基数
11274 = Cache API Entries
11275 = 用户添加的缓存内的总项数。
11276 = Cache API Turnover Rate
11277 = 每秒对 API 缓存的添加数和移除数。
11278 = Cache API Hits
11279 = 用户代码的缓存命中数。
11280 = Cache API Misses
11281 = 从用户代码调用的缓存未命中数。
11282 = Cache API Hit Ratio
11283 = 从用户代码调用的命中率。
11284 = Cache API Hit Ratio Base
11285 = 缓存 API 命中率基数
11286 = Output Cache Entries
11287 = 输出缓存中的当前项数。
11288 = Output Cache Turnover Rate
11289 = 每秒对输出缓存的添加数和移除数。
11290 = Output Cache Hits
11291 = 由输出缓存提供的输出可缓存请求的总数。
11292 = Output Cache Misses
11293 = 不是由输出缓存提供的输出可缓存请求的总数。
11294 = Output Cache Hit Ratio
11295 = 对输出可缓存请求的请求命中率。
11296 = Output Cache Hit Ratio Base
11297 = 输出缓存命中率基数
11298 = Compilations Total
11299 = 动态编译的 .asax、.ascx、.ashx、.asmx 或 .aspx 源文件的数目。
11300 = Debugging Requests
11301 = 处理的调试请求数。
11302 = Errors During Preprocessing
11303 = 分析和配置期间发生的错误数。
11304 = Errors During Compilation
11305 = 编译过程中发生的错误数。
11306 = Errors During Execution
11307 = 处理请求期间发生的错误数。
11308 = Errors Unhandled During Execution
11309 = 由默认错误处理程序而非用户代码处理的错误数。
11310 = Errors Unhandled During Execution/Sec
11311 = 未处理的错误率。
11312 = Errors Total
11313 = 发生的错误总数。
11314 = Errors Total/Sec
11315 = 发生的错误率。
11316 = Pipeline Instance Count
11317 = 活动管线实例的数目。
11318 = Request Bytes In Total
11319 = 所有请求的总大小，单位为字节。
11320 = Request Bytes Out Total
11321 = 发送到客户端的响应的总大小，单位为字节。其中不包括标准 HTTP 响应头。
11322 = Requests Executing
11323 = 当前执行的请求数。
11324 = Requests Failed
11325 = 失败的请求总数。
11326 = Requests Not Found
11327 = 对未找到的资源的请求数。
11328 = Requests Not Authorized
11329 = 由于未经授权的访问而失败的请求数。
11330 = Requests In Application Queue
11331 = 在应用程序请求队列中的请求数目。
11332 = Requests Timed Out
11333 = 超时的请求数。
11334 = Requests Succeeded
11335 = 成功执行的请求数。
11336 = Requests Total
11337 = 自应用程序启动后的请求总数。
11338 = Requests/Sec
11339 = 每秒执行的请求数。
11340 = Sessions Active
11341 = 当前活动的会话数。
11342 = Sessions Abandoned
11343 = 已明确放弃的会话数。
11344 = Sessions Timed Out
11345 = 超时的会话数。
11346 = Sessions Total
11347 = 自应用程序启动后的会话总数。
11348 = Transactions Aborted
11349 = 中止的事务数。
11350 = Transactions Committed
11351 = 提交的事务数。
11352 = Transactions Pending
11353 = 进行中的事务数。
11354 = Transactions Total
11355 = 自应用程序启动后的事务总数。
11356 = Transactions/Sec
11357 = 每秒启动的事务数。
11358 = Session State Server connections total
11359 = 会话状态使用的状态服务器连接总数。
11360 = Session SQL Server connections total
11361 = 会话使用的 SQL Server 连接总数。
11362 = Events Raised
11363 = 自应用程序启动以来引发的检测事件总数。
11364 = Events Raised/Sec
11365 = 每秒钟的检测事件总数。
11366 = Application Lifetime Events
11367 = 自应用程序启动以来引发的应用程序事件数。
11368 = Application Lifetime Events/Sec
11369 = 每秒钟引发的应用程序事件数。
11370 = Error Events Raised
11371 = 自应用程序启动以来引发的错误事件数。
11372 = Error Events Raised/Sec
11373 = 每秒钟的错误事件数。
11374 = Request Error Events Raised
11375 = 自应用程序启动以来引发的运行时错误事件数。
11376 = Request Error Events Raised/Sec
11377 = 每秒钟的运行时错误事件数。
11378 = Infrastructure Error Events Raised
11379 = 自应用程序启动以来引发的 HTTP 错误事件数。
11380 = Infrastructure Error Events Raised/Sec
11381 = 每秒钟引发的 HTTP 错误事件数。
11382 = Request Events Raised
11383 = 自应用程序启动以来引发的请求事件数
11384 = Request Events Raised/Sec
11385 = 每秒钟引发的请求事件数。
11386 = Audit Success Events Raised
11387 = 自应用程序启动以来在其中审计成功的次数。
11388 = Audit Failure Events Raised
11389 = 自应用程序启动以来在其中审计失败的次数。
11390 = Membership Authentication Success
11391 = 自应用程序启动以来成员凭据验证成功的次数。
11392 = Membership Authentication Failure
11393 = 自应用程序启动以来成员凭据验证失败的次数。
11394 = Forms Authentication Success
11395 = 自应用程序启动以来 Forms 身份验证中票证验证成功的次数。
11396 = Forms Authentication Failure
11397 = 自应用程序启动以来 Forms 身份验证中票证验证失败的次数。
11398 = Viewstate MAC Validation Failure
11399 = 自应用程序启动以来视图状态 MAC 验证失败的次数。
11400 = Request Execution Time
11401 = 执行最近的请求所用的毫秒数。
11402 = Requests Disconnected
11403 = 由于通信错误或用户终止而断开连接的请求数。
11404 = Requests Rejected
11405 = 由于应用程序请求队列已满而被拒绝的请求数。
11406 = Request Wait Time
11407 = 最近的请求在队列中等待的毫秒数。
11408 = Cache % Machine Memory Limit Used
11409 = 计算机使用的物理内存总量除以缓存的物理内存限制得出的百分比值。此值达到 100% 时将强行移除一半的缓存项。__Total__ 实例是所有实例的平均值，因此无法将其用于确定何时强行移除缓存项。
11410 = Cache % Machine Memory Limit Used Base
11411 = 计算机内存限制使用的缓存百分比的基数
11412 = Cache % Process Memory Limit Used
11413 = 辅助进程的专用字节的值除以缓存的专用字节内存限制得出的百分比值。此值达到 100% 时将强行移除一半的缓存项。__Total__ 实例是所有实例的平均值，因此无法将其用于确定何时强行移除缓存项。
11414 = Cache % Process Memory Limit Used Base
11415 = 进程内存限制使用的缓存百分比的基数
11416 = Cache Total Trims
11417 = 由于内存压力强行从缓存中移除的项的总数。
11418 = Cache API Trims
11419 = 原来使用一个公共缓存 API 插入到缓存中而由于内存压力强行从缓存中移除的项的总数。
11420 = Output Cache Trims
11421 = 原来由输出缓存功能插入到缓存中而由于内存压力强行从缓存中移除的项的总数。
11422 = % Managed Processor Time (estimated)
11423 = 处理器执行托管应用程序代码所用时间的估计百分比。此计数器仅跟踪应用程序中托管线程的处理器时间，不包括执行非托管线程所用的其他处理器时间。请注意，此计数器仅每五秒钟用新数据更新一次。
11424 = % Managed Processor Time Base (estimated)
11425 = 托管处理器时间基准百分比(估计)
11426 = Managed Memory Used (estimated)
11427 = 应用程序使用的托管堆内存估计值，单位为 KB。此计数器的准确性因距离上一次完全托管内存堆收集的时间间隔而异。请注意，此计数器仅每五秒钟用新数据更新一次。
11428 = 总传入请求字节(WebSocket)
11429 = ASP.NET 在 WebSocket 连接上接收的数据总大小(以字节为单位)。
11430 = 总传出请求字节(WebSocket)
11431 = 在 WebSocket 连接上向客户端发送的数据总大小(以字节为单位)。
11432 = 正在执行的请求(WebSocket)
11433 = 当前正在执行的 WebSocket 请求数。
11434 = 失败的请求(WebSocket)
11435 = 以中止状态结束的 WebSocket 请求的总数。
11436 = 成功的请求(WebSocket)
11437 = 成功完成的 WebSocket 请求的总数。
11438 = 请求总数(WebSocket)
11439 = 应用程序启动后的 WebSocket 请求的总数。
11666 = ASP.NET State Service
11667 = ASP.NET 状态服务
11892 = State Server Sessions Active
11893 = 当前活动的会话数。
11894 = State Server Sessions Abandoned
11895 = 已明确放弃的会话数。
11896 = State Server Sessions Timed Out
11897 = 超时的会话数。
11898 = State Server Sessions Total
11899 = 会话总数。
11900 = ASP.NET
11901 = ASP.NET 全局性能计数器
11902 = ASP.NET Applications
11903 = ASP.NET 应用程序性能计数器
11904 = Application Restarts
11905 = 应用程序在 Web 服务器的生存期内重新启动的次数。
11906 = Applications Running
11907 = 当前正在运行的 Web 应用程序的数目。
11908 = Requests Disconnected
11909 = 由于通信错误或用户终止而断开连接的请求数。
11910 = Request Execution Time
11911 = 执行最近的请求所用的毫秒数。
11912 = Requests Rejected
11913 = 由于请求队列已满而被拒绝的请求数。
11914 = Requests Queued
11915 = 等候处理的请求数。
11916 = Worker Processes Running
11917 = 在计算机上运行的辅助进程数。
11918 = Worker Process Restarts
11919 = 辅助进程在计算机上重新启动的次数。
11920 = Request Wait Time
11921 = 最近的请求在队列中等待的毫秒数。
11922 = State Server Sessions Active
11923 = 当前活动的会话数。
11924 = State Server Sessions Abandoned
11925 = 已明确放弃的会话数。
11926 = State Server Sessions Timed Out
11927 = 超时的会话数。
11928 = State Server Sessions Total
11929 = 会话总数。
11930 = Requests Current
11931 = 当前的请求数目，包括在队列中的、正在执行或等待写入客户端的请求。在 ASP.NET 进程模型中，当该计数器超过定义在进程模型配置部分的 requestQueueLimit 时，ASP.NET 将开始拒绝请求。
11932 = Audit Success Events Raised
11933 = 自应用程序启动以来在其中审计成功的次数。
11934 = Audit Failure Events Raised
11935 = 自应用程序启动以来在其中审计失败的次数。
11936 = Error Events Raised
11937 = 自应用程序启动以来引发的错误事件数。
11938 = Request Error Events Raised
11939 = 自应用程序启动以来引发的运行时错误事件数。
11940 = Infrastructure Error Events Raised
11941 = 自应用程序启动以来引发的 HTTP 错误事件数。
11942 = 本机队列中的请求
11943 = 请求已排入队列，因为已超出并行请求的限制。
11944 = Anonymous Requests
11945 = 使用匿名身份验证的请求数。
11946 = Anonymous Requests/Sec
11947 = 每秒的身份验证匿名请求数
11948 = Cache Total Entries
11949 = 缓存中的总项数，包括内部的项和用户添加的项
11950 = Cache Total Turnover Rate
11951 = 每秒对总缓存的添加数和移除数。
11952 = Cache Total Hits
11953 = 缓存的命中总数。
11954 = Cache Total Misses
11955 = 缓存未命中总数。
11956 = Cache Total Hit Ratio
11957 = 所有缓存调用的命中率。
11958 = Cache Total Hit Ratio Base
11959 = 缓存总命中率基数
11960 = Cache API Entries
11961 = 用户添加的缓存内的总项数。
11962 = Cache API Turnover Rate
11963 = 每秒对 API 缓存的添加数和移除数。
11964 = Cache API Hits
11965 = 用户代码的缓存命中数。
11966 = Cache API Misses
11967 = 从用户代码调用的缓存未命中数。
11968 = Cache API Hit Ratio
11969 = 从用户代码调用的命中率。
11970 = Cache API Hit Ratio Base
11971 = 缓存 API 命中率基数
11972 = Output Cache Entries
11973 = 输出缓存中的当前项数。
11974 = Output Cache Turnover Rate
11975 = 每秒对输出缓存的添加数和移除数。
11976 = Output Cache Hits
11977 = 由输出缓存提供的输出可缓存请求的总数。
11978 = Output Cache Misses
11979 = 不是由输出缓存提供的输出可缓存请求的总数。
11980 = Output Cache Hit Ratio
11981 = 对输出可缓存请求的请求命中率。
11982 = Output Cache Hit Ratio Base
11983 = 输出缓存命中率基数
11984 = Compilations Total
11985 = 动态编译的 .asax、.ascx、.ashx、.asmx 或 .aspx 源文件的数目。
11986 = Debugging Requests
11987 = 处理的调试请求数。
11988 = Errors During Preprocessing
11989 = 分析和配置期间发生的错误数。
11990 = Errors During Compilation
11991 = 编译过程中发生的错误数。
11992 = Errors During Execution
11993 = 处理请求期间发生的错误数。
11994 = Errors Unhandled During Execution
11995 = 由默认错误处理程序而非用户代码处理的错误数。
11996 = Errors Unhandled During Execution/Sec
11997 = 未处理的错误率。
11998 = Errors Total
11999 = 发生的错误总数。
12000 = Errors Total/Sec
12001 = 发生的错误率。
12002 = Pipeline Instance Count
12003 = 活动管线实例的数目。
12004 = Request Bytes In Total
12005 = 所有请求的总大小，单位为字节。
12006 = Request Bytes Out Total
12007 = 发送到客户端的响应的总大小，单位为字节。其中不包括标准 HTTP 响应头。
12008 = Requests Executing
12009 = 当前执行的请求数。
12010 = Requests Failed
12011 = 失败的请求总数。
12012 = Requests Not Found
12013 = 对未找到的资源的请求数。
12014 = Requests Not Authorized
12015 = 由于未经授权的访问而失败的请求数。
12016 = Requests In Application Queue
12017 = 在应用程序请求队列中的请求数目。
12018 = Requests Timed Out
12019 = 超时的请求数。
12020 = Requests Succeeded
12021 = 成功执行的请求数。
12022 = Requests Total
12023 = 自应用程序启动后的请求总数。
12024 = Requests/Sec
12025 = 每秒执行的请求数。
12026 = Sessions Active
12027 = 当前活动的会话数。
12028 = Sessions Abandoned
12029 = 已明确放弃的会话数。
12030 = Sessions Timed Out
12031 = 超时的会话数。
12032 = Sessions Total
12033 = 自应用程序启动后的会话总数。
12034 = Transactions Aborted
12035 = 中止的事务数。
12036 = Transactions Committed
12037 = 提交的事务数。
12038 = Transactions Pending
12039 = 进行中的事务数。
12040 = Transactions Total
12041 = 自应用程序启动后的事务总数。
12042 = Transactions/Sec
12043 = 每秒启动的事务数。
12044 = Session State Server connections total
12045 = 会话状态使用的状态服务器连接总数。
12046 = Session SQL Server connections total
12047 = 会话使用的 SQL Server 连接总数。
12048 = Events Raised
12049 = 自应用程序启动以来引发的检测事件总数。
12050 = Events Raised/Sec
12051 = 每秒钟的检测事件总数。
12052 = Application Lifetime Events
12053 = 自应用程序启动以来引发的应用程序事件数。
12054 = Application Lifetime Events/Sec
12055 = 每秒钟引发的应用程序事件数。
12056 = Error Events Raised
12057 = 自应用程序启动以来引发的错误事件数。
12058 = Error Events Raised/Sec
12059 = 每秒钟的错误事件数。
12060 = Request Error Events Raised
12061 = 自应用程序启动以来引发的运行时错误事件数。
12062 = Request Error Events Raised/Sec
12063 = 每秒钟的运行时错误事件数。
12064 = Infrastructure Error Events Raised
12065 = 自应用程序启动以来引发的 HTTP 错误事件数。
12066 = Infrastructure Error Events Raised/Sec
12067 = 每秒钟引发的 HTTP 错误事件数。
12068 = Request Events Raised
12069 = 自应用程序启动以来引发的请求事件数
12070 = Request Events Raised/Sec
12071 = 每秒钟引发的请求事件数。
12072 = Audit Success Events Raised
12073 = 自应用程序启动以来在其中审计成功的次数。
12074 = Audit Failure Events Raised
12075 = 自应用程序启动以来在其中审计失败的次数。
12076 = Membership Authentication Success
12077 = 自应用程序启动以来成员凭据验证成功的次数。
12078 = Membership Authentication Failure
12079 = 自应用程序启动以来成员凭据验证失败的次数。
12080 = Forms Authentication Success
12081 = 自应用程序启动以来 Forms 身份验证中票证验证成功的次数。
12082 = Forms Authentication Failure
12083 = 自应用程序启动以来 Forms 身份验证中票证验证失败的次数。
12084 = Viewstate MAC Validation Failure
12085 = 自应用程序启动以来视图状态 MAC 验证失败的次数。
12086 = Request Execution Time
12087 = 执行最近的请求所用的毫秒数。
12088 = Requests Disconnected
12089 = 由于通信错误或用户终止而断开连接的请求数。
12090 = Requests Rejected
12091 = 由于应用程序请求队列已满而被拒绝的请求数。
12092 = Request Wait Time
12093 = 最近的请求在队列中等待的毫秒数。
12094 = Cache % Machine Memory Limit Used
12095 = 计算机使用的物理内存总量除以缓存的物理内存限制得出的百分比值。此值达到 100% 时将强行移除一半的缓存项。__Total__ 实例是所有实例的平均值，因此无法将其用于确定何时强行移除缓存项。
12096 = Cache % Machine Memory Limit Used Base
12097 = 计算机内存限制使用的缓存百分比的基数
12098 = Cache % Process Memory Limit Used
12099 = 辅助进程的专用字节的值除以缓存的专用字节内存限制得出的百分比值。此值达到 100% 时将强行移除一半的缓存项。__Total__ 实例是所有实例的平均值，因此无法将其用于确定何时强行移除缓存项。
12100 = Cache % Process Memory Limit Used Base
12101 = 进程内存限制使用的缓存百分比的基数
12102 = Cache Total Trims
12103 = 由于内存压力强行从缓存中移除的项的总数。
12104 = Cache API Trims
12105 = 原来使用一个公共缓存 API 插入到缓存中而由于内存压力强行从缓存中移除的项的总数。
12106 = Output Cache Trims
12107 = 原来由输出缓存功能插入到缓存中而由于内存压力强行从缓存中移除的项的总数。
12108 = % Managed Processor Time (estimated)
12109 = 处理器执行托管应用程序代码所用时间的估计百分比。此计数器仅跟踪应用程序中托管线程的处理器时间，不包括执行非托管线程所用的其他处理器时间。请注意，此计数器仅每五秒钟用新数据更新一次。
12110 = % Managed Processor Time Base (estimated)
12111 = 托管处理器时间基准百分比(估计)
12112 = Managed Memory Used (estimated)
12113 = 应用程序使用的托管堆内存估计值，单位为 KB。此计数器的准确性因距离上一次完全托管内存堆收集的时间间隔而异。请注意，此计数器仅每五秒钟用新数据更新一次。
12114 = 总传入请求字节(WebSocket)
12115 = ASP.NET 在 WebSocket 连接上接收的数据总大小(以字节为单位)。
12116 = 总传出请求字节(WebSocket)
12117 = 在 WebSocket 连接上向客户端发送的数据总大小(以字节为单位)。
12118 = 正在执行的请求(WebSocket)
12119 = 当前正在执行的 WebSocket 请求数。
12120 = 失败的请求(WebSocket)
12121 = 以中止状态结束的 WebSocket 请求的总数。
12122 = 成功的请求(WebSocket)
12123 = 成功完成的 WebSocket 请求的总数。
12124 = 请求总数(WebSocket)
12125 = 应用程序启动后的 WebSocket 请求的总数。
12402 = Web Service
12403 = Web 服务对象包含特定于万维网发布服务的计数器。
12404 = Total Bytes Sent
12405 = Total Bytes Sent 是由 Web 服务发送的数据字节数目(从服务启动后)。
12406 = Bytes Sent/sec
12407 = Bytes Sent/sec 是由 Web 服务每秒发送的数据字节数。
12408 = Total Bytes Received
12409 = Total Bytes Received 是 Web 服务接收到的数据字节数目(从服务启动后)。
12410 = Bytes Received/sec
12411 = Bytes Received/sec 是 Web 服务接收数据字节的速率。
12412 = Total Bytes Transferred
12413 = Web 服务发送或接收到的总字节数(从服务启动后)。
12414 = Bytes Total/sec
12415 = Bytes Total/sec 是 Bytes Sent/sec 与 Bytes Received/sec 的总和。这是 Web 服务每秒传输的总字节数。
12416 = Total Files Sent
12417 = Total Files Sent 是由 Web 服务发送的文件数目(从服务启动后)。
12418 = Files Sent/sec
12419 = Web 服务发送文件的速率。
12420 = Total Files Received
12421 = Total Files Received 是 Web 服务接收到的文件数目(从服务启动后)。
12422 = Files Received/sec
12423 = Web 服务接收文件的速率。
12424 = Total Files Transferred
12425 = Total Files Transferred 是发送和接收到的文件总和(从服务启动后)。
12426 = Files/sec
12427 = Web 服务传输文件的速率，即每秒钟发送和接收文件的总数。
12428 = Current Anonymous Users
12429 = Current Anonymous Users 是当前通过 Web 服务进行匿名连接的用户数。
12430 = Current NonAnonymous Users
12431 = Current NonAnonymous Users 是当前通过 Web 服务进行非匿名连接的用户数。
12432 = Total Anonymous Users
12433 = Total Anonymous Users 是与 Web 服务建立了匿名连接的总用户数目(从服务启动后)。
12434 = Anonymous Users/sec
12435 = 用户每秒钟与 Web 服务建立的匿名连接数。
12436 = Total NonAnonymous Users
12437 = Total NonAnonymous Users 是与 Web 服务建立了非匿名连接的总用户数目(从服务启动后)。
12438 = NonAnonymous Users/sec
12439 = 用户每秒钟与 Web 服务建立的非匿名连接数。
12440 = Maximum Anonymous Users
12441 = Maximum Anonymous Users 是通过 Web 服务同时进行匿名连接的最大用户数(从服务启动后)。
12442 = Maximum NonAnonymous Users
12443 = Maximum NonAnonymous Users 是通过 Web 服务同时进行非匿名连接的最大用户数(从服务启动后)。
12444 = Current Connections
12445 = Current Connections 是当前与 Web 服务建立的连接数。
12446 = Maximum Connections
12447 = Maximum Connections 是通过 Web 服务同时进行非匿名连接的最大用户数(从服务启动后)。
12448 = Total Connection Attempts (all instances)
12449 = Total Connection Attempts 是尝试通过 Web 服务进行连接的总数(从服务启动后)。此计数器针对所有列出的实例。
12450 = Connection Attempts/sec
12451 = 每秒钟尝试对 Web 服务的连接数。
12452 = Total Logon Attempts
12453 = Total Logon Attempts 是尝试登录到 Web 服务的数目(从服务启动后)。
12454 = Logon Attempts/sec
12455 = 每秒钟尝试登录到 Web 服务的数目。
12456 = Total Options Requests
12457 = Total Options Requests 是使用 OPTIONS 方法的 HTTP 请求数目(从服务启动后)。
12458 = Options Requests/sec
12459 = 使用 OPTIONS 方法进行 HTTP 请求的速率。
12460 = Total Get Requests
12461 = Total Get Requests 是使用 GET 方法的 HTTP 请求数(从服务启动后)。Get 请求是最常见的 HTTP 请求。
12462 = Get Requests/sec
12463 = 每秒钟使用 GET 方法的 HTTP 请求数。Get 请求是最常见的 HTTP 请求。
12464 = Total Post Requests
12465 = Total Post Requests 是使用 Post 方法的 HTTP 请求数(从服务启动后)。
12466 = Post Requests/sec
12467 = 每秒钟使用 POST 方法的 HTTP 请求数。
12468 = Total Head Requests
12469 = Total Head Requests 是使用 HEAD 方法的 HTTP 请求数(从服务启动后)。Head 请求一般来说意味着客户端查询它已经有的一个文档的状态，看它是否需要刷新。
12470 = Head Requests/sec
12471 = 使用 Head 方法进行 HTTP 请求的速率。Head 请求通常表明客户端正在查询已有文档的状态，以便确定是否需要刷新文档。
12472 = Total Put Requests
12473 = Total Put Requests 是使用 PUT 方法的 HTTP 请求数(从服务启动后)。
12474 = Put Requests/sec
12475 = 使用 PUT 方法进行 HTTP 请求的速率。
12476 = Total Delete Requests
12477 = Total Delete Requests 是使用 DELETE 方法的 HTTP 请求数(从服务启动后)。Delete 请求通常用于文件删除。
12478 = Delete Requests/sec
12479 = 使用 Delete 方法进行 HTTP 请求的速率。Delete 请求通常用于文件删除。
12480 = Total Trace Requests
12481 = Total Trace Requests 是使用 TRACE 方法的 HTTP 请求数(从服务启动后)。Trace 请求可使客户端在请求链的结尾看到接收到的信息并利用接收到的信息进行诊断。
12482 = Trace Requests/sec
12483 = 使用 TRACE 方法进行 HTTP 请求的速率。Trace 请求使客户端可以在请求链的结尾查看收到的信息并利用接收到的信息进行诊断。
12484 = Total Move Requests
12485 = Total Move Requests 是使用 MOVE 方法的 HTTP 请求数(从服务启动后)。Move 请求用于移动文件和目录。
12486 = Move Requests/sec
12487 = 使用 MOVE 方法进行 HTTP 请求的速率。Move 请求用于移动文件和目录。
12488 = Total Copy Requests
12489 = Total Copy Requests 是使用 COPY 方法的 HTTP 请求数(从服务启动后)。Copy 请求用于复制文件和目录。
12490 = Copy Requests/sec
12491 = 使用 COPY 方法进行 HTTP 请求的速率。Copy 请求用于复制文件和目录。
12492 = Total Mkcol Requests
12493 = Total Mkcol Requests 是使用 MKCOL 方法的 HTTP 请求数(从服务启动后)。Mkcol 请求用于在服务器上创建目录。
12494 = Mkcol Requests/sec
12495 = 使用 MKCOL 方法进行 HTTP 请求的速率。Mkcol 请求用于在服务器上创建目录。
12496 = Total Propfind Requests
12497 = Total Propfind Requests 是使用 PROPFIND 方法的 HTTP 请求数(从服务启动后)。Propfind 请求用于在文件和服务器上检索属性值。
12498 = Propfind Requests/sec
12499 = 使用 PROPFIND 方法进行 HTTP 请求的速率。Propfind 请求用于检索文件和目录上的属性值。
12500 = Total Proppatch Requests
12501 = Total Proppatch Requests 是使用 PROPPATCH 方法的 HTTP 请求数(从服务启动后)。Proppatch 请求用于在文件和目录上设置属性值。
12502 = Proppatch Requests/sec
12503 = 使用 PROPPATCH 方法进行 HTTP 请求的速率。Proppatch 请求用于设置文件和目录上的属性值。
12504 = Total Search Requests
12505 = Total Search Requests 是使用 SEARCH 方法的 HTTP 请求数(从服务启动后)。Search 请求用来查询服务器，以找到与客户端提供的一组条件相匹配的资源。
12506 = Search Requests/sec
12507 = 每秒钟使用 SEARCH 方法完成的 HTTP 请求数。Search 请求用来查询服务器，以找到与客户端提供的一组条件相匹配的资源。
12508 = Total Lock Requests
12509 = Lock Requests 是使用 LOCK 方法的 HTTP 请求数(从服务启动后)。Lock 请求用来为一个用户锁定一个文件，使此文件只能由此用户修改。
12510 = Lock Requests/sec
12511 = 使用 LOCK 方法进行 HTTP 请求的速率。Lock 请求用于为某个用户锁定某个文件，以使该文件只能由该用户进行修改。
12512 = Total Unlock Requests
12513 = Total Unlock Requests 是使用 UNLOCK 方法的 HTTP 请求数(从服务启动后)。Unlock 请求用于去掉对文件的锁定。
12514 = Unlock Requests/sec
12515 = 每秒使用 UNLOCK 方法进行的 HTTP 请求数。Unlock 请求用于去掉对文件的锁定。
12516 = Total Other Request Methods
12517 = Total Other Request Methods 是(自服务启动后)除 OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE、MOVE、COPY、MKCOL、PROPFIND、PROPPATCH、SEARCH、LOCK 或 UNLOCK 方法以外的 HTTP 请求数。
12518 = Other Request Methods/sec
12519 = 不使用 OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE、MOVE、COPY、MKCOL、PROPFIND、PROPPATCH、SEARCH、LOCK 或 UNLOCK 方法进行 HTTP 请求的速率。
12520 = Total Method Requests
12521 = Total Method Requests 是所有 HTTP 请求数(自服务启动后)。
12522 = Total Method Requests/sec
12523 = 每秒接收的 HTTP 请求数。
12524 = Total CGI Requests
12525 = Total CGI requests 是 CGI 请求的总数(自服务启动后)。
12526 = CGI Requests/sec
12527 = Web 服务接收 CGI 请求的速率。
12528 = Total ISAPI Extension Requests
12529 = 接收的 ISAPI 扩展请求的总数(自服务启动后)。
12530 = ISAPI Extension Requests/sec
12531 = Web 服务接收 ISAPI 扩展请求的速率。
12532 = Total Not Found Errors
12533 = Total Not Found Errors 是服务器由于找不到请求的文档而无法完成的请求数(自服务启动后)。这通常报告一个 HTTP 404 错误码到客户端。
12534 = Not Found Errors/sec
12535 = 服务器由于找不到请求的文档而无法完成请求所导致的出错率。通常以 HTTP 404 错误代码的形式向客户端报告这些错误。
12536 = Total Locked Errors
12537 = Total Locked Errors 是服务器由于请求被锁定而无法完成的请求数(自服务启动后)。这通常报告一个 HTTP 423 错误码到客户端。
12538 = Locked Errors/sec
12539 = 服务器由于请求的文档被锁定而无法完成请求所导致的出错率。通常以 HTTP 423 错误代码的形式向客户端报告这些错误。
12540 = Current CGI Requests
12541 = Current CGI Requests 是当前 Web 服务同时处理的 CGI 请求数。
12542 = Current ISAPI Extension Requests
12543 = Current ISAPI Extension Requests 是当前 Web 服务同时处理的 ISAPI 请求数。
12544 = Maximum CGI Requests
12545 = Maximum CGI Requests 是 Web 服务同时处理的 CGI 请求的最大数量(自服务启动后)。
12546 = Maximum ISAPI Extension Requests
12547 = Maximum ISAPI Extension Requests 是 Web 服务同时处理的 ISAPI 请求的最大数量(自服务启动后)。
12548 = Current CAL count for authenticated users
12549 = 此计数器不再有效。值将始终为零。
12550 = Maximum CAL count for authenticated users
12551 = 此计数器不再有效。值将始终为零。
12552 = Total count of failed CAL requests for authenticated users
12553 = 此计数器不再有效。值将始终为零。
12554 = Current CAL count for SSL connections
12555 = 此计数器不再有效。值将始终为零。
12556 = Maximum CAL count for SSL connections
12557 = 此计数器不再有效。值将始终为零。
12558 = Total Blocked Async I/O Requests
12559 = 由于带宽限制设置而暂时被阻止的请求总数(自服务启动后)。
12560 = Total Allowed Async I/O Requests
12561 = 带宽限制设置允许的请求总数(自服务启动后)。
12562 = Total Rejected Async I/O Requests
12563 = 由于带宽限制设置而拒绝的请求总数(自服务启动后)。
12564 = Current Blocked Async I/O Requests
12565 = 当前由于带宽限制设置而暂时被阻止的请求数。
12566 = Total count of failed CAL requests for SSL connections
12567 = 此计数器不再有效。值将始终为零。
12568 = Measured Async I/O Bandwidth Usage
12569 = 一分钟内测得的平均异步 I/O 带宽。
12570 = Total blocked bandwidth bytes.
12571 = 由于带宽限制设置而被阻止的总字节数(自服务启动后)。
12572 = Current blocked bandwidth bytes.
12573 = 当前由于带宽限制设置而暂时被阻止的字节数。
12574 = Service Uptime
12575 = Web 服务已经运行的时间。
12576 = Web Service Cache
12577 = Web Service Cache 计数器对象包括万维网发布服务特定的缓存计数器。
12578 = Current Files Cached
12579 = 其内容位于用户模式缓存中的当前文件数。
12580 = Total Files Cached
12581 = 其内容已添加到用户模式缓存的文件总数(自服务启动后)。
12582 = File Cache Hits
12583 = 在用户模式文件缓存中成功查找的总数(自服务启动后)。
12584 = File Cache Misses
12585 = 在用户模式文件缓存中查找失败的总数(自服务启动后)。
12586 = File Cache Hits %
12587 = 用户模式文件缓存命中数与缓存请求总数的比(自服务启动后)。
12590 = File Cache Flushes
12591 = 从用户模式缓存删除的文件数(自服务启动后)。
12592 = Current File Cache Memory Usage
12593 = 当前用户模式文件缓存使用的字节数。
12594 = Maximum File Cache Memory Usage
12595 = 用户模式文件缓存使用的最大字节数(自服务启动后)。
12596 = Active Flushed Entries
12597 = Active Flushed Entries 是所有当前传输完成时将被关闭的缓存于用户模式中的文件句柄。
12598 = Total Flushed Files
12599 = Total Flushed Files 是已经从用户模式缓存删除的句柄数量(自服务启动后)。
12600 = Current URIs Cached
12601 = 当前用户模式缓存中的 URI 信息块。
12602 = Total URIs Cached
12603 = 添加到用户模式缓存的 URI 信息块的总数(自服务启动后)。
12604 = URI Cache Hits
12605 = 在用户模式 URI 缓存中成功查找的总数(自服务启动后)。
12606 = URI Cache Misses
12607 = 在用户模式 URI 缓存中查找失败的总数(自服务启动后)。
12608 = URI Cache Hits %
12609 = 用户模式 URI 缓存命中与缓存请求总数的比(自服务启动后)。
12612 = URI Cache Flushes
12613 = 用户模式 URI 缓存刷新(自服务启动后)。
12614 = Total Flushed URIs
12615 = 已经从用户模式缓存删除的 URI 信息块数(自服务启动后)。
12616 = Current Metadata Cached
12617 = 当前在用户模式缓存中元数据信息块的当前数量。
12618 = Total Metadata Cached
12619 = 添加到用户模式缓存的元数据信息块的总数(自服务启动后)。
12620 = Metadata Cache Hits
12621 = 在用户模式元数据缓存中成功查找的总数(自服务启动后)。
12622 = Metadata Cache Misses
12623 = 在用户模式元数据缓存中查找失败的总数(自服务启动后)。
12624 = Metadata Cache Hits %
12625 = 用户模式元数据缓存与缓存请求总数的比(自服务启动后)。
12628 = Metadata Cache Flushes
12629 = 用户模式元数据缓存刷新的次数(自服务启动后)。
12630 = Total Flushed Metadata
12631 = Total Flushed Metadata 是已经从用户模式缓存删除的元数据信息块的数量(自服务启动后)。
12632 = Kernel: Current URIs Cached
12633 = 内核当前缓存的 URI 信息块的数量。
12634 = Kernel: Total URIs Cached
12635 = 添加到内核缓存的 URI 信息块的总数(自服务启动后)。
12636 = Kernel: URI Cache Hits
12637 = 在内核 URI 缓存中成功查找的总数(自服务启动后)。
12638 = Kernel: Uri Cache Hits/sec
12639 = 内核 URI 缓存命中率。
12640 = Kernel: URI Cache Misses
12641 = 在内核 URI 缓存中查找失败的总数(自服务启动后)。
12642 = Kernel: URI Cache Hits %
12643 = 内核 URI 缓存命中与缓存请求总数的比(自服务启动后)。
12646 = Kernel: URI Cache Flushes
12647 = 内核 URI 缓存刷新数(自服务启动后)。
12648 = Kernel: Total Flushed URIs
12649 = 已经从内核缓存删除的 URI 信息块的数量(自服务启动后)。
12650 = Output Cache Current Memory Usage
12651 = 输出缓存当前使用的内存的情况。
12652 = Output Cache Current Items
12653 = 输出缓存中当前的项目数。
12654 = Output Cache Total Hits
12655 = 输出缓存中的命中总数。
12656 = Output Cache Total Misses
12657 = 输出缓存中的未命中总数。
12658 = Output Cache Total Flushes
12659 = 输出缓存中的刷新总数。
12660 = Output Cache Current Flushed Items
12661 = 已刷新但仍由传出的响应使用并因而占用内存的项目数。
12662 = Output Cache Total Flushed Items
12663 = 缓存刷新的项目总数。
12664 = Output Cache Current Hits %
12665 = 输出缓存的当前命中率。计算公式为(H)/(H+M)，其中 H 和 M 分别表示在以前的采样间隔中的命中率和未命中率。
12910 = ASP.NET v2.0.50727
12911 = ASP.NET global performance counters
12912 = ASP.NET Apps v2.0.50727
12913 = ASP.NET application performance counters
12914 = Application Restarts
12915 = Number of times the application has been restarted during the web server's lifetime.
12916 = Applications Running
12917 = Number of currently running web applications.
12918 = Requests Disconnected
12919 = The number of requests disconnected due to communication errors or user terminated.
12920 = Request Execution Time
12921 = The number of milliseconds that it took to execute the most recent request.
12922 = Requests Rejected
12923 = The number of requests rejected because the request queue was full.
12924 = Requests Queued
12925 = The number of requests waiting to be processed.
12926 = Worker Processes Running
12927 = Number of worker processes running on the machine.
12928 = Worker Process Restarts
12929 = Number of times a worker process has restarted on the machine.
12930 = Request Wait Time
12931 = The number of milliseconds the most recent request was waiting in the queue.
12932 = State Server Sessions Active
12933 = The current number of sessions currently active.
12934 = State Server Sessions Abandoned
12935 = The number of sessions that have been explicitly abandoned.
12936 = State Server Sessions Timed Out
12937 = The number of sessions timed out.
12938 = State Server Sessions Total
12939 = The number of sessions total.
12940 = Requests Current
12941 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
12942 = Audit Success Events Raised
12943 = Number of audit successes in the application since it was started.
12944 = Audit Failure Events Raised
12945 = Number of audit failures in the application since it was started.
12946 = Error Events Raised
12947 = Number of error events raised since the application was started.
12948 = Request Error Events Raised
12949 = Number of runtime error events raised since the application was started.
12950 = Infrastructure Error Events Raised
12951 = Number of HTTP error events raised since the application was started.
12952 = Anonymous Requests
12953 = Number of requests utilizing anonymous authentication.
12954 = Anonymous Requests/Sec
12955 = Number of Authentication Anonymous Requests/Sec
12956 = Cache Total Entries
12957 = Total number of entries within the cache (both internal and user added)
12958 = Cache Total Turnover Rate
12959 = Number of additions and removals to the total cache per second.
12960 = Cache Total Hits
12961 = Total number of hits from the cache.
12962 = Cache Total Misses
12963 = Total number of cache misses.
12964 = Cache Total Hit Ratio
12965 = Ratio of hits from all cache calls.
12966 = Cache Total Hit Ratio Base
12967 = Cache Total Hit Ratio Base
12968 = Cache API Entries
12969 = Total number of entries within the cache added by the user.
12970 = Cache API Turnover Rate
12971 = Number of additions and removals to the API cache per second.
12972 = Cache API Hits
12973 = Number of cache hits from user code.
12974 = Cache API Misses
12975 = Number of cache misses called from user code.
12976 = Cache API Hit Ratio
12977 = Ratio of hits called from user code.
12978 = Cache API Hit Ratio Base
12979 = Cache API Hit Ratio Base
12980 = Output Cache Entries
12981 = Current number of entries in the output cache.
12982 = Output Cache Turnover Rate
12983 = Number of additions and removals to the output cache per second.
12984 = Output Cache Hits
12985 = Total number of output cacheable requests served from the output cache.
12986 = Output Cache Misses
12987 = Total number of output cacheable requests not served from the output cache.
12988 = Output Cache Hit Ratio
12989 = Ratio of hits to requests for output cacheable requests.
12990 = Output Cache Hit Ratio Base
12991 = Output Cache Hit Ratio Base
12992 = Compilations Total
12993 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
12994 = Debugging Requests
12995 = Number of debugging requests processed.
12996 = Errors During Preprocessing
12997 = Number of errors that have occurred during parsing and configuration.
12998 = Errors During Compilation
12999 = Number of errors that have occurred during compilation.
13000 = Errors During Execution
13001 = Number of errors that have occurred during the processing of a request.
13002 = Errors Unhandled During Execution
13003 = Number of errors not handled by user code, but by the default error handler.
13004 = Errors Unhandled During Execution/Sec
13005 = Rate of unhandled errors.
13006 = Errors Total
13007 = Total number of errors occurred.
13008 = Errors Total/Sec
13009 = Rate of errors occurred.
13010 = Pipeline Instance Count
13011 = Number of active pipeline instances.
13012 = Request Bytes In Total
13013 = The total size, in bytes, of all requests.
13014 = Request Bytes Out Total
13015 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
13016 = Requests Executing
13017 = The number of requests currently executing.
13018 = Requests Failed
13019 = Total number of failed requests.
13020 = Requests Not Found
13021 = The number of requests for resources that were not found.
13022 = Requests Not Authorized
13023 = Number of requests failed due to unauthorized access.
13024 = Requests In Application Queue
13025 = The number of requests in the application request queue.
13026 = Requests Timed Out
13027 = The number of requests that timed out.
13028 = Requests Succeeded
13029 = The number of requests that executed successfully.
13030 = Requests Total
13031 = The total number of requests since the application was started.
13032 = Requests/Sec
13033 = The number of requests executed per second.
13034 = Sessions Active
13035 = The current number of sessions currently active.
13036 = Sessions Abandoned
13037 = The number of sessions that have been explicitly abandoned.
13038 = Sessions Timed Out
13039 = The number of sessions timed out.
13040 = Sessions Total
13041 = Total number of sessions since the application was started.
13042 = Transactions Aborted
13043 = The number of transactions aborted.
13044 = Transactions Committed
13045 = The number of transactions committed.
13046 = Transactions Pending
13047 = Number of transactions in progress.
13048 = Transactions Total
13049 = The total number of transactions since the application was started.
13050 = Transactions/Sec
13051 = Transactions started per second.
13052 = Session State Server connections total
13053 = The total number of connections to the State Server used by session state.
13054 = Session SQL Server connections total
13055 = The total number of connections to the SQL Server used by session state.
13056 = Events Raised
13057 = Total number of instrumentation events raised since the application was started.
13058 = Events Raised/Sec
13059 = Total number of instrumentation events per second.
13060 = Application Lifetime Events
13061 = Number of application events raised since the application was started.
13062 = Application Lifetime Events/Sec
13063 = Number of application events raised per second.
13064 = Error Events Raised
13065 = Number of error events raised since the application was started.
13066 = Error Events Raised/Sec
13067 = Number of error events per second.
13068 = Request Error Events Raised
13069 = Number of runtime error events raised since the application was started.
13070 = Request Error Events Raised/Sec
13071 = Number of runtime error events per second.
13072 = Infrastructure Error Events Raised
13073 = Number of HTTP error events raised since the application was started.
13074 = Infrastructure Error Events Raised/Sec
13075 = Number of HTTP error events raised per second.
13076 = Request Events Raised
13077 = Number of request events raised since the application was started
13078 = Request Events Raised/Sec
13079 = Number of request events raised per second.
13080 = Audit Success Events Raised
13081 = Number of audit successes in the application since it was started.
13082 = Audit Failure Events Raised
13083 = Number of audit failures in the application since it was started.
13084 = Membership Authentication Success
13085 = Number of successful membership credential validations since the application was started.
13086 = Membership Authentication Failure
13087 = Number of failed membership credential validations since the application was started.
13088 = Forms Authentication Success
13089 = Number of successful forms authentication ticket validations since the application was started.
13090 = Forms Authentication Failure
13091 = Number of failed forms authentication ticket validations since the application was started.
13092 = Viewstate MAC Validation Failure
13093 = Number of viewstate MAC validations that failed since the application was started.
13094 = Request Execution Time
13095 = The number of milliseconds that it took to execute the most recent request.
13096 = Requests Disconnected
13097 = The number of requests disconnected due to communication errors or user terminated.
13098 = Requests Rejected
13099 = The number of requests rejected because the application request queue was full.
13100 = Request Wait Time
13101 = The number of milliseconds the most recent request was waiting in the queue.
13102 = Cache % Machine Memory Limit Used
13103 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13104 = Cache % Machine Memory Limit Used Base
13105 = Cache % Machine Memory Limit Used Base
13106 = Cache % Process Memory Limit Used
13107 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13108 = Cache % Process Memory Limit Used Base
13109 = Cache % Process Memory Limit Used Base
13110 = Cache Total Trims
13111 = Total number of entries forcibly removed from the cache due to memory pressure.
13112 = Cache API Trims
13113 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
13114 = Output Cache Trims
13115 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.
13116 = ASP.NET v2.0.50727
13117 = ASP.NET global performance counters
13118 = ASP.NET Apps v2.0.50727
13119 = ASP.NET application performance counters
13120 = Application Restarts
13121 = Number of times the application has been restarted during the web server's lifetime.
13122 = Applications Running
13123 = Number of currently running web applications.
13124 = Requests Disconnected
13125 = The number of requests disconnected due to communication errors or user terminated.
13126 = Request Execution Time
13127 = The number of milliseconds that it took to execute the most recent request.
13128 = Requests Rejected
13129 = The number of requests rejected because the request queue was full.
13130 = Requests Queued
13131 = The number of requests waiting to be processed.
13132 = Worker Processes Running
13133 = Number of worker processes running on the machine.
13134 = Worker Process Restarts
13135 = Number of times a worker process has restarted on the machine.
13136 = Request Wait Time
13137 = The number of milliseconds the most recent request was waiting in the queue.
13138 = State Server Sessions Active
13139 = The current number of sessions currently active.
13140 = State Server Sessions Abandoned
13141 = The number of sessions that have been explicitly abandoned.
13142 = State Server Sessions Timed Out
13143 = The number of sessions timed out.
13144 = State Server Sessions Total
13145 = The number of sessions total.
13146 = Requests Current
13147 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
13148 = Audit Success Events Raised
13149 = Number of audit successes in the application since it was started.
13150 = Audit Failure Events Raised
13151 = Number of audit failures in the application since it was started.
13152 = Error Events Raised
13153 = Number of error events raised since the application was started.
13154 = Request Error Events Raised
13155 = Number of runtime error events raised since the application was started.
13156 = Infrastructure Error Events Raised
13157 = Number of HTTP error events raised since the application was started.
13158 = Anonymous Requests
13159 = Number of requests utilizing anonymous authentication.
13160 = Anonymous Requests/Sec
13161 = Number of Authentication Anonymous Requests/Sec
13162 = Cache Total Entries
13163 = Total number of entries within the cache (both internal and user added)
13164 = Cache Total Turnover Rate
13165 = Number of additions and removals to the total cache per second.
13166 = Cache Total Hits
13167 = Total number of hits from the cache.
13168 = Cache Total Misses
13169 = Total number of cache misses.
13170 = Cache Total Hit Ratio
13171 = Ratio of hits from all cache calls.
13172 = Cache Total Hit Ratio Base
13173 = Cache Total Hit Ratio Base
13174 = Cache API Entries
13175 = Total number of entries within the cache added by the user.
13176 = Cache API Turnover Rate
13177 = Number of additions and removals to the API cache per second.
13178 = Cache API Hits
13179 = Number of cache hits from user code.
13180 = Cache API Misses
13181 = Number of cache misses called from user code.
13182 = Cache API Hit Ratio
13183 = Ratio of hits called from user code.
13184 = Cache API Hit Ratio Base
13185 = Cache API Hit Ratio Base
13186 = Output Cache Entries
13187 = Current number of entries in the output cache.
13188 = Output Cache Turnover Rate
13189 = Number of additions and removals to the output cache per second.
13190 = Output Cache Hits
13191 = Total number of output cacheable requests served from the output cache.
13192 = Output Cache Misses
13193 = Total number of output cacheable requests not served from the output cache.
13194 = Output Cache Hit Ratio
13195 = Ratio of hits to requests for output cacheable requests.
13196 = Output Cache Hit Ratio Base
13197 = Output Cache Hit Ratio Base
13198 = Compilations Total
13199 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
13200 = Debugging Requests
13201 = Number of debugging requests processed.
13202 = Errors During Preprocessing
13203 = Number of errors that have occurred during parsing and configuration.
13204 = Errors During Compilation
13205 = Number of errors that have occurred during compilation.
13206 = Errors During Execution
13207 = Number of errors that have occurred during the processing of a request.
13208 = Errors Unhandled During Execution
13209 = Number of errors not handled by user code, but by the default error handler.
13210 = Errors Unhandled During Execution/Sec
13211 = Rate of unhandled errors.
13212 = Errors Total
13213 = Total number of errors occurred.
13214 = Errors Total/Sec
13215 = Rate of errors occurred.
13216 = Pipeline Instance Count
13217 = Number of active pipeline instances.
13218 = Request Bytes In Total
13219 = The total size, in bytes, of all requests.
13220 = Request Bytes Out Total
13221 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
13222 = Requests Executing
13223 = The number of requests currently executing.
13224 = Requests Failed
13225 = Total number of failed requests.
13226 = Requests Not Found
13227 = The number of requests for resources that were not found.
13228 = Requests Not Authorized
13229 = Number of requests failed due to unauthorized access.
13230 = Requests In Application Queue
13231 = The number of requests in the application request queue.
13232 = Requests Timed Out
13233 = The number of requests that timed out.
13234 = Requests Succeeded
13235 = The number of requests that executed successfully.
13236 = Requests Total
13237 = The total number of requests since the application was started.
13238 = Requests/Sec
13239 = The number of requests executed per second.
13240 = Sessions Active
13241 = The current number of sessions currently active.
13242 = Sessions Abandoned
13243 = The number of sessions that have been explicitly abandoned.
13244 = Sessions Timed Out
13245 = The number of sessions timed out.
13246 = Sessions Total
13247 = Total number of sessions since the application was started.
13248 = Transactions Aborted
13249 = The number of transactions aborted.
13250 = Transactions Committed
13251 = The number of transactions committed.
13252 = Transactions Pending
13253 = Number of transactions in progress.
13254 = Transactions Total
13255 = The total number of transactions since the application was started.
13256 = Transactions/Sec
13257 = Transactions started per second.
13258 = Session State Server connections total
13259 = The total number of connections to the State Server used by session state.
13260 = Session SQL Server connections total
13261 = The total number of connections to the SQL Server used by session state.
13262 = Events Raised
13263 = Total number of instrumentation events raised since the application was started.
13264 = Events Raised/Sec
13265 = Total number of instrumentation events per second.
13266 = Application Lifetime Events
13267 = Number of application events raised since the application was started.
13268 = Application Lifetime Events/Sec
13269 = Number of application events raised per second.
13270 = Error Events Raised
13271 = Number of error events raised since the application was started.
13272 = Error Events Raised/Sec
13273 = Number of error events per second.
13274 = Request Error Events Raised
13275 = Number of runtime error events raised since the application was started.
13276 = Request Error Events Raised/Sec
13277 = Number of runtime error events per second.
13278 = Infrastructure Error Events Raised
13279 = Number of HTTP error events raised since the application was started.
13280 = Infrastructure Error Events Raised/Sec
13281 = Number of HTTP error events raised per second.
13282 = Request Events Raised
13283 = Number of request events raised since the application was started
13284 = Request Events Raised/Sec
13285 = Number of request events raised per second.
13286 = Audit Success Events Raised
13287 = Number of audit successes in the application since it was started.
13288 = Audit Failure Events Raised
13289 = Number of audit failures in the application since it was started.
13290 = Membership Authentication Success
13291 = Number of successful membership credential validations since the application was started.
13292 = Membership Authentication Failure
13293 = Number of failed membership credential validations since the application was started.
13294 = Forms Authentication Success
13295 = Number of successful forms authentication ticket validations since the application was started.
13296 = Forms Authentication Failure
13297 = Number of failed forms authentication ticket validations since the application was started.
13298 = Viewstate MAC Validation Failure
13299 = Number of viewstate MAC validations that failed since the application was started.
13300 = Request Execution Time
13301 = The number of milliseconds that it took to execute the most recent request.
13302 = Requests Disconnected
13303 = The number of requests disconnected due to communication errors or user terminated.
13304 = Requests Rejected
13305 = The number of requests rejected because the application request queue was full.
13306 = Request Wait Time
13307 = The number of milliseconds the most recent request was waiting in the queue.
13308 = Cache % Machine Memory Limit Used
13309 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13310 = Cache % Machine Memory Limit Used Base
13311 = Cache % Machine Memory Limit Used Base
13312 = Cache % Process Memory Limit Used
13313 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13314 = Cache % Process Memory Limit Used Base
13315 = Cache % Process Memory Limit Used Base
13316 = Cache Total Trims
13317 = Total number of entries forcibly removed from the cache due to memory pressure.
13318 = Cache API Trims
13319 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
13320 = Output Cache Trims
13321 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.
13322 = ASP.NET
13323 = ASP.NET global performance counters
13324 = ASP.NET Applications
13325 = ASP.NET application performance counters
13326 = Application Restarts
13327 = Number of times the application has been restarted during the web server's lifetime.
13328 = Applications Running
13329 = Number of currently running web applications.
13330 = Requests Disconnected
13331 = The number of requests disconnected due to communication errors or user terminated.
13332 = Request Execution Time
13333 = The number of milliseconds that it took to execute the most recent request.
13334 = Requests Rejected
13335 = The number of requests rejected because the request queue was full.
13336 = Requests Queued
13337 = The number of requests waiting to be processed.
13338 = Worker Processes Running
13339 = Number of worker processes running on the machine.
13340 = Worker Process Restarts
13341 = Number of times a worker process has restarted on the machine.
13342 = Request Wait Time
13343 = The number of milliseconds the most recent request was waiting in the queue.
13344 = State Server Sessions Active
13345 = The current number of sessions currently active.
13346 = State Server Sessions Abandoned
13347 = The number of sessions that have been explicitly abandoned.
13348 = State Server Sessions Timed Out
13349 = The number of sessions timed out.
13350 = State Server Sessions Total
13351 = The number of sessions total.
13352 = Requests Current
13353 = The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests.
13354 = Audit Success Events Raised
13355 = Number of audit successes in the application since it was started.
13356 = Audit Failure Events Raised
13357 = Number of audit failures in the application since it was started.
13358 = Error Events Raised
13359 = Number of error events raised since the application was started.
13360 = Request Error Events Raised
13361 = Number of runtime error events raised since the application was started.
13362 = Infrastructure Error Events Raised
13363 = Number of HTTP error events raised since the application was started.
13364 = Anonymous Requests
13365 = Number of requests utilizing anonymous authentication.
13366 = Anonymous Requests/Sec
13367 = Number of Authentication Anonymous Requests/Sec
13368 = Cache Total Entries
13369 = Total number of entries within the cache (both internal and user added)
13370 = Cache Total Turnover Rate
13371 = Number of additions and removals to the total cache per second.
13372 = Cache Total Hits
13373 = Total number of hits from the cache.
13374 = Cache Total Misses
13375 = Total number of cache misses.
13376 = Cache Total Hit Ratio
13377 = Ratio of hits from all cache calls.
13378 = Cache Total Hit Ratio Base
13379 = Cache Total Hit Ratio Base
13380 = Cache API Entries
13381 = Total number of entries within the cache added by the user.
13382 = Cache API Turnover Rate
13383 = Number of additions and removals to the API cache per second.
13384 = Cache API Hits
13385 = Number of cache hits from user code.
13386 = Cache API Misses
13387 = Number of cache misses called from user code.
13388 = Cache API Hit Ratio
13389 = Ratio of hits called from user code.
13390 = Cache API Hit Ratio Base
13391 = Cache API Hit Ratio Base
13392 = Output Cache Entries
13393 = Current number of entries in the output cache.
13394 = Output Cache Turnover Rate
13395 = Number of additions and removals to the output cache per second.
13396 = Output Cache Hits
13397 = Total number of output cacheable requests served from the output cache.
13398 = Output Cache Misses
13399 = Total number of output cacheable requests not served from the output cache.
13400 = Output Cache Hit Ratio
13401 = Ratio of hits to requests for output cacheable requests.
13402 = Output Cache Hit Ratio Base
13403 = Output Cache Hit Ratio Base
13404 = Compilations Total
13405 = Number of .asax, .ascx, .ashx, .asmx, or .aspx source files dynamically compiled.
13406 = Debugging Requests
13407 = Number of debugging requests processed.
13408 = Errors During Preprocessing
13409 = Number of errors that have occurred during parsing and configuration.
13410 = Errors During Compilation
13411 = Number of errors that have occurred during compilation.
13412 = Errors During Execution
13413 = Number of errors that have occurred during the processing of a request.
13414 = Errors Unhandled During Execution
13415 = Number of errors not handled by user code, but by the default error handler.
13416 = Errors Unhandled During Execution/Sec
13417 = Rate of unhandled errors.
13418 = Errors Total
13419 = Total number of errors occurred.
13420 = Errors Total/Sec
13421 = Rate of errors occurred.
13422 = Pipeline Instance Count
13423 = Number of active pipeline instances.
13424 = Request Bytes In Total
13425 = The total size, in bytes, of all requests.
13426 = Request Bytes Out Total
13427 = The total size, in bytes, of responses sent to a client.  This does not include standard HTTP response headers.
13428 = Requests Executing
13429 = The number of requests currently executing.
13430 = Requests Failed
13431 = Total number of failed requests.
13432 = Requests Not Found
13433 = The number of requests for resources that were not found.
13434 = Requests Not Authorized
13435 = Number of requests failed due to unauthorized access.
13436 = Requests In Application Queue
13437 = The number of requests in the application request queue.
13438 = Requests Timed Out
13439 = The number of requests that timed out.
13440 = Requests Succeeded
13441 = The number of requests that executed successfully.
13442 = Requests Total
13443 = The total number of requests since the application was started.
13444 = Requests/Sec
13445 = The number of requests executed per second.
13446 = Sessions Active
13447 = The current number of sessions currently active.
13448 = Sessions Abandoned
13449 = The number of sessions that have been explicitly abandoned.
13450 = Sessions Timed Out
13451 = The number of sessions timed out.
13452 = Sessions Total
13453 = Total number of sessions since the application was started.
13454 = Transactions Aborted
13455 = The number of transactions aborted.
13456 = Transactions Committed
13457 = The number of transactions committed.
13458 = Transactions Pending
13459 = Number of transactions in progress.
13460 = Transactions Total
13461 = The total number of transactions since the application was started.
13462 = Transactions/Sec
13463 = Transactions started per second.
13464 = Session State Server connections total
13465 = The total number of connections to the State Server used by session state.
13466 = Session SQL Server connections total
13467 = The total number of connections to the SQL Server used by session state.
13468 = Events Raised
13469 = Total number of instrumentation events raised since the application was started.
13470 = Events Raised/Sec
13471 = Total number of instrumentation events per second.
13472 = Application Lifetime Events
13473 = Number of application events raised since the application was started.
13474 = Application Lifetime Events/Sec
13475 = Number of application events raised per second.
13476 = Error Events Raised
13477 = Number of error events raised since the application was started.
13478 = Error Events Raised/Sec
13479 = Number of error events per second.
13480 = Request Error Events Raised
13481 = Number of runtime error events raised since the application was started.
13482 = Request Error Events Raised/Sec
13483 = Number of runtime error events per second.
13484 = Infrastructure Error Events Raised
13485 = Number of HTTP error events raised since the application was started.
13486 = Infrastructure Error Events Raised/Sec
13487 = Number of HTTP error events raised per second.
13488 = Request Events Raised
13489 = Number of request events raised since the application was started
13490 = Request Events Raised/Sec
13491 = Number of request events raised per second.
13492 = Audit Success Events Raised
13493 = Number of audit successes in the application since it was started.
13494 = Audit Failure Events Raised
13495 = Number of audit failures in the application since it was started.
13496 = Membership Authentication Success
13497 = Number of successful membership credential validations since the application was started.
13498 = Membership Authentication Failure
13499 = Number of failed membership credential validations since the application was started.
13500 = Forms Authentication Success
13501 = Number of successful forms authentication ticket validations since the application was started.
13502 = Forms Authentication Failure
13503 = Number of failed forms authentication ticket validations since the application was started.
13504 = Viewstate MAC Validation Failure
13505 = Number of viewstate MAC validations that failed since the application was started.
13506 = Request Execution Time
13507 = The number of milliseconds that it took to execute the most recent request.
13508 = Requests Disconnected
13509 = The number of requests disconnected due to communication errors or user terminated.
13510 = Requests Rejected
13511 = The number of requests rejected because the application request queue was full.
13512 = Request Wait Time
13513 = The number of milliseconds the most recent request was waiting in the queue.
13514 = Cache % Machine Memory Limit Used
13515 = The amount of physical memory used by the machine divided by the physical memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13516 = Cache % Machine Memory Limit Used Base
13517 = Cache % Machine Memory Limit Used Base
13518 = Cache % Process Memory Limit Used
13519 = The value of private bytes for the worker process divided by the private bytes memory limit for the cache, as a percentage.  When this reaches 100%, half of the cache entries will be forcibly removed.  The __Total__ instance is the average of all instances, and therefore cannot be used to determine when cache entries will be forcibly removed.
13520 = Cache % Process Memory Limit Used Base
13521 = Cache % Process Memory Limit Used Base
13522 = Cache Total Trims
13523 = Total number of entries forcibly removed from the cache due to memory pressure.
13524 = Cache API Trims
13525 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache using one of the public cache APIs.
13526 = Output Cache Trims
13527 = Total number of entries forcibly removed from the cache due to memory pressure that were originally inserted into the cache by the output cache feature.

[default]
sk1 = sv1
sk2 = sv2

[s2]
sk21 = "sdfsf"
sk22 = haha
sk22 = sv222

